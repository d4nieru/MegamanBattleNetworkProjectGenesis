<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_virus</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>VChild = noone;
Virus_Type = 0;
image_speed = 0;
Mask = spr_crashman_base;
Panel_I = true;
SaveX = 0;
SaveY = 0;
TargetY = 0;
TargetX = 0;
DiveBomb = false;
DBC = 0  // DBC = Dive Bomb Counter
Damage = 0;
Ex_Count = 0;
Ex_true = true;

//Direction
Direction = 0;
Up = 1;
Down = 2;
Left = 3;
Right = 4;

//Moving
Move_Count = 0;
MMT = 20;
Move_Timer = MMT;

//Stats
scr_virus_stats("CrashMan",E_None);
MaxHp = 800;
Hp = MaxHp;
spd = .7;
Power[1] = 40;
Power[2] = 25;
Power[3] = 30;
Power[4] = 25;

//States
Normal = 0;
Paused = 0;
Frozen = 0;
Dead = 5;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(VChild){
 instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Damage
if Hp &lt;= 0 {State = Dead}

if (Damage * -1) &gt;= Hp{
   Hp = 0;
} 
if State != Frozen &amp;&amp; State != Paused {
   if Hp = 0 {State = Dead;}
} 

if Hp &gt; MaxHp {Hp = MaxHp}
if Hp &lt; 0 {Hp = 0}
 
if Damage &gt; 0{
   Hp += 1;
   Damage -= 1;
}
if Damage &lt; 0{
   Hp -= 1;
   Damage += 1;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Sprite Variables
if place_meeting(x,y,obj_panel){
    IP = instance_place(x,y,obj_panel);
    MMP = instance_place(obj_megaman.x,obj_megaman.y,obj_panel);
    depth = IP.y * -1;
}

Base_S = spr_crashman_base;
Fade_In = spr_crashman_fadein;
Stab_S = spr_crashman_stab;
StabBomb_S = spr_crashman_bombstab;
Lanuch_S = spr_crashman_lanuch;
Dive_S = spr_crashman_dive;
Base2_S = spr_crashman_base2;

//Damage System
scr_weakness_system();
scr_battle_damage_crashman();

//State Control
if Hp &gt; 0 {State = obj_megaman.State}
if State != S_Paused &amp;&amp; State != S_Frozen &amp;&amp; Hp &gt; 0{

//Animation Speed
if sprite_index = Base_S &amp;&amp; image_index &gt; 0 {image_speed = spd}
if sprite_index = Lanuch_S {image_speed = .1}
if sprite_index = Stab_S {image_speed = .2}
if sprite_index = Dive_S {image_speed = .2}
if sprite_index = StabBomb_S {image_speed = .2}
if sprite_index = Base2_S {image_speed = spd}


//Random Attack Pattern
RA = choose(1,2)
if place_meeting(x,y,obj_panel) {BombPanel = instance_place(x,y,obj_panel).x-80}

//Random Movement
if place_meeting(x,y,obj_panel) {LaneY = instance_place(x,y,obj_panel).y}
RM = choose(Up,Down,Left,Right);
if sprite_index = Base_S &amp;&amp; image_speed = 0{
    Move_Timer -= 1;
    if Move_Timer &lt;= 0{
       //Scanning for opening panels
       switch(RM){
         case Up:
         if place_meeting(x,y-24,obj_panel_blue_mask) &amp;&amp; !place_meeting(x,y-24,obj_virus) &amp;&amp; !place_meeting(x,y-24,obj_object){
         with(instance_create(IP.x,IP.y-24,obj_virus_placeholder)){
               Owner = other.id;
               other.VChild = id;
         }             
            image_speed = spd;
            Direction = Up;
         }
         break;
         
         case Down:
         if place_meeting(x,y+24,obj_panel_blue_mask) &amp;&amp; !place_meeting(x,y+24,obj_virus) &amp;&amp; !place_meeting(x,y+24,obj_object){
         with(instance_create(IP.x,IP.y+24,obj_virus_placeholder)){
               Owner = other.id;
               other.VChild = id;
         }            
            image_speed = spd;
            Direction = Down;
         }
         break;  
         
         case Left:
         if place_meeting(x-40,y,obj_panel_blue_mask) &amp;&amp; !place_meeting(x-40,y,obj_virus) &amp;&amp; !place_meeting(x-40,y,obj_object){
         with(instance_create(IP.x-40,IP.y,obj_virus_placeholder)){
               Owner = other.id;
               other.VChild = id;
         }            
            image_speed = spd;
            Direction = Left;
         }
         break;
         
         case Right:
         if place_meeting(x+40,y,obj_panel_blue_mask) &amp;&amp; !place_meeting(x+40,y,obj_virus) &amp;&amp; !place_meeting(x+40,y,obj_object){
         with(instance_create(IP.x+40,IP.y,obj_virus_placeholder)){
               Owner = other.id;
               other.VChild = id;
         }            
            image_speed = spd;
            Direction = Right;
         }
         break;                         
         
       }
       
    }
}



//Attacking
//Sprite adjusting
if sprite_index = Dive_S{
  if y != TargetY{
   hspeed = -3;
   vspeed = 3;
   }
   if y = TargetY{
      hspeed = 0;
      vspeed = 0;
      DiveBomb = true;
   }
}

if Move_Count &gt;= 20 &amp;&amp; sprite_index = Base_S{
   if obj_megaman.x = 60 || obj_megaman.x = 20{
         with(instance_create(IP.x,IP.y,obj_virus_placeholder)){
               Owner = other.id;
               other.VChild = id;
         }      
      SaveX = x;
      SaveY = y;
      TargetY = 115-28;
      TargetX = xstart
      image_index = 0;
      image_speed = .3;
      sprite_index = Base2_S;
   }
   if obj_megaman.x = 100{
         with(instance_create(IP.x,IP.y,obj_virus_placeholder)){
               Owner = other.id;
               other.VChild = id;
         }      
      SaveX = x;
      SaveY = y;
      TargetY = 115-28;
      TargetX = xstart+40
      image_index = 0;
      image_speed = .3;
      sprite_index = Base2_S;
   }   
   Move_Count = 0;
}


if Move_Count = 9 &amp;&amp; sprite_index = Base_S &amp;&amp; RA = 1{
  if place_meeting(obj_megaman.x+40,obj_megaman.y,obj_panel) &amp;&amp; instance_place(obj_megaman.x+40,obj_megaman.y,obj_panel).Panel_Status &lt; 3{
       if !place_meeting(obj_megaman.x+40,obj_megaman.y,obj_virus) &amp;&amp; !place_meeting(obj_megaman.x+40,obj_megaman.y,obj_object){
         with(instance_create(IP.x,IP.y,obj_virus_placeholder)){
               Owner = other.id;
               other.VChild = id;
         }          
          SaveX = x;
          SaveY = y;
          x = instance_place(obj_megaman.x+40,obj_megaman.y,obj_panel).x+1;
          y = instance_place(obj_megaman.x+40,obj_megaman.y,obj_panel).y-28;
          image_index = 0;
          sprite_index = StabBomb_S;
          image_speed = .2;
       }
  }
   if Hp &gt; MaxHp/2 {Move_Count = 0;}
   if Hp &lt;= MaxHp/2 {Move_Count = 10;}
}



if Move_Count = 4 &amp;&amp; sprite_index = Base_S{
   if place_meeting(x,obj_megaman.y-12,obj_panel) &amp;&amp; instance_place(x,obj_megaman.y-12,obj_panel).Panel_Status &lt; 3{
         with(instance_create(IP.x,MMP.y,obj_virus_placeholder)){
               Owner = other.id;
               other.VChild = id;
         }       
       y = obj_megaman.y-12;
       image_index = 0;
       image_speed = .2;
       sprite_index = Stab_S;
   }
   Move_Count = 5;
}
if Move_Count = 6 &amp;&amp; sprite_index = Base_S{ //&amp;&amp; Hp &lt;= MaxHp/2{
   if place_meeting(x,obj_megaman.y-12,obj_panel) &amp;&amp; instance_place(x,obj_megaman.y-12,obj_panel).Panel_Status &lt; 3{
         with(instance_create(IP.x,MMP.y,obj_virus_placeholder)){
               Owner = other.id;
               other.VChild = id;
         }       
       y = obj_megaman.y-12;
       image_index = 0;
       image_speed = .2;
       sprite_index = Stab_S;
   }
   Move_Count = 7;
}



if Move_Count = 9 &amp;&amp; sprite_index = Base_S &amp;&amp; RA = 2{
   /*if Panel_I{
   instance_create(BombPanel-40,LaneY-3,obj_panel_indacator);
   instance_create(BombPanel-80,LaneY-3,obj_panel_indacator);
   Panel_I = false;
   }*/ //Take Out if Need be   
  if x = 141{
         with(instance_create(IP.x+40,IP.y,obj_virus_placeholder)){
               Owner = other.id;
               other.VChild = id;
         }     
     if instance_place(x+40,y,obj_panel).Panel_Status &lt; 3 {x = 181}
  } 
   image_index = 0;
   image_speed = .1;
   sprite_index = Lanuch_S;
   if Hp &gt; MaxHp/2 {Move_Count = 0;}
   if Hp &lt;= MaxHp/2 {Move_Count = 10;}
}

//Creating Instances
//CrashBomb
if sprite_index = Lanuch_S &amp;&amp; image_index &gt;= 2 &amp;&amp; image_index &lt; 2.2{
    if !instance_exists(obj_crashbomb){
        with(instance_create(x-17,y-29,obj_crashbomb)) {PanelX = other.BombPanel-40; LaneY = other.LaneY; Hspeed = -5.5}
        with(instance_create(x-5,y-24,obj_crashbomb)) {PanelX = other.BombPanel; LaneY = other.LaneY; Hspeed = -4.5}
    }
}

//CrashMine
if sprite_index = Stab_S &amp;&amp; image_index &gt;= 5 &amp;&amp; image_index &lt; 5.2{
    with(instance_create(x-25,y+9,obj_crashmine)){
      LaneY = other.LaneY
      if instance_number(obj_crashmine) = 1{
        Ex_Lane = 1
      }
      if instance_number(obj_crashmine) = 2{
        Ex_Lane = 2
      }      
    }
}

//BombStab
if sprite_index = StabBomb_S &amp;&amp; image_index &gt;= 6 &amp;&amp; image_index &lt; 6.2{
   instance_create(instance_place(x,y,obj_panel).x-40,instance_place(x,y,obj_panel).y-5,obj_expolsion_effect);
   if place_meeting(x,y+24,obj_panel){
      instance_create(instance_place(x,y+24,obj_panel).x-40,instance_place(x,y+24,obj_panel).y-5,obj_expolsion_effect);
   }
   if place_meeting(x,y-24,obj_panel){
      instance_create(instance_place(x,y-24,obj_panel).x-40,instance_place(x,y-24,obj_panel).y-5,obj_expolsion_effect);
   } 
   
   with(instance_place(x-40,y,obj_panel)){
      with(instance_create(x,y-3,obj_crashman_hitbox)){
          Power = obj_crashman.Power[3];
          Timer = -1;
          Semi = false;
      }
      
      if place_meeting(x,y+24,obj_panel){
      with(instance_create(x,y+21,obj_crashman_hitbox)){
          Power = obj_crashman.Power[3];
          Timer = -1;
          Semi = false;
      }          
      }
      
      if place_meeting(x,y-24,obj_panel){
      with(instance_create(x,y-27,obj_crashman_hitbox)){
          Power = obj_crashman.Power[3];
          Timer = -1;
          Semi = false;
      }          
      }
   }  
}

//Super Dive Bomb
if sprite_index = Dive_S &amp;&amp; DiveBomb &amp;&amp; image_index &gt;= 6.9{
   DBC += 1;
   with(instance_place(x-40,y,obj_panel)){
        instance_create(x,y-5,obj_expolsion_effect);
        instance_create(x,y-29,obj_expolsion_effect);
        instance_create(x,y+19,obj_expolsion_effect);
        
        instance_create(x+40,y-5,obj_expolsion_effect);
        instance_create(x+40,y-29,obj_expolsion_effect);
        instance_create(x+40,y+19,obj_expolsion_effect);
        
        if other.DBC = 1{
           with(instance_create(x,y-3,obj_crashman_hitbox)){
              Power = obj_crashman.Power[4];
              Timer = -1
              Semi = true;
           }
           with(instance_create(x,y-27,obj_crashman_hitbox)){
              Power = obj_crashman.Power[4];
              Timer = -1
              Semi = true;
           }   
           with(instance_create(x,y+21,obj_crashman_hitbox)){
              Power = obj_crashman.Power[4];
              Timer = -1
              Semi = true;
           }
           
           with(instance_create(x+40,y-3,obj_crashman_hitbox)){
              Power = obj_crashman.Power[4];
              Timer = -1
              Semi = true;
           }
           with(instance_create(x+40,y-27,obj_crashman_hitbox)){
              Power = obj_crashman.Power[4];
              Timer = -1
              Semi = true;
           }
           with(instance_create(x+40,y+21,obj_crashman_hitbox)){
              Power = obj_crashman.Power[4];
              Timer = -1
              Semi = true;
           }        
        }
        
        if other.DBC = 2{
           with(instance_create(x,y-3,obj_crashman_hitbox)){
              Power = obj_crashman.Power[4];
              Timer = -1
              Semi = true;
           }
           with(instance_create(x,y-27,obj_crashman_hitbox)){
              Power = obj_crashman.Power[4];
              Timer = -1
              Semi = true;
           }   
           with(instance_create(x,y+21,obj_crashman_hitbox)){
              Power = obj_crashman.Power[4];
              Timer = -1
              Semi = true;
           }
           
           with(instance_create(x+40,y-3,obj_crashman_hitbox)){
              Power = obj_crashman.Power[4];
              Timer = -1
              Semi = true;
           }
           with(instance_create(x+40,y-27,obj_crashman_hitbox)){
              Power = obj_crashman.Power[4];
              Timer = -1
              Semi = true;
           }
           with(instance_create(x+40,y+21,obj_crashman_hitbox)){
              Power = obj_crashman.Power[4];
              Timer = -1
              Semi = true;
           }        
        }        
        
        if other.DBC = 3{
          if Panel_Status = 1 {Cracked = true}
          if Panel_Status = 2 &amp;&amp; !place_meeting(x,y,obj_megaman) {Broke = true}
          with(instance_place(x,y+24,obj_panel)){
             if Panel_Status = 1 {Cracked = true}
             if Panel_Status = 2 &amp;&amp; !place_meeting(x,y,obj_megaman) {Broke = true}
          }
          with(instance_place(x,y-24,obj_panel)){
             if Panel_Status = 1 {Cracked = true}
             if Panel_Status = 2 &amp;&amp; !place_meeting(x,y,obj_megaman) {Broke = true}
          }
          
          with(instance_place(x+40,y,obj_panel)){
             if Panel_Status = 1 {Cracked = true}
             if Panel_Status = 2 &amp;&amp; !place_meeting(x,y,obj_megaman) {Broke = true}
          }
          with(instance_place(x+40,y+24,obj_panel)){
             if Panel_Status = 1 {Cracked = true}
             if Panel_Status = 2 &amp;&amp; !place_meeting(x,y,obj_megaman) {Broke = true}
          }   
          with(instance_place(x+40,y-24,obj_panel)){
             if Panel_Status = 1 {Cracked = true}
             if Panel_Status = 2 &amp;&amp; !place_meeting(x,y,obj_megaman) {Broke = true}
          }   
          
          
          with(instance_create(x,y-3,obj_crashman_hitbox)){
              Power = obj_crashman.Power[4];
              Timer = -1
              Semi = true;
           }
           with(instance_create(x,y-27,obj_crashman_hitbox)){
              Power = obj_crashman.Power[4];
              Timer = -1
              Semi = true;
           }   
           with(instance_create(x,y+21,obj_crashman_hitbox)){
              Power = obj_crashman.Power[4];
              Timer = -1
              Semi = true;
           }
           
           with(instance_create(x+40,y-3,obj_crashman_hitbox)){
              Power = obj_crashman.Power[4];
              Timer = -1
              Semi = true;
           }
           with(instance_create(x+40,y-27,obj_crashman_hitbox)){
              Power = obj_crashman.Power[4];
              Timer = -1
              Semi = true;
           }
           with(instance_create(x+40,y+21,obj_crashman_hitbox)){
              Power = obj_crashman.Power[4];
              Timer = -1
              Semi = true;
           }                      
        }
   }
}

if DBC = 3{
    DiveBomb = false;
    DBC = 0;
    image_index = 0;
    image_speed = 0;
    sprite_index = Base_S;
    x = SaveX;
    y = SaveY;
    SaveX = 0;
    SaveY = 0;
    TargetY = 0;
    TargetX = 0;
}

}


if State = S_Paused || State = S_Frozen{
   if sprite_index != Fade_In {image_speed = 0;}
   hspeed = 0;
   vspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///States
if State = Dead &amp;&amp; obj_megaman.State = S_Normal{
  image_speed = 0;
  image_index = 0;
  sprite_index = spr_crashman_dead;
  
  if Ex_Count = 0 &amp;&amp; Ex_true{
     Ex_true = false;
     with(instance_create(x-11,y+7,obj_expolsion_effect)){
        Owner = other.id;
        Ex_Count = true;
     }    
  }
   if Ex_Count = 1 &amp;&amp; Ex_true{
     Ex_true = false;
     with(instance_create(x+13,y-11,obj_expolsion_effect)){
        Owner = other.id;
        Ex_Count = true;
     }    
  }
   if Ex_Count = 2 &amp;&amp; Ex_true{
     instance_destroy();
     Ex_true = false;
     with(instance_create(x+1,y+10,obj_expolsion_effect)){
        Owner = other.id;
        Ex_Count = true;
     }    
  }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Moving
if sprite_index = Base_S{
     switch(Direction){
        case Up:
        image_index = 0;
        y -= 24;
        Move_Timer = MMT;
        Direction = 0;
        image_speed = 0;
        Move_Count += 1;
        break;
        
        case Down:
        image_index = 0;       
         y += 24;
        Move_Timer = MMT;
        Direction = 0;
        image_speed = 0;
        Move_Count += 1;        
        break; 
        
        case Left:
        image_index = 0;
        x -= 40;
        Move_Timer = MMT;
        Direction = 0;
        image_speed = 0;
        Move_Count += 1;        
        break; 
        
        case Right:
        image_index = 0;
        x += 40;
        Move_Timer = MMT;
        Direction = 0;
        image_speed = 0;
        Move_Count += 1;        
        break;                      
     }
}

if sprite_index = Lanuch_S{
    image_index = 0;
    sprite_index = Base_S;
    image_speed = 0;
    Move_Timer = MMT+20;
}

if sprite_index = Stab_S{
    image_index = 0;
    sprite_index = Base_S;
    image_speed = 0;
    Move_Timer = MMT+20;
}

if sprite_index = StabBomb_S{
    x = SaveX;
    y = SaveY;
    SaveX = 0;
    SaveY = 0;
    image_index = 0;
    sprite_index = Base_S;
    image_speed = 0;
    Move_Timer = MMT+20;
}

//Super Dive Bomb
if sprite_index = Base2_S{
    sprite_index = Dive_S;
    image_index = 0;
    image_speed = .2;
    y = ystart-120;
    x = TargetX;
}

if sprite_index = Dive_S{
    image_index = 3;
}

with(VChild){
   instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

if Hp &gt; 0 &amp;&amp; sprite_index != spr_crashman_dive &amp;&amp; sprite_index != Fade_In &amp;&amp; image_alpha != 0{
draw_set_font(obj_field.EnemyHp_Font);
draw_text(x-12,y+28,round(Hp));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
