<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_boomer_base</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_virus</parentName>
  <maskName>spr_boomer_base</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Mask = spr_boomer_base;
VChild = noone;
//Target_Panel = instance_place(x,y,obj_panel);

//Stats
scr_virus_stats("Boomer",E_Wood);
MaxHp = 70;
Hp = MaxHp;
spd = .5;
Power = 30;

//Direction
Attacking = false;
MAT = 30;
Attack_Timer = MAT;
Boomerang = true;
Up = 0;
Down = 1;
if y = 72 {Direction = Down}
if y = 72+24 {Direction = choose(Up,Down)}
if y = 72+48 {Direction = Up}
MMT = 50;
Move_Timer = MMT;
Moving = false;

//States
State = 0;
Normal = 0
Paused = 0
Frozen = 0
Dead = 5

//Death
Damage = 0;
Ex_Count = 0;
Ex_true = true;

//Create Event Scripts
scr_panel_effects(1);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Damage
if Hp &lt; 0 {Hp = 0}

if (Damage * -1) &gt;= Hp{
   Hp = 0;
} 

if Hp &lt;= 0 {State = Dead;}


if Hp &gt; MaxHp {Hp = MaxHp}

if Damage &gt; 0{
   Hp += 1;
   Damage -= 1;
}
if Damage &lt; 0{
   Hp -= 1;
   Damage += 1;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation
depth = -y;
if Hp &gt; 0 {State = obj_megaman.State}

//Variables
Base_S = spr_boomer_base;
Fade_In = spr_boomer_fadein;
Throw_S = spr_boomer_throw;
Catch_S = spr_boomer_catch;

BaseFlash_S = spr_boomer_base_flash;
ThrowFlash_S = spr_boomer_throw_flash;
CatchFlash_S = spr_boomer_catch_flash;

if State = S_Normal{
//Speed
if sprite_index = Base_S {image_speed = .1}
if sprite_index = Throw_S {image_speed = .2}
if sprite_index = Catch_S {image_speed = .2}
}

if State != S_Normal{
  if sprite_index != Fade_In {image_speed = 0;}
}

//Shield
if sprite_index = Throw_S &amp;&amp; image_index &gt;= 2{
  Shield = false;
} else {Shield = true}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
IP = instance_place(x,y,obj_panel);
if State = S_Normal{
scr_panel_effects(0);
if Moving{
   switch(Direction){
       case Down:
       vspeed = spd;
       break;
       
       case Up:
       vspeed = -spd;
       break;
   }
}

if sprite_index = Base_S &amp;&amp; vspeed = 0 &amp;&amp; !Attacking{
   Move_Timer -= 1;
   if Move_Timer = 0{
      Move_Timer = MMT; 
      switch(Direction){
         case Down:
         if !place_meeting(x,y+24,obj_virus) &amp;&amp; !place_meeting(x,y+24,obj_object) &amp;&amp; instance_place(x,y+24,obj_panel_blue).sprite_index = spr_panel_blue{
           if place_meeting(x,y+24,obj_panel){            
            Target_Panel = instance_place(x,y+24,obj_panel).y-19;
            Moving = true;
            }
         }
         if place_meeting(x,y+24,obj_virus) || place_meeting(x,y+24,obj_object) || instance_place(x,y+24,obj_panel_blue).sprite_index != spr_panel_blue{
             Attacking = true;
         }
         break;
         
         case Up:
         if !place_meeting(x,y-24,obj_virus) &amp;&amp; !place_meeting(x,y-24,obj_object) &amp;&amp; instance_place(x,y-24,obj_panel_blue).sprite_index = spr_panel_blue{
          if place_meeting(x,y-24,obj_panel){             
            Target_Panel = instance_place(x,y-24,obj_panel).y-19;
            Moving = true;
            }
         }
         if place_meeting(x,y-24,obj_virus) || place_meeting(x,y-24,obj_object) || instance_place(x,y-24,obj_panel_blue).sprite_index != spr_panel_blue{
            Attacking = true;
         }         
         break;         
      }
   }
}

if sprite_index = Base_S &amp;&amp; vspeed != 0{
   if vspeed &gt; 0{  
      if y &gt;= Target_Panel{
         if place_meeting(x,y+24,obj_virus) || place_meeting(x,y+24,obj_object){
            y = 72+24
            Moving = false;
            vspeed = 0
         }
      }
         if y &gt;= 72+48{
            y = 72+48;
            Moving = false;
            vspeed = 0;
            Attacking = true;
         }      
   }
   
   if vspeed &lt; 0{  
      if y &lt;= Target_Panel{
         if place_meeting(x,y-24,obj_virus) || place_meeting(x,y-24,obj_object){
            y = 72+24
            Moving = false;
            vspeed = 0
         }
         if y &lt;= 72{
            y = 72;
            Moving = false;
            vspeed = 0;
            Attacking = true;
         }
      }
   }   
}

}

if State != S_Normal{
  hspeed = 0;
  vspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attacking
scr_weakness_system();
scr_battle_damage_enemy();

if Attacking{
  Attack_Timer -= 1;
  if Attack_Timer = 0{
    image_index = 0;
    sprite_index = Throw_S
  }
}
if sprite_index = Throw_S &amp;&amp; image_index &gt;= 3 &amp;&amp; Boomerang{
   Boomerang = false;
   with(instance_create(x-48,y+10,obj_boomer_boomerang)){
     Power = other.Power;
     Owner = other.id;
     other.Child = id;
     if other.y = 72 {D_Change = Down; D_Turn = (72+48)-1}
     if other.y = 72+24 {D_Change = Right; D_Turn = 0}
     if other.y = 72+48 {D_Change = Up; D_Turn = 71}
   }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Death
if State = Dead &amp;&amp; obj_megaman.State = S_Normal{  
   image_speed = 0;
  if sprite_index = Base_S{
     sprite_index = BaseFlash_S;
  }
  if sprite_index = Throw_S{
      sprite_index = ThrowFlash_S;
  }
  if sprite_index = Catch_S{
     sprite_index = CatchFlash_S;
  }
  if Ex_Count = 0 &amp;&amp; Ex_true{
     Ex_true = false;
     with(instance_create(x-16,y-15,obj_expolsion_effect)){
        Owner = other.id;
        Ex_Count = true;
     }    
  }
   if Ex_Count = 1 &amp;&amp; Ex_true{
     Ex_true = false;
     with(instance_create(x+13,y-16,obj_expolsion_effect)){
        Owner = other.id;
        Ex_Count = true;
     }    
  }
   if Ex_Count = 2 &amp;&amp; Ex_true{
     instance_destroy();
     Ex_true = false;
     with(instance_create(x+1,y-3,obj_expolsion_effect)){
        Owner = other.id;
        Ex_Count = true;
     }    
  }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_index = Throw_S{
  image_index = 3;
}
if sprite_index = Catch_S{
    image_index = 0;
    sprite_index = Base_S;
    Boomerang = true;
   if Direction = Up &amp;&amp; y != 72+48{
      Direction = Down;
      exit;
   }
   if Direction = Down &amp;&amp; y != 72{
    Direction = Up;
    exit;
   }    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

if Hp &gt; 0 &amp;&amp; sprite_index != Fade_In{
draw_set_font(obj_field.EnemyHp_Font);
draw_text(x-4,y-20,round(Hp));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
