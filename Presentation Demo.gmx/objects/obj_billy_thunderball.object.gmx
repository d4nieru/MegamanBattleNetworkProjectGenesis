<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_thunderball</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_thunderball</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>IP = instance_place(x,y,obj_panel);
Power = 30;
with(instance_create(IP.x,IP.y,obj_panel_indacator)){
    VOwner = other.id;
}
with(instance_create(IP.x,IP.y-3,obj_toadman_hitbox)){
        Power = other.Power
        Travel = false;
        Timer = 0;
        Element = E_Elec;
        Stun = true;
        VOwner = other.id;
        other.ThunderBall = id;
}
mask_index = spr_thunderball;
IP_Next = -4;
death = false;
Death_Timer = 0;
DC = true;
hsp = -.5;
vsp = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(obj_panel_indacator){
  if VOwner = other.id{
      instance_destroy();
  }
}
with(obj_toadman_hitbox){
  if VOwner = other.id{
      instance_destroy();
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(obj_panel_indacator){
  if VOwner = other.id{
      IP = other.IP;
      x = IP.x;
      y = IP.y;
  }
}
with(obj_toadman_hitbox){
  if VOwner = other.id{
      IP = other.IP;
      x = IP.x;
      y = IP.y-3;
  }
}
if !instance_exists(Owner){
    instance_destroy();
}
if !instance_exists(ThunderBall){
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>State = obj_megaman.State;
MM = obj_megaman;
MMPY = MM.StandPY; //instance_place(MM.x,MM.y,obj_panel);
MMPX = MM.StandPX;
if place_meeting(x,y,obj_panel){
   IP = instance_place(x,y,obj_panel);
   depth = (IP.y *-1)-10;
}
image_round = round(image_index);
MTest = MM.StandPY;
IPTest = IP.y;

if !death{
    if image_round = 8 {image_index = 0};
}

if State = S_Normal{
    image_speed = .2;
    hspeed = hsp;
    vspeed = vsp;
    
    //Death Counter
    Death_Timer += 1;
    if Death_Timer = room_speed*6{
       death = true;
    }
    
    //Direction Change
    if DC{
        if MMPX = IP.x &amp;&amp; MMPY = IP.y{
            hsp = 0;
            vsp = 0;
            exit;
        }        
        if MMPX &lt; IP.x{
            DC = false;
            hsp = -.5;
            vsp = 0;
            IP_Next = instance_place(x-40,y,obj_panel);
            exit;
        }
        if MMPX &gt; IP.x{
            DC = false;
            hsp = .5;
            vsp = 0;
            IP_Next = instance_place(x+40,y,obj_panel);
            exit;
        }
        if MMPY &lt; IP.y{
            DC = false;
            vsp = -.5;
            hsp = 0;
            IP_Next = instance_place(x,y-24,obj_panel);
            exit;
        }
        if MMPY &gt; IP.y{
            DC = false;
            vsp = .5;
            hsp = 0;
            IP_Next = instance_place(x,y+24,obj_panel);
            exit;
        }                        
    }
    
    if !DC{
        if hsp &gt; 0 &amp;&amp; x = IP_Next.x{
            DC = true;
            exit;
        }
        if hsp &lt; 0 &amp;&amp; x = IP_Next.x{
            DC = true;
            exit;
        }
        if vsp &gt; 0 &amp;&amp; y = IP_Next.y-5{
            DC = true;
            exit;
        }
        if vsp &lt; 0 &amp;&amp; y = IP_Next.y-5{
            DC = true;
            exit;
        }                        
    }
}

if State != S_Normal{
    image_speed = 0;
    hspeed = 0;
    vspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
