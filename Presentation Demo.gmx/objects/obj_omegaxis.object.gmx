<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_omegaxis_summon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_virus</parentName>
  <maskName>spr_omegaxis_base</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_megamanSF_boss){
   with(obj_megamanSF_boss){
      Summon_OmegaXis = true;
   }
}

VChild = noone;
Child = noone;
Virus_Type = 0;
Mask = spr_omegaxis_base
//Fade_In = spr_champy_fadein
Ex_Count = 0;
Ex_true = true;
Damage = 0;
State = -1;

Direction = 0;
Right = 1;
Left = 2;
Up = 3;
Down = 4;
URight = 5;
ULeft = 6;
DRight = 7;
DLeft = 8;
Return = 9;
Attack = 10;

MMT = 10;
Move_Timer = MMT
Move_Count = 0;
Move = true
ReMove = 0;

MAT = 60;
Attack_Timer = MAT;
Uppercut = 0;
MUT = 30;
Uppercut_Timer = MUT;
Damage = 0;

Normal = 0;
Frozen = 0;
Paused = 0;
Dead = 5;

//Stats
scr_virus_stats("Omega-Xis",E_None);
MaxHp = 150;
Hp = MaxHp;
Power = 40;
Shield = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Damage
if Hp &lt;= 0 {State = Dead}

if (Damage * -1) &gt;= Hp{
   Hp = 0;
} 
if State != Frozen &amp;&amp; State != Paused {
   if Hp = 0 {State = Dead;}
} 

if Hp &gt; MaxHp {Hp = MaxHp}
if Hp &lt; 0 {Hp = 0}
 
if Damage &gt; 0{
   Hp += 1;
   Damage -= 1;
}
if Damage &lt; 0{
   Hp -= 1;
   Damage += 1;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation Variables
if Hp &gt; 0 {State = obj_megaman.State}
MM = obj_megaman;
if place_meeting(MM.x,MM.y,obj_panel){
    MMP = instance_place(MM.x,MM.y,obj_panel);
}    
if place_meeting(x,y,obj_panel){
  IP = instance_place(x,y,obj_panel);
  depth = IP.y*-1-1;
}

Base_S = spr_omegaxis_base;
Summon_S = spr_omegaxis_summon;
Move_S = spr_omegaxis_move;
Attack_S = spr_omegaxis_attack;
Hurt_Flash_S = spr_omegaxis_flash

if State = S_Normal{

if sprite_index = Base_S {image_speed = .2;}
if sprite_index = Summon_S {image_speed = .2;}
if sprite_index = Move_S {image_speed = .4;}
if sprite_index = Attack_S &amp;&amp; image_index = 0 {image_speed = 0;}
if sprite_index = Attack_S &amp;&amp; image_index &gt; 0 {image_speed = .4;}
if sprite_index = Hurt_Flash_S {image_speed = 0;}

}

if State != S_Normal{
  image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
RM = choose(Right,Left,Up,Down,URight,ULeft,DRight,DLeft);
scr_weakness_system();
scr_battle_damage_enemy();

if Move &amp;&amp; sprite_index = Base_S{
    Move_Timer -= 1;
    if Move_Timer &lt; 1{  
     switch(RM){
       case Right:
       if place_meeting(x+40,y,obj_panel_blue_mask){
            if !place_meeting(x+40,y,obj_object) &amp;&amp; !place_meeting(x+40,y,obj_virus){
               image_index = 0;
               sprite_index = Move_S;
               Direction = Right;
               Move_Timer = MMT;
               exit;
            }
       }
       break;
       
       case Left:
       if place_meeting(x-40,y,obj_panel_blue_mask){
            if !place_meeting(x-40,y,obj_object) &amp;&amp; !place_meeting(x-40,y,obj_virus){
               image_index = 0;
               sprite_index = Move_S;
               Direction = Left;
               Move_Timer = MMT;
               exit;
            }
       }
       break;
       
       case Down:
       if place_meeting(x,y+24,obj_panel_blue_mask){
            if !place_meeting(x,y+24,obj_object) &amp;&amp; !place_meeting(x,y+24,obj_virus){
               image_index = 0;
               sprite_index = Move_S;
               Direction = Down;
               Move_Timer = MMT;
               exit;
            }
       }
       break 
       
       case Up:
       if place_meeting(x,y-24,obj_panel_blue_mask){
            if !place_meeting(x,y-24,obj_object) &amp;&amp; !place_meeting(x,y-24,obj_virus){
               image_index = 0;
               sprite_index = Move_S;
               Direction = Up;
               Move_Timer = MMT;
               exit;
            }
       }
       break; 
       
       case URight:
       if place_meeting(x+40,y-24,obj_panel_blue_mask){
            if !place_meeting(x+40,y-24,obj_object) &amp;&amp; !place_meeting(x+40,y-24,obj_virus){
               image_index = 0;
               sprite_index = Move_S;
               Direction = URight;
               Move_Timer = MMT;
               exit;
            }
       }
       break; 
       
       case ULeft:
       if place_meeting(x-40,y-24,obj_panel_blue_mask){
            if !place_meeting(x-40,y-24,obj_object) &amp;&amp; !place_meeting(x-40,y-24,obj_virus){
               image_index = 0;
               sprite_index = Move_S;
               Direction = ULeft;
               Move_Timer = MMT;
               exit;
            }
       }
       break;  
       
       case DRight:
       if place_meeting(x+40,y+24,obj_panel_blue_mask){
            if !place_meeting(x+40,y+24,obj_object) &amp;&amp; !place_meeting(x+40,y+24,obj_virus){
               image_index = 0;
               sprite_index = Move_S;
               Direction = DRight;
               Move_Timer = MMT;
               exit;
            }
       }
       break;   
       
       case DLeft:
       if place_meeting(x-40,y+24,obj_panel_blue_mask){
            if !place_meeting(x-40,y+24,obj_object) &amp;&amp; !place_meeting(x-40,y+24,obj_virus){
               image_index = 0;
               sprite_index = Move_S;
               Direction = DLeft;
               Move_Timer = MMT;
               exit;
            }
       }
       break;                        
       }                   
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attack

if sprite_index != Attack_S{
   Attack_Timer = 0;
}

if State = S_Normal{

if sprite_index = Attack_S &amp;&amp; image_index = 0{
  Attack_Timer += 1;
  if Attack_Timer = room_speed/2{
        image_index = 0.1;
        Attack_Timer = 0;
  }
}

if !Move{
   ReMove += 1;
   if ReMove = room_speed*2{
      ReMove = 0;
      Move = true;
   } 
}

if Move_Count = 5 &amp;&amp; sprite_index = Base_S{
   if instance_place(MM.x+40,MM.y,obj_panel).Panel_Status != 3 &amp;&amp; instance_place(MM.x+40,MM.y,obj_panel).Panel_Status != 4{
       if !place_meeting(MM.x+40,MM.y,obj_object) &amp;&amp; !place_meeting(MM.x+40,MM.y,obj_virus){
          SaveX = x;
          SaveY = y;
          TargetX = MMP.x+40-1;
          TargetY = MMP.y-28;
          sprite_index = Move_S;
          Direction = Attack;
       }
   }
}

if Move_Count = 6 &amp;&amp; sprite_index = Base_S{
   if instance_place(MM.x+40,MM.y,obj_panel).Panel_Status != 3 &amp;&amp; instance_place(MM.x+40,MM.y,obj_panel).Panel_Status != 4{
       if !place_meeting(MM.x+40,MM.y,obj_object) &amp;&amp; !place_meeting(MM.x+40,MM.y,obj_virus){
          TargetX = MMP.x+40-1;
          TargetY = MMP.y-28;
          sprite_index = Move_S;
          Direction = Attack;
       }
   }
}

if Move_Count = 7 &amp;&amp; sprite_index = Base_S{
   if instance_place(MM.x+40,MM.y,obj_panel).Panel_Status != 3 &amp;&amp; instance_place(MM.x+40,MM.y,obj_panel).Panel_Status != 4{
       if !place_meeting(MM.x+40,MM.y,obj_object) &amp;&amp; !place_meeting(MM.x+40,MM.y,obj_virus){
          TargetX = MMP.x+40-1;
          TargetY = MMP.y-28;
          sprite_index = Move_S;
          Direction = Attack;
       }
   }
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hitbox
if sprite_index != Attack_S{
  HitBox = true;
}

if sprite_index = Attack_S{
   if image_index &gt;= 2 &amp;&amp; HitBox{
       HitBox = false;
       //Create Effect
       instance_create(IP.x-52,IP.y-3,obj_omega_slash_effect);
       audio_play_sound(sou_sword_swing,0,0);
       //Hitbox
       if place_meeting(x-40,y,obj_panel){
           with(instance_create(IP.x-40,IP.y-3,obj_megamanSF_hitbox)){
              Hurt = true;
              Timer = 5;
              Power = 40;
           }
       }
       if place_meeting(x-40,y+24,obj_panel){
           with(instance_create(IP.x-40,IP.y+24-3,obj_megamanSF_hitbox)){
              Hurt = true;
              Timer = 5;
              Power = 40;
           }
       }  
       if place_meeting(x-40,y-24,obj_panel){
           with(instance_create(IP.x-40,IP.y-24-3,obj_megamanSF_hitbox)){
              Hurt = true;
              Timer = 5;
              Power = 40;
           }
       }  
       if place_meeting(x-80,y,obj_panel){
           with(instance_create(IP.x-80,IP.y-3,obj_megamanSF_hitbox)){
              Hurt = true;
              Timer = 5;
              Power = 40;
           }
       } 
       if place_meeting(x-80,y+24,obj_panel){
           with(instance_create(IP.x-80,IP.y+24-3,obj_megamanSF_hitbox)){
              Hurt = true;
              Timer = 5;
              Power = 40;
           }
       }
       if place_meeting(x-80,y-24,obj_panel){
           with(instance_create(IP.x-80,IP.y-24-3,obj_megamanSF_hitbox)){
              Hurt = true;
              Timer = 5;
              Power = 40;
           }
       }                              
   }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Death
if State = Dead &amp;&amp; obj_megaman.State = S_Normal{
  image_speed = 0;
  sprite_index = Hurt_Flash_S;
  image_alpha = 1;

  
  
  if Ex_Count = 0 &amp;&amp; Ex_true{
     Ex_true = false;
     with(instance_create(x-11,y+6,obj_expolsion_effect)){
        Owner = other.id;
        Ex_Count = true;
     }    
  }
   if Ex_Count = 1 &amp;&amp; Ex_true{
     Ex_true = false;
     with(instance_create(x+13,y-12,obj_expolsion_effect)){
        Owner = other.id;
        Ex_Count = true;
     }    
  }
   if Ex_Count = 2 &amp;&amp; Ex_true{
     instance_destroy();
     Ex_true = false;
     with(instance_create(x+5,y+9,obj_expolsion_effect)){
        Owner = other.id;
        Ex_Count = true;
     }    
  }

  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_index = Summon_S{
  sprite_index = Base_S;
}

if sprite_index = Move_S{
    switch(Direction){
      case Right:
      x+=40;
      sprite_index = Base_S;
      Move_Count += 1;
      break;
      
      case Left:
      x-=40;
      sprite_index = Base_S;
      Move_Count += 1;
      break;
      
      case Down:
      y+=24;
      sprite_index = Base_S;
      Move_Count += 1;
      break; 
      
      case Up:
      y-=24;
      sprite_index = Base_S;
      Move_Count += 1;
      break; 
      
      case URight:
      y-=24;
      x+=40
      sprite_index = Base_S;
      Move_Count += 1;
      break;   
      
      case ULeft:
      y-=24;
      x-=40
      sprite_index = Base_S;
      Move_Count += 1;
      break; 
      
      case DRight:
      y+=24;
      x+=40
      sprite_index = Base_S;
      Move_Count += 1;
      break;   
      
      case DLeft:
      y+=24;
      x-=40
      sprite_index = Base_S;
      Move_Count += 1;
      break; 
      
      case Attack:
      y = TargetY;
      x = TargetX;
      image_index = 0;
      sprite_index = Attack_S;
      exit;
      break;  
      
      case Return:
      y = SaveY;
      x = SaveX;
      sprite_index = Base_S;
      Move = false
      break;                                               
    }    
}

if sprite_index = Attack_S{
  if Move_Count &lt; 7{
    Move_Count += 1;
    sprite_index = Base_S
    exit;
  }
  if Move_Count = 7{
    Move_Count = 0;
    sprite_index = Move_S;
    Direction = Return;
    exit;
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

if Hp &gt; 0 &amp;&amp; image_alpha != 0{
draw_set_font(obj_field.EnemyHp_Font);
draw_text(x-7,y-29,round(Hp));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
