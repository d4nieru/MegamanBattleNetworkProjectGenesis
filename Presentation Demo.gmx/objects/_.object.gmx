<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_sword</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_ingamechip_player</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* Sword Types
    Normal = 1;
    Fire = 2;
    Aqua = 3;
    Elec = 4;
    Bamboo = 5;
*/


Sword_Type = 0;
Sword_Set = true;
HitBox = 1;
Sound_Play = true; 
Used = "Used";
global.Slot_Name[1] = Used;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State Manage
depth = Owner.depth-1;
Sword_Start = 0;
Sword_End = 5;
Sword_Hitbox = 1;
FireSword_Start = 6;
FireSword_End = 12;
FireSword_Hitbox = 7;
AquaSword_Start = 13;
AquaSword_End = 19;
AquaSword_Hitbox = 14;
ElecSword_Start = 20;
ElecSword_End = 26;
ElecSword_Hitbox = 21;
BambooSword_Start = 27;
BambooSword_End = 32;
BambooSword_Hitbox = 28;

State = obj_megaman.State;
if Sword_Set{
if Sword_Type = 1{
   image_index = Sword_Start;
}
if Sword_Type = 2{
   image_index = FireSword_Start;
}
if Sword_Type = 3{
   image_index = AquaSword_Start;
}
if Sword_Type = 4{
   image_index = ElecSword_Start;
}
if Sword_Type = 3{
   image_index = BambooSword_Start;
}
Sword_Set = false;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sprite Animation Control
Sword_Start = 0;
Sword_End = 5;
Sword_Hitbox = 1;
FireSword_Start = 6;
FireSword_End = 12;
FireSword_Hitbox = 7;
AquaSword_Start = 13;
AquaSword_End = 19;
AquaSword_Hitbox = 14;
ElecSword_Start = 20;
ElecSword_End = 26;
ElecSword_Hitbox = 21;
BambooSword_Start = 27;
BambooSword_End = 32;
BambooSword_Hitbox = 28;

if State = S_Normal{
if Sword_Type = 1 &amp;&amp; image_index &gt;= Sword_End{
  //Set Player to idle and clear the first chip slot
  instance_destroy();
  with(Owner){
     sprite_index = Base_S;
     image_index = 0;
     image_speed = 0;
     if global.Slot_Name[1] = other.Used{
           global.Slot_Name[1] = "";
           global.Slot_Code[1] = -1;
           global.Slot_Power[1] = -1;
           global.Slot_Element[1] = -1;
           global.Slot_Icon[1] = -1; 
        }    
  }
}
if Sword_Type = 2 &amp;&amp; image_index &gt;= FireSword_End{
  //Set Player to idle and clear the first chip slot
  instance_destroy();
  with(Owner){
     image_index = 0;
     image_speed = 0;
     sprite_index = Base_S;
     if global.Slot_Name[1] = other.Used{
           global.Slot_Name[1] = "";
           global.Slot_Code[1] = -1;
           global.Slot_Power[1] = -1;
           global.Slot_Element[1] = -1;
           global.Slot_Icon[1] = -1; 
        }    
  }
}
if Sword_Type = 3 &amp;&amp; image_index &gt;= AquaSword_End{
  //Set Player to idle and clear the first chip slot
  instance_destroy();
  with(Owner){
     image_index = 0;
     image_speed = 0;
     sprite_index = Base_S;
     if global.Slot_Name[1] = other.Used{
           global.Slot_Name[1] = "";
           global.Slot_Code[1] = -1;
           global.Slot_Power[1] = -1;
           global.Slot_Element[1] = -1;
           global.Slot_Icon[1] = -1; 
        }    
  }
}
if Sword_Type = 4 &amp;&amp; image_index &gt;= ElecSword_End{
  //Set Player to idle and clear the first chip slot
  instance_destroy();
  with(Owner){
     image_index = 0;
     image_speed = 0;
     sprite_index = Base_S;
     if global.Slot_Name[1] = other.Used{
           global.Slot_Name[1] = "";
           global.Slot_Code[1] = -1;
           global.Slot_Power[1] = -1;
           global.Slot_Element[1] = -1;
           global.Slot_Icon[1] = -1; 
        }    
  }
}
if Sword_Type = 5 &amp;&amp; image_index &gt;= BambooSword_End{
  //Set Player to idle and clear the first chip slot
  instance_destroy();
  with(Owner){
     image_index = 0;
     image_speed = 0;
     sprite_index = Base_S;
     if global.Slot_Name[1] = other.Used{
           global.Slot_Name[1] = "";
           global.Slot_Code[1] = -1;
           global.Slot_Power[1] = -1;
           global.Slot_Element[1] = -1;
           global.Slot_Icon[1] = -1; 
        }    
  }
}

//Controlling the Player
if image_index = Sword_Start || image_index = FireSword_Start || image_index = AquaSword_Start || image_index = ElecSword_Start || image_index = BambooSword_Start{
   Owner.image_index = 1
}
if image_index &gt;= Sword_Start+1 || image_index &gt;= FireSword_Start+1 || image_index &gt;= AquaSword_Start+1 || image_index &gt;= ElecSword_Start+1 || image_index &gt;= BambooSword_Start+1{
   Owner.image_index = 2
}
if image_index &gt;= Sword_Start+2 || image_index &gt;= FireSword_Start+2 || image_index &gt;= AquaSword_Start+2 || image_index &gt;= ElecSword_Start+2 || image_index &gt;= BambooSword_Start+2{
   Owner.image_index = 3
}


//Speeds
if Sword_Type &gt; 0 {image_speed = .4;}
if Sword_Type = 0 {image_speed = 0;}
}

if State != S_Normal{
  image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
