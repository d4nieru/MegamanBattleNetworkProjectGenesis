<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_lilypad</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_lilypad</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Left = 1;
Right = 2;
Travel = false;
Direction = Left;
Hsp = 0;
ToadMan_Switch = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Movement
State = obj_megaman.State;
depth = instance_place(x,y,obj_panel).y * -1
IP = instance_place(x,y,obj_panel);
hspeed = Hsp;

if State = S_Normal{
if ToadMan_Switch{

switch(Direction){
    case Left:
    if !Travel &amp;&amp; place_meeting(x-40,y,obj_panel_blue_mask) &amp;&amp; !place_meeting(x-40,y,obj_object) &amp;&amp; !place_meeting(x-40,y,obj_virus){
        TPX = IP.x-40
        with(instance_create(IP.x-40,IP.y,obj_virus_placeholder)){
           other.Panel_Owner = id;
        }
        Hsp = -.5;
        Travel = true;
    }
    if !place_meeting(x-40,y,obj_panel_blue_mask) || place_meeting(x-40,y,obj_object) || place_meeting(x-40,y,obj_virus){
       if !Travel{
          Hsp = 0;
          Direction = Right;
       }
    }
    
    if Travel{
        if x = TPX{
            Hsp = 0;
            with(Panel_Owner) {instance_destroy();}
            Travel = false;
        }
    }
    break;
    
    case Right:
    if !Travel &amp;&amp; place_meeting(x+40,y,obj_panel_blue_mask) &amp;&amp; !place_meeting(x+40,y,obj_object) &amp;&amp; !place_meeting(x+40,y,obj_virus){
        TPX = IP.x+40
        with(instance_create(IP.x+40,IP.y,obj_virus_placeholder)){
           other.Panel_Owner = id;
        }
        Hsp = .5;
        Travel = true;
    }
    if !place_meeting(x+40,y,obj_panel_blue_mask) || place_meeting(x+40,y,obj_object) || place_meeting(x+40,y,obj_virus){
       if !Travel{
          Hsp = 0;
          Direction = Left;
       }
    }
    
    if Travel{
        if x = TPX{
            Hsp = 0;
            with(Panel_Owner) {instance_destroy();}
            Travel = false;
        }
    }
    break;    
}

}
}

if State != S_Normal || !ToadMan_Switch{
  hspeed = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
