<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Chip_Font = font_add_sprite_ext(spr_chip_font,"0123456789AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz=?!+:-",true,0)
Position = 1;
Show_Chip[0] = 0;
Show_Chip[1] = 1;
Show_Chip[2] = 2;
Show_Chip[3] = 3;
Show_Chip[4] = 4;

Show_Chip_ext[0] = 0;

Selected_Chip = 0;
Saved_Place = 0;
Array_Size = -1;

for(i = 0; i &lt; 99; i += 1;){
 if CTO[i] != noone{    
     with(instance_create(0,0,CTO[i])){
        other.Chip_ID[other.i] = id;
        Amount = CTA[other.i];
     }
     Array_Size += 1;
  } 
 if CTO[i] = noone{

   exit;
 }     
}






</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_chip){

CID = Show_Chip_ext[0];
if keyboard_check_pressed(vk_down){
     if Position != 5 &amp;&amp; Show_Chip_ext[0] &lt; Array_Size{
         Position += 1;
         Show_Chip_ext[0] += 1;
         exit;
     }
     if Position = 5 &amp;&amp; Show_Chip_ext[0] &lt; Array_Size{
        Show_Chip_ext[0] += 1;
        for (j=0; j&lt;5; j+=1){
         if Show_Chip[j] &lt; Array_Size{  
           Show_Chip[j] += 1
           } 
        }
        exit;
     }
}
if keyboard_check_pressed(vk_up){
     if Position != 1{
         Position -= 1;
         Show_Chip_ext[0] -= 1; 
         exit;
     }
     if Position = 1 &amp;&amp; Show_Chip_ext[0] != 0{
        Position = 1;
        Show_Chip_ext[0] -= 1;
        for (j=0; j&lt;5; j+=1){
           Show_Chip[j] -= 1
        }        
        exit;
     }
}

if keyboard_check_pressed(ord("Z")) &amp;&amp; global.Saved_Chip = -4{
      show_question("Do you want to add" + " " + Chip_ID[CID].Name + " " + "To your Deck?"){
            if CTA[CID] &gt; 0{
                 global.Saved_Chip = CTO[CID];
                 global.Saved_Name = Chip_ID[CID].Name;
                 global.Saved_Code = Chip_ID[CID].Code_A;
                 global.Saved_Pic = Chip_ID[CID].Card_Pic
                 CTA[CID] -= 1;
                 Chip_ID[Show_Chip[Position-1]].Amount -= 1;
            } else {show_message("You do not have this chip")}
      } 
}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(Chip_Font);
draw_text(200,100,"Trunk")

if instance_exists(obj_chip){

if array_length_1d(Chip_ID) &gt; 0 &amp;&amp; Show_Chip[0] != -1{
     draw_text(5,20,Chip_ID[Show_Chip[0]].Name + " " + Chip_ID[Show_Chip[0]].Code_A + " " + string(Chip_ID[Show_Chip[0]].Amount))
}     
if array_length_1d(Chip_ID) &gt; 1 &amp;&amp; Show_Chip[1] != -1{     
     draw_text(5,40,Chip_ID[Show_Chip[1]].Name + " " + Chip_ID[Show_Chip[1]].Code_A + " " + string(Chip_ID[Show_Chip[1]].Amount))
}     
if array_length_1d(Chip_ID) &gt; 2 &amp;&amp; Show_Chip[2] != -1{     
     draw_text(5,60,Chip_ID[Show_Chip[2]].Name + " " + Chip_ID[Show_Chip[2]].Code_A + " " + string(Chip_ID[Show_Chip[2]].Amount))
}
if array_length_1d(Chip_ID) &gt; 3 &amp;&amp; Show_Chip[3] != -1{     
     draw_text(5,80,Chip_ID[Show_Chip[3]].Name + " " + Chip_ID[Show_Chip[3]].Code_A + " " + string(Chip_ID[Show_Chip[3]].Amount))
}
if array_length_1d(Chip_ID) &gt; 4 &amp;&amp; Show_Chip[4] != -1{     
     draw_text(5,100,Chip_ID[Show_Chip[4]].Name + " " + Chip_ID[Show_Chip[4]].Code_A + " " + string(Chip_ID[Show_Chip[4]].Amount))
}

draw_sprite(spr_chip_pic,Chip_ID[Show_Chip_ext[0]].Card_Pic,200,50)

if Position = 1{ // 5 20
     draw_set_colour(c_yellow);
     draw_line(0,10,75,10);
     draw_line(0,10,0,25);
     draw_line(0,25,75,25);
     draw_line(75,10,75,25);
}   
if Position = 2{ // 5 40
     draw_set_colour(c_yellow);
     draw_line(0,30,75,30);
     draw_line(0,30,0,45);
     draw_line(0,45,75,45);
     draw_line(75,30,75,45);
} 
if Position = 3{ // 5 60
     draw_set_colour(c_yellow);
     draw_line(0,50,75,50);
     draw_line(0,50,0,65);
     draw_line(0,65,75,65);
     draw_line(75,50,75,65);
} 
if Position = 4{ // 5 80
     draw_set_colour(c_yellow);
     draw_line(0,70,75,70);
     draw_line(0,70,0,85);
     draw_line(0,85,75,85);
     draw_line(75,70,75,85);
}
if Position = 5{ // 5 100
     draw_set_colour(c_yellow);
     draw_line(0,90,75,90);
     draw_line(0,90,0,105);
     draw_line(0,105,75,105);
     draw_line(75,90,75,105);
}

draw_set_colour(c_white);

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="87">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(LanHP);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="69">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(rm_deck_show_test);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
