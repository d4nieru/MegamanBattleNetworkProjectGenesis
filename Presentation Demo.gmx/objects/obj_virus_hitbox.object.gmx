<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mett_line_sight</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Semi = false;
Element = E_None;
Hurt = false;
Timer = 0;
Timer_Start = false;
Power = 0;
Travel = false;
Stun = false;
Tank_Cannon = false;
Stay = false;
VOwner = -4;
Owner = -4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Timer &amp; Travel
if !place_meeting(x,y,obj_panel){
   instance_destroy();
}

if Timer &gt; 0{
 Timer_Start = true;
}
if Timer_Start{
   Timer -= 1;
   if Timer = 0{
      instance_destroy();
   } 
}

if Travel{
   x -= 40;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Special Chip Effect Dont USE
/*MM = obj_megaman;
MMP = instance_place(MM.x,MM.y,obj_panel);

//Tank Cannon
if Tank_Cannon{
   if place_meeting(x,y,obj_megaman){
       Travel = false;
       
  if !instance_exists(obj_screenshake){  
    with(instance_create(0,0,obj_screenshake)) {alarm[0] = 25;}
   };       
   
       instance_create(MMP.x,MMP.y-12,obj_expolsion_doted_effect);
       if place_meeting(MM.x,MM.y+24,obj_panel) {instance_create(MMP.x,MMP.y-12+24,obj_expolsion_doted_effect)};
       if place_meeting(MM.x,MM.y-24,obj_panel) {instance_create(MMP.x,MMP.y-12-24,obj_expolsion_doted_effect)};
       
       if MMP.Panel_Status != 3 &amp;&amp; MMP.Panel_Status != 4{
           MMP.Cracked = true;
       }
       if instance_place(MM.x,MM.y+24,obj_panel).Panel_Status != 3 &amp;&amp; instance_place(MM.x,MM.y+24,obj_panel).Panel_Status != 4{
           if instance_place(MM.x,MM.y+24,obj_panel).Panel_Status = 2{
                 with(instance_place(MM.x,MM.y+24,obj_panel)) {Broke = true};
           }
           if instance_place(MM.x,MM.y+24,obj_panel).Panel_Status != 2{
                 with(instance_place(MM.x,MM.y+24,obj_panel)) {Cracked = true};
           }
       }
              if instance_place(MM.x,MM.y-24,obj_panel).Panel_Status != 3 &amp;&amp; instance_place(MM.x,MM.y-24,obj_panel).Panel_Status != 4{
           if instance_place(MM.x,MM.y-24,obj_panel).Panel_Status = 2{
                 with(instance_place(MM.x,MM.y-24,obj_panel)) {Broke = true};
           }
           if instance_place(MM.x,MM.y-24,obj_panel).Panel_Status != 2{
                 with(instance_place(MM.x,MM.y-24,obj_panel)) {Cracked = true};
           }
       }
       exit;
   }
   
   if x = 20{
       Travel = false;
       
  if !instance_exists(obj_screenshake){  
    with(instance_create(0,0,obj_screenshake)) {alarm[0] = 25;}
   }       
   
       instance_create(20,y-12,obj_expolsion_doted_effect);
       if place_meeting(20,y+24,obj_panel) {instance_create(20,y-12+24,obj_expolsion_doted_effect)};
       if place_meeting(20,y-24,obj_panel) {instance_create(20,y-12-24,obj_expolsion_doted_effect)};
       
       if instance_place(20,y,obj_panel).Panel_Status != 3 &amp;&amp; instance_place(20,y,obj_panel).Panel_Status != 4{
           if !place_meeting(x,y,MM){
              if instance_place(20,y,obj_panel).Panel_Status = 2 {with(instance_place(20,y,obj_panel)) {Broke = true}};
              if instance_place(20,y,obj_panel).Panel_Status != 2 {with(instance_place(20,y,obj_panel)) {Cracked = true}};
           }
           if place_meeting(x,y,MM){
              with(instance_place(20,y,obj_panel)) {Cracked = true};
           }
       }
       if instance_place(20,y+24,obj_panel).Panel_Status != 3 &amp;&amp; instance_place(20,y+24,obj_panel).Panel_Status != 4{
           if instance_place(20,y+24,obj_panel).Panel_Status = 2{
                 with(instance_place(20,y+24,obj_panel)) {Broke = true};
           }
           if instance_place(20,y+24,obj_panel).Panel_Status != 2{
                 with(instance_place(20,y+24,obj_panel)) {Cracked = true};
           }
       }
              if instance_place(20,y-24,obj_panel).Panel_Status != 3 &amp;&amp; instance_place(20,y-24,obj_panel).Panel_Status != 4{
           if instance_place(20,y-24,obj_panel).Panel_Status = 2{
                 with(instance_place(20,y-24,obj_panel)) {Broke = true};
           }
           if instance_place(20,y-24,obj_panel).Panel_Status != 2{
                 with(instance_place(20,y-24,obj_panel)) {Cracked = true};
           }
       }
       instance_destroy();
       exit;       
   }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
