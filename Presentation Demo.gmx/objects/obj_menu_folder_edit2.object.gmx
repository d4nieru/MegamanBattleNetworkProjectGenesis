<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_chip_folder_edit2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*Freeze = true;
Chip_Font = font_add_sprite_ext(spr_chip_font,"0123456789AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz=?!+:-",true,0)
Text_Font = font_add_sprite_ext(spr_text_font,"AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz",true,0)
TextNoShadow_Font = font_add_sprite_ext(spr_text_font_noshadow,"AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz0123456789!?+-:.,/'",true,1)
if !instance_exists(obj_folder_edit_cursor2) {instance_create(x-3,y+38,obj_folder_edit_cursor2)}
instance_create(x,y+20,obj_page_turn_left);

Placement = 1;
Show_Chip[0] = 0;
Show_Chip[1] = 1;
Show_Chip[2] = 2;
Show_Chip[3] = 3;
Show_Chip[4] = 4;
Show_Chip[5] = 5;
Show_Chip[6] = 6;

Show_Chip_ext[0] = 0;
CID = 0;
Chip_ID[0] = noone;

Selected_Chip = noone;
Saved_Place = 0;
Array_Size = 0;

for(j = 0; j &lt; 1000; j += 1;){
 if CTO[j] != noone{    
     with(instance_create(x,y,CTO[j])){
        other.Chip_ID[other.j] = id;
        Amount = CTA[other.j];
     }
     Array_Size += 1;
  } 
 if CTO[j] = noone{
   exit;
 }     
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if !instance_exists(obj_menu_folder_edit) {instance_destroy();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*Other_Menu = obj_menu_folder_edit;
if !Freeze{

CID = Show_Chip_ext[0];

if keyboard_check_pressed(ord("Z")) &amp;&amp; Chip_ID[CID] != noone{
      if Selected_Chip = noone &amp;&amp; Other_Menu.Selected_Chip = noone{
          if Chip_ID[CID].Amount &gt; 0{
               Selected_Chip = Chip_ID[CID];
               Saved_Place = CID;
               with(instance_create(x-3,obj_folder_edit_cursor2.y,obj_folder_selected2)){
               Placement = other.Placement-1;
            }   
         }          
          exit;
      }
      if Selected_Chip = noone &amp;&amp; Other_Menu.Selected_Chip != noone &amp;&amp; Chip_ID[CID].Amount &gt; 0{
        for(h = 0; h &lt; 1000; h += 1){
             if Array_Size = h {Chip_ID[h] = noone;}        
             if Chip_ID[h] = noone{
                   Chip_ID[h] = Other_Menu.Selected_Chip;
                   Chip_ID[h].Amount = 1;
                   Array_Size += 1
                   add_chip_to_pack(Other_Menu.Selected_Chip.Object_Name);
                   break;                  
             }
             if Chip_ID[h].Name = Other_Menu.Selected_Chip.Name &amp;&amp; Chip_ID[h].Code_A = Other_Menu.Selected_Chip.Code_A{
                 Chip_ID[h].Amount += 1;
                 CTA[h] += 1;
                 break;
             }
        }        
         Other_Menu.Chip_ID[Other_Menu.Saved_Place] = Chip_ID[CID];
         Chip_Deck[Other_Menu.Saved_Place] = Chip_ID[CID].Object_Name;
         Chip_ID[CID].Amount -= 1;
         CTA[CID] -= 1;
         Other_Menu.Selected_Chip = noone;
         with(obj_folder_selected){
            instance_destroy();
         }         
         exit;          
      }
}

if keyboard_check_pressed(vk_down) &amp;&amp; array_length_1d(Chip_ID) &gt; 1{
     if CID != Array_Size-1{
         if Placement = 7{
             for(r = 0; r &lt; 7; r += 1){
                 Show_Chip[r] += 1;
             }
        with(obj_folder_selected2){
          y -= 16;
          Placement -= 1;
        }             
         }
         if Placement != 7{
            Placement += 1;
            with(obj_folder_edit_cursor2){
               y += 16;
            }
         }
       Show_Chip_ext[0] += 1;  
     }
}

if keyboard_check_pressed(vk_up){
     if CID != 0{
       if Placement = 1{  
           for(e = 0; e &lt; 7; e += 1){
                Show_Chip[e] -= 1;
           }
           with(obj_folder_selected2){
             y += 16;
             Placement += 1;
           }           
        } 
         if Placement != 1{
               Placement -= 1;
               with(obj_folder_edit_cursor2){
                  y -= 16;
               }
         }
   Show_Chip_ext[0] -= 1;          
     }  
}

if keyboard_check_pressed(vk_left){
    hspeed = 20
    obj_menu_folder_edit.hspeed = 20;
}
if hspeed = 20{
   if x = xstart{
      hspeed = 0;
      obj_menu_folder_edit.hspeed = 0;
      Freeze = true;
      obj_menu_folder_edit.Freeze = false;
   }
}

}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*draw_self();
draw_set_font(Chip_Font);
draw_set_colour(c_white);
draw_sprite(spr_chip_base,0,x+152,y+16);
if CTO[0] != noone{

//Draw Icon
if array_length_1d(Chip_ID) &gt; 0 &amp;&amp; Show_Chip[0] != -1{
     draw_sprite(spr_chip_icon,Chip_ID[Show_Chip[0]].Card_Icon,x+24,y+44);
}
if array_length_1d(Chip_ID) &gt; 1 &amp;&amp; Show_Chip[1] != -1{
     draw_sprite(spr_chip_icon,Chip_ID[Show_Chip[1]].Card_Icon,x+24,y+60);
}
if array_length_1d(Chip_ID) &gt; 2 &amp;&amp; Show_Chip[2] != -1{     
     draw_sprite(spr_chip_icon,Chip_ID[Show_Chip[2]].Card_Icon,x+24,y+76);
}     
if array_length_1d(Chip_ID) &gt; 3 &amp;&amp; Show_Chip[3] != -1{     
     draw_sprite(spr_chip_icon,Chip_ID[Show_Chip[3]].Card_Icon,x+24,y+92);
} 
if array_length_1d(Chip_ID) &gt; 4 &amp;&amp; Show_Chip[4] != -1{    
     draw_sprite(spr_chip_icon,Chip_ID[Show_Chip[4]].Card_Icon,x+24,y+108);
} 
if array_length_1d(Chip_ID) &gt; 5 &amp;&amp; Show_Chip[5] != -1{    
     draw_sprite(spr_chip_icon,Chip_ID[Show_Chip[5]].Card_Icon,x+24,y+124);
} 
if array_length_1d(Chip_ID) &gt; 6 &amp;&amp; Show_Chip[6] != -1{    
     draw_sprite(spr_chip_icon,Chip_ID[Show_Chip[6]].Card_Icon,x+24,y+140);
}

//Draw the Name
if array_length_1d(Chip_ID) &gt; 0 &amp;&amp; Show_Chip[0] != -1{
    draw_text(x+34,y+44,Chip_ID[Show_Chip[0]].Name);
}
if array_length_1d(Chip_ID) &gt; 1 &amp;&amp; Show_Chip[1] != -1{
    draw_text(x+34,y+60,Chip_ID[Show_Chip[1]].Name);
}
if array_length_1d(Chip_ID) &gt; 2 &amp;&amp; Show_Chip[2] != -1{
    draw_text(x+34,y+76,Chip_ID[Show_Chip[2]].Name);
} 
if array_length_1d(Chip_ID) &gt; 3 &amp;&amp; Show_Chip[3] != -1{
    draw_text(x+34,y+92,Chip_ID[Show_Chip[3]].Name);
} 
if array_length_1d(Chip_ID) &gt; 4 &amp;&amp; Show_Chip[4] != -1{
    draw_text(x+34,y+108,Chip_ID[Show_Chip[4]].Name);
} 
if array_length_1d(Chip_ID) &gt; 5 &amp;&amp; Show_Chip[5] != -1{
    draw_text(x+34,y+124,Chip_ID[Show_Chip[5]].Name);
} 
if array_length_1d(Chip_ID) &gt; 6 &amp;&amp; Show_Chip[6] != -1{
    draw_text(x+34,y+140,Chip_ID[Show_Chip[6]].Name);
}

//Draw Element
if array_length_1d(Chip_ID) &gt; 0 &amp;&amp; Show_Chip[0] != -1{
     draw_sprite(spr_chip_element,Chip_ID[Show_Chip[0]].Element,x+107,y+44);
} 
if array_length_1d(Chip_ID) &gt; 1 &amp;&amp; Show_Chip[1] != -1{
     draw_sprite(spr_chip_element,Chip_ID[Show_Chip[1]].Element,x+107,y+60);
} 
if array_length_1d(Chip_ID) &gt; 2 &amp;&amp; Show_Chip[2] != -1{
     draw_sprite(spr_chip_element,Chip_ID[Show_Chip[2]].Element,x+107,y+76);
} 
if array_length_1d(Chip_ID) &gt; 3 &amp;&amp; Show_Chip[3] != -1{
     draw_sprite(spr_chip_element,Chip_ID[Show_Chip[3]].Element,x+107,y+92);
} 
if array_length_1d(Chip_ID) &gt; 4 &amp;&amp; Show_Chip[4] != -1{
     draw_sprite(spr_chip_element,Chip_ID[Show_Chip[4]].Element,x+107,y+108);
} 
if array_length_1d(Chip_ID) &gt; 5 &amp;&amp; Show_Chip[5] != -1{
     draw_sprite(spr_chip_element,Chip_ID[Show_Chip[5]].Element,x+107,y+124);
} 
if array_length_1d(Chip_ID) &gt; 6 &amp;&amp; Show_Chip[6] != -1{
     draw_sprite(spr_chip_element,Chip_ID[Show_Chip[6]].Element,x+107,y+140);
}

//Draw the Chip Code
if array_length_1d(Chip_ID) &gt; 0 &amp;&amp; Show_Chip[0] != -1{
   draw_text(x+119,y+44,Chip_ID[Show_Chip[0]].Code_A);
}
if array_length_1d(Chip_ID) &gt; 1 &amp;&amp; Show_Chip[1] != -1{
   draw_text(x+119,y+60,Chip_ID[Show_Chip[1]].Code_A);
}
if array_length_1d(Chip_ID) &gt; 2 &amp;&amp; Show_Chip[2] != -1{
   draw_text(x+119,y+76,Chip_ID[Show_Chip[2]].Code_A);
}
if array_length_1d(Chip_ID) &gt; 3 &amp;&amp; Show_Chip[3] != -1{
   draw_text(x+119,y+92,Chip_ID[Show_Chip[3]].Code_A);
} 
if array_length_1d(Chip_ID) &gt; 4 &amp;&amp; Show_Chip[4] != -1{
   draw_text(x+119,y+108,Chip_ID[Show_Chip[4]].Code_A);
} 
if array_length_1d(Chip_ID) &gt; 5 &amp;&amp; Show_Chip[5] != -1{
   draw_text(x+119,y+124,Chip_ID[Show_Chip[5]].Code_A);
} 
if array_length_1d(Chip_ID) &gt; 6 &amp;&amp; Show_Chip[6] != -1{
   draw_text(x+119,y+140,Chip_ID[Show_Chip[6]].Code_A);
}  

//Draw the Amount
if array_length_1d(Chip_ID) &gt; 0 &amp;&amp; Show_Chip[0] != -1{
   draw_text(x+134,y+44,string(Chip_ID[Show_Chip[0]].Amount));
} 
if array_length_1d(Chip_ID) &gt; 1 &amp;&amp; Show_Chip[1] != -1{
   draw_text(x+134,y+60,string(Chip_ID[Show_Chip[1]].Amount));
}
if array_length_1d(Chip_ID) &gt; 2 &amp;&amp; Show_Chip[2] != -1{
   draw_text(x+134,y+76,string(Chip_ID[Show_Chip[2]].Amount));
}
if array_length_1d(Chip_ID) &gt; 3 &amp;&amp; Show_Chip[3] != -1{
   draw_text(x+134,y+92,string(Chip_ID[Show_Chip[3]].Amount));
}
if array_length_1d(Chip_ID) &gt; 4 &amp;&amp; Show_Chip[4] != -1{
   draw_text(x+134,y+108,string(Chip_ID[Show_Chip[4]].Amount));
}
if array_length_1d(Chip_ID) &gt; 5 &amp;&amp; Show_Chip[5] != -1{
   draw_text(x+134,y+124,string(Chip_ID[Show_Chip[5]].Amount));
}
if array_length_1d(Chip_ID) &gt; 6 &amp;&amp; Show_Chip[6] != -1{
   draw_text(x+134,y+140,string(Chip_ID[Show_Chip[6]].Amount));
}

//Draw Chip Base
if array_length_1d(Chip_ID) &gt; 0{
draw_sprite(spr_chip_element,Chip_ID[CID].Element,x+184,y+84);
draw_sprite(spr_chip_pic,Chip_ID[CID].Card_Pic,x+192,y+48);
draw_sprite(spr_chip_code,Chip_ID[CID].Code,x+165,y+84);
     if Chip_ID[CID].Power &gt; 0{
         if Chip_ID[CID].Power &lt; 100 {draw_text(x+212,y+84,string(Chip_ID[CID].Power));}
         if Chip_ID[CID].Power &gt; 99 {draw_text(x+208,y+84,string(Chip_ID[CID].Power));}
     }
draw_set_colour(c_black);
draw_set_font(TextNoShadow_Font);
draw_text(x+159,y+98,Chip_ID[CID].Chip_Text)            
}
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
