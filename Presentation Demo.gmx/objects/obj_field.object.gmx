<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-400</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_panel_indacator</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Test_File = 0;
//Virus Scan
Virus_Scan = true;
VS[1] = "";
VS[2] = "";
VS[3] = "";
VS_Done = false;
Name_Draw = false;

//Emotion Icon
instance_create(21,25,obj_megaman_emotion);

//Soul System
Soul = "Search";
Mega_Soul = "";
Soul_Check = false;

//Font Manage
EnemyHp_Font = font_add_sprite_ext(spr_enemyhp_font,"0123456789",true,0)
MegaManHp_Font_Normal = font_add_sprite_ext(spr_megamanhp_font_normal,"0123456789",true,2)
MegaManHp_Font_Hurt = font_add_sprite_ext(spr_megamanhp_font_hurt,"0123456789",true,2)
MegaManHp_Font_Heal = font_add_sprite_ext(spr_megamanhp_font_heal,"0123456789",true,2)
Chip_Font = font_add_sprite_ext(spr_chip_font,"0123456789AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz=?!+:-",true,0)

global.Slot_Name[5] = "";
global.Slot_Code_A[5] = "";
global.Slot_Code[5] = -1;
global.Slot_Power[5] = -1;
global.Slot_Element[5] = -1;
global.Slot_Icon[5] = -1;

global.Slot_Name[4] = "";
global.Slot_Code_A[4] = "";
global.Slot_Code[4] = -1;
global.Slot_Power[4] = -1;
global.Slot_Element[4] = -1;
global.Slot_Icon[4] = -1;

global.Slot_Name[3] = "";
global.Slot_Code_A[3] = "";
global.Slot_Code[3] = -1;
global.Slot_Power[3] = -1;
global.Slot_Element[3] = -1;
global.Slot_Icon[3] = -1;

global.Slot_Name[2] = "";
global.Slot_Code_A[2] = "";
global.Slot_Code[2] = -1;
global.Slot_Power[2] = -1;
global.Slot_Element[2] = -1;
global.Slot_Icon[2] = -1;

global.Slot_Name[1] = "";
global.Slot_Code_A[1] = "";
global.Slot_Code[1] = -1;
global.Slot_Power[1] = -1;
global.Slot_Element[1] = -1;
global.Slot_Icon[1] = -1;

randomize();
scr_testdeck();
ds_list_shuffle(Test_Deck);

global.Creation_ID[1] = -1
global.Creation_ID[2] = -1
global.Creation_ID[3] = -1
global.Creation_ID[4] = -1
global.Creation_ID[5] = -1



instance_create(0,0,obj_chip_holder);
with(obj_megaman){
 State = S_Paused;
}
Turn_Start = false;
Fade = false;
Fade_Alpha = 0
Move_Mega = false;

//States
Normal = 1;
Paused = 2;

State = Normal;

//Music
audio_stop_all();
if room = roomTest || room = roomTest2 || room = roomTest3 || room = roomTest4 || room = roomTest5 || room = room37 || room = room38 || room = room39 || room = room40 || room = room42 || room = room44 || room = room45 || room = room46 || room = room47{
  BGM = audio_play_sound(sou_virus_theme,0,true);
}
if room = room26 || room = roomTest7 || room = room16 || room = rm_ToadMan{
  BGM = audio_play_sound(sou_4_5_tournament,0,true);
}
if room = room22 || room = room29{
   BGM = audio_play_sound(sou_megamanSF_boss,0,true);
}
if room = room27{
   BGM = audio_play_sound(sou_zero_boss1,0,false);
   sl = audio_sound_length(sou_zero_boss1)-2.5;
   alarm[0] = room_speed*sl;
}

//Background
MBGT = 20;
BG_Timer = MBGT;
Background_Direction = 1;
Image_Timer = 0;

//Program Advance
PA_Check = false;

//Battle Timer
Show_Timer = false;
Battle_Timer = 0;
T_Seconds = 0;
T_Minutes = 0;

//Debug Stuff
Debug = "Off"
Field_Change = "";
Health_Change = 0;
Max_Health_Change = 0;
Attack_Change = 0;
Charge_Attack_Change = 0
Speed_Change = 0
Element_Change = ""
ChipName_Change = ""
ChipPower_Change = -1
ChipElement_Change = ""
Virus_Summon = "";
VS_Panel = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Zero's Boss Theme Change
/*BGM =*/ audio_play_sound(sou_zero_boss2,0,true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fade
/*global.TESTSIZE = ds_list_size(Test_Deck);
global.TESTCHIP = ds_list_find_value(Test_Deck,0);*/
global.NTEST = instance_number(obj_virus);
//Fade
if Fade &amp;&amp; !instance_exists(obj_fade){
  with(instance_create(118,79,obj_fade)){
    Move_Mega = other.Move_Mega
  }
}
if !Fade &amp;&amp; instance_exists(obj_fade){
  with(obj_fade){
     instance_destroy();
  }
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Program Advance
if PA_Check &amp;&amp; !instance_exists(obj_programadvance_screen){
   instance_create(120,80,obj_programadvance_screen);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Backgrounds
background_hspeed[0] = .25;
background_vspeed[0] = .25;
//Square
//if Background_Direction = 1{

if background_index[0] = bg_square1{
  Image_Timer += 1;
  if Image_Timer = (room_speed-10)/5{
      Image_Timer = 0;
      background_index[0] = bg_square2;
  }
}
if background_index[0] = bg_square2{
  Image_Timer += 1;
  if Image_Timer = (room_speed-10)/5{
      Image_Timer = 0;
      background_index[0] = bg_square3;
  }
}
if background_index[0] = bg_square3{
  Image_Timer += 1;
  if Image_Timer = (room_speed-10)/5{
      Image_Timer = 0;
      background_index[0] = bg_square4;
  }
}
if background_index[0] = bg_square4{
  Image_Timer += 1;
  if Image_Timer = (room_speed-10)/5{
      Image_Timer = 0;
      background_index[0] = bg_square5;
  }
}
if background_index[0] = bg_square5{
  Image_Timer += 1;
  if Image_Timer = (room_speed-10)/5{
      Image_Timer = 0;
      background_index[0] = bg_square6;
  }
}
if background_index[0] = bg_square6{
  Image_Timer += 1;
  if Image_Timer = (room_speed-10)/5{
      Image_Timer = 0;
      background_index[0] = bg_square7;
  }
}
if background_index[0] = bg_square7{
  Image_Timer += 1;
  if Image_Timer = (room_speed-10)/5{
      Image_Timer = 0;
      background_index[0] = bg_square8;
  }
}
if background_index[0] = bg_square8{
  Image_Timer += 1;
  if Image_Timer = (room_speed-10)/5{
      Image_Timer = 0;
      background_index[0] = bg_square9;
  }
}
if background_index[0] = bg_square9{
  Image_Timer += 1;
  if Image_Timer = (room_speed-10)/5{
      Image_Timer = 0;
      background_index[0] = bg_square10;
  }
}
if background_index[0] = bg_square10{
  Image_Timer += 1;
  if Image_Timer = (room_speed-10)/5{
      Image_Timer = 0;
      background_index[0] = bg_square11;
  }
}
if background_index[0] = bg_square11{
  Image_Timer += 1;
  if Image_Timer = (room_speed-10)/5{
      Image_Timer = 0;
      background_index[0] = bg_square12;
  }
}
if background_index[0] = bg_square12{
  Image_Timer += 1;
  if Image_Timer = (room_speed-10)/5{
      Image_Timer = 0;
      background_index[0] = bg_square13;
  }
}
if background_index[0] = bg_square13{
  Image_Timer += 1;
  if Image_Timer = (room_speed-10)/5{
      Image_Timer = 0;
      background_index[0] = bg_square14;
  }
}
if background_index[0] = bg_square14{
  Image_Timer += 1;
  if Image_Timer = (room_speed-10)/5{
      Image_Timer = 0;
      background_index[0] = bg_square15;
  }
}
if background_index[0] = bg_square15{
  Image_Timer += 1;
  if Image_Timer = (room_speed-10)/5{
      Image_Timer = 0;
      background_index[0] = bg_square16;
      Background_Direction = 2;
  }
}

//}

//if Background_Direction = 2{
if background_index[0] = bg_square2{
  Image_Timer += 1;
  if Image_Timer = (room_speed-10)/5{
      Image_Timer = 0;
      background_index[0] = bg_square1;
      Background_Direction = 1;
  }
}
if background_index[0] = bg_square3{
  Image_Timer += 1;
  if Image_Timer = (room_speed-10)/5{
      Image_Timer = 0;
      background_index[0] = bg_square2;
  }
}
if background_index[0] = bg_square4{
  Image_Timer += 1;
  if Image_Timer = (room_speed-10)/5{
      Image_Timer = 0;
      background_index[0] = bg_square3;
  }
}
if background_index[0] = bg_square5{
  Image_Timer += 1;
  if Image_Timer = (room_speed-10)/5{
      Image_Timer = 0;
      background_index[0] = bg_square4;
  }
}
if background_index[0] = bg_square6{
  Image_Timer += 1;
  if Image_Timer = (room_speed-10)/5{
      Image_Timer = 0;
      background_index[0] = bg_square5;
  }
}
if background_index[0] = bg_square7{
  Image_Timer += 1;
  if Image_Timer = (room_speed-10)/5{
      Image_Timer = 0;
      background_index[0] = bg_square6;
  }
}
if background_index[0] = bg_square8{
  Image_Timer += 1;
  if Image_Timer = (room_speed-10)/5{
      Image_Timer = 0;
      background_index[0] = bg_square7;
  }
}
if background_index[0] = bg_square9{
  Image_Timer += 1;
  if Image_Timer = (room_speed-10)/5{
      Image_Timer = 0;
      background_index[0] = bg_square8;
  }
}
if background_index[0] = bg_square10{
  Image_Timer += 1;
  if Image_Timer = (room_speed-10)/5{
      Image_Timer = 0;
      background_index[0] = bg_square9;
  }
}
if background_index[0] = bg_square11{
  Image_Timer += 1;
  if Image_Timer = (room_speed-10)/5{
      Image_Timer = 0;
      background_index[0] = bg_square10;
  }
}
if background_index[0] = bg_square12{
  Image_Timer += 1;
  if Image_Timer = (room_speed-10)/5{
      Image_Timer = 0;
      background_index[0] = bg_square11;
  }
}
if background_index[0] = bg_square13{
  Image_Timer += 1;
  if Image_Timer = (room_speed-10)/5{
      Image_Timer = 0;
      background_index[0] = bg_square12;
  }
}
if background_index[0] = bg_square14{
  Image_Timer += 1;
  if Image_Timer = (room_speed-10)/5{
      Image_Timer = 0;
      background_index[0] = bg_square13;
  }
}
if background_index[0] = bg_square15{
  Image_Timer += 1;
  if Image_Timer = (room_speed-10)/5{
      Image_Timer = 0;
      background_index[0] = bg_square14;
  }
}
if background_index[0] = bg_square16{
  Image_Timer += 1;
  if Image_Timer = (room_speed-10)/5{
      Image_Timer = 0;
      background_index[0] = bg_square15;
  }
}
//}

//Orange
if background_index[0] = bg_orange1{
    BG_Timer -= 1;
    if BG_Timer = 0{
      BG_Timer = MBGT;
      background_index[0] = bg_orange2;
    }
}
if background_index[0] = bg_orange2{
    BG_Timer -= 1;
    if BG_Timer = 0{
      BG_Timer = MBGT;
      background_index[0] = bg_orange3;
    }
}
if background_index[0] = bg_orange3{
    BG_Timer -= 1;
    if BG_Timer = 0{
      BG_Timer = MBGT;
      background_index[0] = bg_orange4;
    }
}
if background_index[0] = bg_orange4{
    BG_Timer -= 1;
    if BG_Timer = 0{
      BG_Timer = MBGT;
      background_index[0] = bg_orange5;
    }
}
if background_index[0] = bg_orange5{
    BG_Timer -= 1;
    if BG_Timer = 0{
      BG_Timer = MBGT;
      background_index[0] = bg_orange6;
    }
}
if background_index[0] = bg_orange6{
    BG_Timer -= 1;
    if BG_Timer = 0{
      BG_Timer = MBGT;
      background_index[0] = bg_orange7;
    }
}
if background_index[0] = bg_orange7{
    BG_Timer -= 1;
    if BG_Timer = 0{
      BG_Timer = MBGT;
      background_index[0] = bg_orange8;
    }
}
if background_index[0] = bg_orange8{
    BG_Timer -= 1;
    if BG_Timer = 0{
      BG_Timer = MBGT;
      background_index[0] = bg_orange1;
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Virus Order Management

//Mett
if !instance_exists(obj_mett){
       Mett_Order[0] = 0;
       Mett_Order[1] = 0;
       Mett_Order[2] = 0; 
}

if instance_exists(obj_mett){
   if instance_number(obj_mett) = 3{
       Mett_Order[0] = instance_find(obj_mett,0);
       Mett_Order[1] = instance_find(obj_mett,1); 
       Mett_Order[2] = instance_find(obj_mett,2);
       
       if Mett_Order[0].Order = 3 &amp;&amp; Mett_Order[1].Order = 3 &amp;&amp; Mett_Order[2].Order = 3{
            Mett_Order[0].Order = 1;
            Mett_Order[1].Order = 2;
            Mett_Order[2].Order = 3;
       }
       if Mett_Order[0].Order = 2 &amp;&amp; Mett_Order[1].Order = 2 &amp;&amp; Mett_Order[2].Order = 2{
            Mett_Order[0].Order = 1;
            Mett_Order[1].Order = 2;
            Mett_Order[2].Order = 3;
       } 
       if Mett_Order[0].Order = 1 &amp;&amp; Mett_Order[1].Order = 1 &amp;&amp; Mett_Order[2].Order = 1{
            Mett_Order[0].Order = 1;
            Mett_Order[1].Order = 2;
            Mett_Order[2].Order = 3;
       }             
   }
  if instance_number(obj_mett) = 2{
       Mett_Order[0] = instance_find(obj_mett,0);
       Mett_Order[1] = instance_find(obj_mett,1); 
       Mett_Order[2] = 0;
       
       if Mett_Order[0].Order = 2 &amp;&amp; Mett_Order[1].Order = 2{
          Mett_Order[0].Order = 1;
          Mett_Order[1].Order = 2;
       }    
       if Mett_Order[0].Order = 1 &amp;&amp; Mett_Order[1].Order = 1{
          Mett_Order[0].Order = 1;
          Mett_Order[1].Order = 2;
       }          
  } 
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ChipDraw Management
if Max_Chip_Draw &gt; 8 {Max_Chip_Draw = 8}
if Chip_Draw &gt; Max_Chip_Draw {Chip_Draw = Max_Chip_Draw}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Virus Scan
if Virus_Scan{
   scr_virus_scan();
}

if VS_Done{
   obj_chip_holder.Move_In = true;
   VS_Done = false;
   Name_Draw = true;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Volume Control
//audio_sound_gain(BGM,0.05,0);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Battle Timer
if obj_megaman.State = S_Normal{

Battle_Timer += 1
if Battle_Timer = room_speed{
   Battle_Timer = 0;
   T_Seconds += 1;
   if T_Seconds = 60{
      T_Seconds = 0;
      T_Minutes += 1;
   }
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug Stuff

if(DEBUG_BUILD == 1){
if keyboard_check_pressed(ord("D")){
     if Debug = "On" {Debug = "Off"; exit;}
     if Debug = "Off" {Debug = "On"; exit;}
}

if Debug = "On"{
//Keyboard Activation
if keyboard_check_pressed(ord("F")){
    Field_Change = get_string("Choose an element for the field","Normal");
}
if keyboard_check_pressed(ord("H")){
    Health_Change = get_integer("Set Megaman's Health",obj_megaman.Hp);
    Max_Health_Change = get_integer("Set Megaman's Max Health",obj_megaman.MaxHp);
    Attack_Change = get_integer("Set Megaman's Attack",obj_megaman.atk);
    Charge_Attack_Change = get_integer("Set Megaman's Charge Attack",obj_megaman.chrg_atk);
    Speed_Change = get_integer("Set Megaman's Speed",obj_megaman.spd);
    Element_Change = get_string("Set Megaman's Element","Normal");
}
if keyboard_check_pressed(ord("I")){
    room_speed = 60;
}
if keyboard_check_pressed(ord("0")){
    room_speed = 10;
}
if keyboard_check_pressed(ord("R")){
    room_restart();
}
if keyboard_check_pressed(ord("W")){
    game_restart();
}
if keyboard_check_pressed(ord("K")){
    with(instance_nearest(x,y,obj_virus)){
      instance_destroy();
    }
}
if keyboard_check_pressed(ord("T")){
    if Show_Timer{
   Show_Timer = false;
   exit;
}
if !Show_Timer{
   Show_Timer = true;
   exit;
}
}

if keyboard_check_pressed(ord("L")){
    if obj_custom_gague.image_speed = 0 &amp;&amp; obj_custom_gague.image_alpha = 1{
        with(obj_custom_gague){
            Gague = 100;
        }
    }
}

if keyboard_check_pressed(ord("C")){
    ChipName_Change = get_string("The Name of the chip, that you want to get.","Cannon");
    ChipPower_Change = get_integer("Set the Power of the chip.",40);
    ChipElement_Change = get_string("Set the Element of the chip.","Normal");
}

if keyboard_check_pressed(ord("J")){
    if instance_number(obj_virus) &lt; 3{
       Virus_Summon = get_string("Name the virus to summon.","Mettaur")
       VS_Panel = get_integer("Choose a panel to summon the virus on(1-9).",1)
    }
}

}

//Field_Change
switch(Field_Change){
     case "Normal":
     with(obj_panel){
       Normal = true;
       Broken_Touch = false;
       other.Field_Change = "";
     }
     break;
     case "Cracked":
     with(obj_panel){
       Cracked = true;
       Broken_Touch = false;
       other.Field_Change = "";
     }       
     break;
     case "Ice":
     with(obj_panel){
       Ice = true;
       Broken_Touch = false;
       other.Field_Change = "";
     }
     break;
     case "Grass":
     with(obj_panel){
       Grass = true;
       Broken_Touch = false;
       other.Field_Change = "";
     } 
     break;
     case "Lava":
     with(obj_panel){
       Lava = true;
       Broken_Touch = false;
       other.Field_Change = "";
     }
     break;
     case "Poison":
     with(obj_panel){
       Poison = true;
       Broken_Touch = false;
       other.Field_Change = "";
     }
     break;
     case "Metal":
     with(obj_panel){
       Metal = true;
       Broken_Touch = false;
       other.Field_Change = "";
     } 
     break;
     case "Holy":
     with(obj_panel){
       Holy = true;
       Broken_Touch = false;
       other.Field_Change = "";
     }
     break;
     case "Water":
     with(obj_panel){
       Water = true;
       Broken_Touch = false;
       other.Field_Change = "";
     }
     break;                            
               
}

//Megaman's Stat Change
if Health_Change != 0{
   obj_megaman.Hp = Health_Change;
   Health_Change = 0;
}
if Max_Health_Change != 0{
   obj_megaman.MaxHp = Max_Health_Change;
   Max_Health_Change = 0;
}
if Attack_Change != 0{
   obj_megaman.atk = Attack_Change;
   Attack_Change = 0;
}
if Charge_Attack_Change != 0{
   obj_megaman.chrg_atk = Charge_Attack_Change;
   Charge_Attack_Change = 0;
}
if Speed_Change != 0{
   obj_megaman.spd = Speed_Change;
   Speed_Change = 0;
}

if Element_Change != ""{
   switch(Element_Change){
       case "Normal":
       obj_megaman.Element[1] = E_None;
       //Element_Change = "";
       break;
       
       case "Fire":
       obj_megaman.Element[1] = E_Fire;
       //Element_Change = "";
       break; 
       
       case "Wood":
       obj_megaman.Element[1] = E_Wood;
       //Element_Change = "";
       break;  
        
       case "Aqua":
       obj_megaman.Element[1] = E_Aqua;
       //Element_Change = "";
       break; 
          
       case "Elec":
       obj_megaman.Element[1] = E_Elec;
       //Element_Change = "";
       break;                    
   }
}

//Element ShowCase
if obj_megaman.Element[1] = E_None{
   Element_Show = "Normal";
   EColor_Show = c_white;
   Element_Change = "";
}
if obj_megaman.Element[1] = E_Fire{
   Element_Show = "Fire";
   EColor_Show = c_red;
   Element_Change = "";
}
if obj_megaman.Element[1] = E_Aqua{
   Element_Show = "Aqua";
   EColor_Show = c_blue;
   Element_Change = "";
}
if obj_megaman.Element[1] = E_Wood{
   Element_Show = "Wood";
   EColor_Show = c_green;
   Element_Change = "";
}
if obj_megaman.Element[1] = E_Elec{
   Element_Show = "Elec";
   EColor_Show = c_yellow;
   Element_Change = "";
}

//Chip Create
if ChipName_Change != ""{
    global.Slot_Name[1] = ChipName_Change;
    global.Slot_Icon[1] = I_WOW;
    ChipName_Change = "";
}
if ChipPower_Change != -1{
    global.Slot_Power[1] = ChipPower_Change;
    ChipPower_Change = -1;
}
if ChipElement_Change != ""{
    switch(ChipElement_Change){
        case "Normal":
        global.Slot_Element[1] = E_None;
        ChipElement_Change = "";
        break;
        case "Aqua":
        global.Slot_Element[1] = E_Aqua;
        ChipElement_Change = "";
        break;  
        case "Wood":
        global.Slot_Element[1] = E_Wood;
        ChipElement_Change = "";
        break;
        case "Elec":
        global.Slot_Element[1] = E_Elec;
        ChipElement_Change = "";
        break;
        case "Fire":
        global.Slot_Element[1] = E_Fire;
        ChipElement_Change = "";
        break;  
        case "Sword":
        global.Slot_Element[1] = E_Sword;
        ChipElement_Change = "";
        break;
        case "Heal":
        global.Slot_Element[1] = E_Heal;
        ChipElement_Change = "";
        break;                                            
    }
} 

//Virus Summon
switch(VS_Panel){
   case 1:
   VS_Panel = instance_place(140,91,obj_panel);
   break;
   case 2:
   VS_Panel = instance_place(140,115,obj_panel);
   break;
   case 3:
   VS_Panel = instance_place(140,139,obj_panel);
   break;
   case 4:
   VS_Panel = instance_place(180,91,obj_panel);
   break;     
   case 5:
   VS_Panel = instance_place(180,115,obj_panel);
   break;   
   case 6:
   VS_Panel = instance_place(180,139,obj_panel);
   break;
   case 7:
   VS_Panel = instance_place(220,91,obj_panel);
   break;
   case 8:
   VS_Panel = instance_place(220,115,obj_panel);
   break;      
   case 9:
   VS_Panel = instance_place(220,139,obj_panel);
   break;           
}

if Virus_Summon != "" &amp;&amp; VS_Panel != 0{
     switch(Virus_Summon){
        case "Mettaur":
        with(VS_Panel){
          with(instance_create(x-4,y-6,obj_mett)){
            Order = instance_number(obj_mett);
            Fade_In = 0;
            image_alpha = 1;
          }
        }
        Virus_Summon = "";
        VS_Panel = 0;
        break;  
        
        case "Canodumb":
        with(VS_Panel){
          with(instance_create(x-1,y-18,obj_canodumb)){
            Fade_In = 0;
            image_alpha = 1;
          }
        }
        Virus_Summon = "";
        VS_Panel = 0;
        break;     
        
        case "Champy":
        with(VS_Panel){
          with(instance_create(x-5,y-18,obj_champy)){
            Fade_In = 0;
            image_alpha = 1;
          }
        }
        Virus_Summon = "";
        VS_Panel = 0;
        break;  
        
        case "ChampyEX":
        with(VS_Panel){
          with(instance_create(x-5,y-18,obj_champyEX)){
            Fade_In = 0;
            image_alpha = 1;
          }
        }
        Virus_Summon = "";
        VS_Panel = 0;
        break;         
        
        case "Boomer":
        with(VS_Panel){
          with(instance_create(x-3,y-19,obj_boomer)){
            Fade_In = 0;
            image_alpha = 1;
          }
        }
        Virus_Summon = "";
        VS_Panel = 0;
        break;    

        case "Powie":
        with(VS_Panel){
          with(instance_create(x-3,y-21,obj_powie)){
            Order = (instance_number(obj_powie)-1);            
            Fade_In = 0;
            image_alpha = 1;
          }
        }

        Virus_Summon = "";
        VS_Panel = 0;
        break; 
        
        //Bosses
        case "CrashMan":
        with(VS_Panel){
          with(instance_create(x+1,y-28,obj_crashman)){
            State = 0;
            Fade_In = 0;
            image_alpha = 1;
          }
        }
        Virus_Summon = "";
        VS_Panel = 0;
        break;  
        
        case "GutsMan":
        with(VS_Panel){
          with(instance_create(x-5,y-19,obj_gutsman)){
            State = 0;
            Fade_In = 0;
            image_alpha = 1;
          }
        }
        Virus_Summon = "";
        VS_Panel = 0;
        break;           
        
        case "Bass":
        with(VS_Panel){
          with(instance_create(x-2,y-35,obj_bass)){
            State = 0;
            Fade_In = 0;
            image_alpha = 1;
          }
        }
        Virus_Summon = "";
        VS_Panel = 0;
        break;   
        
        case "MegaManSF":
        with(VS_Panel){
          with(instance_create(x-2,y-20,obj_megamanSF_boss)){
            State = 0;
            Fade_In = 0;
            image_alpha = 1;
          }
        }
        Virus_Summon = "";
        VS_Panel = 0;
        break;                                                         
     }
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gamepad support
Controller_Input();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(Test_Deck);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_self();
draw_set_colour(c_white);

//Drawing the Virus's Name
if Name_Draw{
   draw_sprite(spr_virus_name_back,0,175,0);
   draw_sprite(spr_virus_name_back,0,175+26,0);
   draw_sprite(spr_virus_name_back,0,175+52,0);
   if VS[2] != "" {draw_sprite(spr_virus_name_back,0,175,15); draw_sprite(spr_virus_name_back,0,175+26,15); draw_sprite(spr_virus_name_back,0,175+52,15);}
   if VS[3] != "" {draw_sprite(spr_virus_name_back,0,175,30); draw_sprite(spr_virus_name_back,0,175+26,30); draw_sprite(spr_virus_name_back,0,175+52,30);}
   
   draw_set_font(Chip_Font);
   draw_set_colour(c_white);
   draw_text(180,5,VS[1]);
   draw_text(180,20,VS[2]);
   draw_text(180,35,VS[3]);
}

//Drawing the Timer
if Show_Timer &amp;&amp; Debug = "On"{
    draw_set_font(Chip_Font);
    if T_Seconds &gt; 9 {draw_text(102,35,string(T_Minutes) + ":" + string(T_Seconds))}
    if T_Seconds &lt;= 9 {draw_text(102,35,string(T_Minutes) + ":" +"0" + string(T_Seconds))}
    
    draw_set_font(Chip_Font);
    draw_set_colour(EColor_Show);
    draw_text(102,48,Element_Show);
    draw_set_colour(c_white);
}
//Debug Hud
if Debug = "On"{
   draw_set_font(Chip_Font);
   draw_text(5,40,"Debug");
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if obj_megaman.State != S_Frozen &amp;&amp; !instance_exists(obj_fade) &amp;&amp; obj_custom_gague.image_alpha = 1{

if State = Normal{
    with(obj_megaman) {State = S_Paused}
    with(obj_virus) {State = Paused}
    State = Paused;
    exit;
}
if State = Paused{
    with(obj_megaman) {State = S_Normal}
    with(obj_virus) {State = Normal}
    State = Normal;
    exit;
}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
