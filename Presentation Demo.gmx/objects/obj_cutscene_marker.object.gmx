<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cutscene_hitbox</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>A_Check = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if Cutscene != noone{
    if StoryEvent = Cutscene{
        if place_meeting(x,y,objOverworldAvatar){
            with(objOverworldAvatar){
                if Move{
                    Move = false;
                    if other.A_Check = true {Cutscene = 1; Alpha = 0; other.A_Check = false;}
                    Timeline = other.Timeline;
                    if networld == 0{
                        if sprite_index=mov_lan_upleft{sprite_index=lan_still_upleft}
                        if sprite_index=mov_lan_upright{sprite_index=lan_still_upright}
                        if sprite_index=mov_lan_downright{sprite_index=lan_still_downright}
                        if sprite_index=mov_lan_downleft{sprite_index=lan_still_downleft}
                        if sprite_index=mov_lan_left{sprite_index=lan_still_left}
                        if sprite_index=mov_lan_right{sprite_index=lan_still_right}
                        if sprite_index=mov_lan_up{sprite_index=lan_still_up}
                        if sprite_index=mov_lan_down{sprite_index=lan_still_down}
                    }

                    if networld == 1{
                        if sprite_index=Overworld_MoveLeftUp{sprite_index=sprite24}
                        if sprite_index=Overworld_MoveRightUp{sprite_index=sprite23}
                        if sprite_index=Overworld_MoveLeftDown{sprite_index=sprite28}
                        if sprite_index=Overworld_MoveRightDown{sprite_index=sprite27}
                        if sprite_index=Overworld_MoveLeft{sprite_index=sprite26}
                        if sprite_index=Overworld_MoveRight{sprite_index=sprite25}
                        if sprite_index=Overworld_MoveUp{sprite_index=Overworld_Stand}
                        if sprite_index=Overworld_MoveDown{sprite_index=sprite29}
                    }
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
