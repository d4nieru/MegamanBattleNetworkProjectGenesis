<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_geminiman</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_virus</parentName>
  <maskName>spr_geminiman</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Mask = spr_geminiman;
Virus_Type = 0
Flight = true
Ground = false
image_speed = 0

Base = true;
Buster = false;
Hurt_A = false;
Laser1 = false;
Laser2 = false;
Laser3 = false;

Direction = -1
Up = 0;
Down = 1;
Left = 2;
Right = 3;

MMT = 40;
Move_Timer = MMT
Move_Count = 0;
Buster_Count = 3;
Damage = 0;
Phase_Change = true;


//Stats
MaxHp = 500;
Hp = MaxHp;
spd = .4;
Power1 = 5;
Power2 = 20;
Power3 = 35;
Power4 = 50;



Normal = 0
Paused = 0
Frozen = 0
Dead = 5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Damage
if (Damage * -1) &gt;= Hp{
   Hp = 0;
} 
if State != S_Frozen &amp;&amp; State != S_Paused {
   if Hp = 0 {State = Dead;}
} 

if Hp &gt; MaxHp {Hp = MaxHp}
if Hp &lt; 0 {Hp = 0}
 
if Damage &gt; 0{
   Hp += .5;
   Damage -= .5;
}
if Damage &lt; 0{
   Hp -= .5;
   Damage += .5;
}

//Phase Change
if Hp &lt;= 250 &amp;&amp; Phase_Change{
Phase_Change = false;
Move_Count = 0;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//States
if obj_megaman.State = S_Paused || obj_megaman.State = S_Frozen{
   State = S_Paused;
}
State = obj_megaman.State;
Diff = obj_megaman.y-y

//Animation Variable
Base_Start = 0; Base_End = 2;
Hurt_Start = 3;
Buster_Start = 4; Buster_End = 7;
Laser1_Start = 8; Laser1_End = 12;
Laser2_Start = 13; Laser2_End = 17;
Laser3_Start = 18; Laser3_End = 24;

if State != S_Paused &amp;&amp; State != S_Frozen{

//Movement
Movement_Pattern = choose(0,1,2,3);
if Base &amp;&amp; image_speed = 0{
  Move_Timer -= 1
}

if Base &amp;&amp; image_index &gt;= Base_End{
  switch(Direction){
     case Up:
     y-=24;
     Move_Count += 1;
     Move_Timer = MMT;
     image_speed = 0;
     Direction = -1;
     image_index = Base_Start;
     break;
     
     case Down:
     y+=24;
     Move_Count += 1;
     Move_Timer = MMT;
     image_speed = 0;
     Direction = -1;
     image_index = Base_Start;
     break;
     
     case Left:
     x-=40;
     Move_Count += 1;
     Move_Timer = MMT;
     image_speed = 0;
     Direction = -1;
     image_index = Base_Start;
     break;
     
     case Right:
     x+=40;
     Move_Count += 1;
     Move_Timer = MMT;
     image_speed = 0;
     Direction = -1;
     image_index = Base_Start;
     break;
     
  }
}

if Base &amp;&amp; image_index = Base_Start &amp;&amp; Move_Timer &lt;= 0{
  switch(Movement_Pattern){
       case Up:
        if place_meeting(x,y-24,obj_panel_blue_mask){
           image_speed = spd;
           Direction = Up;
        }
        break; 
        
        case Down:
        if place_meeting(x,y+24,obj_panel_blue_mask){
          image_speed = spd;
          Direction = Down;
        }
        break;
        
      case Left:
        if place_meeting(x-40,y,obj_panel_blue_mask){
          image_speed = spd;
          Direction = Left;
        }
        break;
        
        case Right:
        if place_meeting(x+40,y,obj_panel_blue_mask){
          image_speed = spd;
          Direction = Right;
        }
        break;
  }
}

//Buster Attack
if Move_Count = 4 &amp;&amp; Base &amp;&amp; Hp &gt; 250{
 if !place_meeting(x,obj_megaman.y-28,obj_virus){ 
   Base = false;
   Buster = true;
   y = obj_megaman.y-28;
   image_index = Buster_Start;
   } else {Move_Count = 2}
}

if Buster &amp;&amp; Buster_Count = 0{
    Buster = false;
    Base = true;
    Buster_Count = 3;
    image_index = Base_Start;
    image_speed = 0;
    Move_Timer = MMT+20;
    Move_Count = 6
}

//Laser Attacks
//1
if Move_Count = 10 &amp;&amp; Base &amp;&amp; Hp &gt; 250{
 if !place_meeting(x,obj_megaman.y-28,obj_virus){ 
   Base = false;
   Laser1 = true;
   y = obj_megaman.y-28;
   image_index = Laser1_Start;
   } else {Move_Count = 7}
}

if Laser1 &amp;&amp; image_index &gt;= Laser1_End{
    Laser1 = false;
    Base = true;
    Move_Count = 0;
    image_index = Base_Start;
    image_speed = 0;
    Move_Timer = MMT+20
}

//2
LaserBuster = choose(1,2)
if Move_Count = 5 &amp;&amp; Base &amp;&amp; Hp &lt;= 250{
if LaserBuster = 1{ 
 if !place_meeting(x,obj_megaman.y-28,obj_virus){ 
   Base = false;
   Laser1 = true;
   Move_Count = 6
   y = obj_megaman.y-28;
   image_index = Laser1_Start;
   exit;
   } else {Move_Count = 3}
   }
   
   if LaserBuster = 2{ 
 if !place_meeting(x,obj_megaman.y-28,obj_virus){ 
   Base = false;
   Buster = true;
   y = obj_megaman.y-28;
   image_index = Buster_Start;
   exit;
   } else {Move_Count = 3}
   }
}

if Laser2 &amp;&amp; image_index &gt;= Laser2_End{
    Laser2 = false;
    Base = true;
    image_index = Base_Start;
    image_speed = 0;
    Move_Timer = MMT+20
}

//3
if Move_Count = 11 &amp;&amp; Base &amp;&amp; Hp &lt;= 250{
   Base = false;
   Laser3 = true;
   SaveX = x;
   SaveY = y;
   if obj_megaman.y &gt;= 99 {x = 264; y = 133;}
   if obj_megaman.y &lt;= 99 {x = 264; y = 111;}
   image_index = Laser3_Start;
}

if Laser3 &amp;&amp; image_index &gt;= Laser3_End{
    Laser3 = false;
    //Base = true;
    Move_Count = 0;
    image_index = 21;
    image_speed = 0;
}

//Animation Reset
if image_index &gt; Buster_End &amp;&amp; Buster{
    image_index = Buster_Start;
    Buster_Count -= 1;
}

//Animation Speeds
if image_index &gt; Base_Start &amp;&amp; image_index &lt;= Base_End{
   image_speed = spd;
}
if image_index &gt;= Buster_Start &amp;&amp; image_index &lt;= Buster_End{
   image_speed = .15
}
if image_index &gt;= Laser1_Start &amp;&amp; image_index &lt;= Laser1_End{
  image_speed = .2
}
if image_index &gt;= Laser2_Start &amp;&amp; image_index &lt;= Laser2_End{
  image_speed = .2
}
if image_index &gt;= Laser3_Start &amp;&amp; image_index &lt;= Laser3_End &amp;&amp; Laser3{
  image_speed = .2
}

}

if State = S_Paused || State = S_Frozen{
  image_speed = 0
} 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///HitBoxes
if State = S_Normal || State = S_Frozen {scr_battle_damage_enemy();}

//Buster
if image_index &gt;= 6 &amp;&amp; image_index &lt;= 6.2{
   with(instance_create(x-37,y+41,obj_geminibuster_hitbox)){
     Power = other.Power1;
   }
}

//Laser1
if image_index &gt;= 10 &amp;&amp; image_index &lt;= 10.3{
   if !instance_exists(obj_geminilaser_small){
    with(instance_create(x-21,y-13,obj_geminilaser_small)){
      Power = other.Power2
    }
   }
}

//Laser3
if image_index = 21 &amp;&amp; image_speed = 0 &amp;&amp; !instance_exists(obj_geminilaser_big){
  if y = 111{ 
       instance_create(x-95,y-10,obj_geminilaser_big);
  }
  if y = 133{
      instance_create(x-95,y-10,obj_geminilaser_big);
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

if Hp &gt; 0{
draw_set_colour(c_black);
draw_set_font(fnt_smallest);
draw_text(x-7,y+40,round(Hp));

draw_set_colour(c_white);
draw_set_font(fnt_megaman_numb);
draw_text(x-7,y+40,round(Hp));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
