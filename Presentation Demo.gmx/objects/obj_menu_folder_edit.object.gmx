<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_chip_folder_edit</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-10000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(PETMenu){
  Freeze = true;
}
Control = "Left";
Freeze = false;
CursorY = y+38;
Fast_Scroll = 0;
image_speed = 0;
if !instance_exists(obj_folder_edit_cursor) {instance_create(x+120,y+21,obj_folder_edit_cursor)}

Chip_Font = font_add_sprite_ext(spr_chip_font,"0123456789AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz=?!+:-",true,0)
Text_Font = font_add_sprite_ext(spr_text_font,"AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz0123456789!?+-:",true,0)
TextNoShadow_Font = font_add_sprite_ext(spr_text_font_noshadow,"AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz0123456789!?+-:.,/'",true,1)

Placement = 1;
Show_Chip[0] = 0;
Show_Chip[1] = 1;
Show_Chip[2] = 2;
Show_Chip[3] = 3;
Show_Chip[4] = 4;
Show_Chip[5] = 5;
Show_Chip[6] = 6;
Show_Chip[7] = 7;
Show_Chip[8] = 8;

Show_Pack[0] = 0;
Show_Pack[1] = 1;
Show_Pack[2] = 2;
Show_Pack[3] = 3;
Show_Pack[4] = 4;
Show_Pack[5] = 5;
Show_Pack[6] = 6;
Show_Pack[7] = 7;
Show_Pack[8] = 8;

Show_Chip_ext[0] = 0;
Show_Pack_ext[0] = 0;
Chip_Y = obj_folder_edit_cursor.ystart;
Pack_Y = obj_folder_edit_cursor.ystart;
Side_Save = "Left";
CID = 0;

Selected_Chip = noone;
Selected_Pack = noone;
Saved_Place = 0;
Array_Size = 0;

for(i = 0; i &lt; 30; i += 1;){
     with(instance_create(x,y,Chip_Deck[i])){
         other.Chip_ID[other.i] = id;
     }    
}

for(j = 0; j &lt; 1000; j += 1;){
 if CTO[j] != noone{    
     with(instance_create(x,y,CTO[j])){
        other.Pack_ID[other.j] = id;
        Amount = CTA[other.j];
     }
     Array_Size += 1;
  } 
 if CTO[j] = noone{
   exit;
 }     
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(PETMenu){
   //Freeze = false;
}
with(obj_chip){
   //instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Left Side
if Show_Chip_ext[0] &gt; 29 {Show_Chip_ext[0] = 29}
Chip_Names = Chip_ID[Show_Chip_ext[0]].Name;
Pack_Names = Pack_ID[Show_Pack_ext[0]].Name;


if !Freeze{

if Control = "Left"{

CID = Show_Chip_ext[0];
Chip_Y = obj_folder_edit_cursor.y;

if keyboard_check_pressed(ord("X")){
    if Selected_Chip = noone{ //&amp;&amp; Other_Menu.Selected_Chip = noone{
        with(instance_create(x,y,obj_menu_tran)){
            Destroy = obj_menu_folder_edit;
            Menu = obj_chip_menu_test;
        }
    }
}

if keyboard_check_pressed(ord("Z")){
     if Selected_Chip = noone{
         Side_Save = "Left";
         Selected_Chip = Chip_ID[CID];
         Saved_Place = CID;
         with(instance_create(x+85,obj_folder_edit_cursor.y,obj_folder_selected)){
           Placement = other.Placement-1;
         }
         exit;
     }
     if Selected_Chip != noone{
         if Side_Save = "Left"{
             Chip_ID[Saved_Place] = Chip_ID[CID];         
             Chip_Deck[Saved_Place] = Chip_ID[CID].Object_Name;
             Chip_ID[CID] = Selected_Chip;
             Chip_Deck[CID] = Selected_Chip.Object_Name;
             Selected_Chip = noone;
             Selected_Pack = noone;
             with(obj_folder_selected){
                instance_destroy();
             }
             exit;
         }
         if Side_Save = "Right"{
            Selected_Pack = Chip_ID[CID];
            Chip_ID[CID] = Selected_Chip;
            Chip_Deck[CID] = Selected_Chip.Object_Name;
            
        for(h = 0; h &lt; 1000; h += 1){
             if Array_Size = h {Pack_ID[h] = noone;}        
             if Pack_ID[h] = noone{
                   Pack_ID[h] = Selected_Pack;
                   Pack_ID[h].Amount = 1;
                   Array_Size += 1
                   add_chip_to_pack(Selected_Pack.Object_Name);
                   break;                  
             }
             if Pack_ID[h].Name = Selected_Pack.Name &amp;&amp; Pack_ID[h].Code_A = Selected_Pack.Code_A{
                 Pack_ID[h].Amount += 1;
                 CTA[h] += 1;
                 break;
             }
        }
         //Pack_ID[Saved_Place] = Chip_ID[CID];
         //Chip_Deck[Saved_Place] = Pack_ID[Show_Pack_ext[0]].Object_Name;
         Pack_ID[Show_Pack_ext[0]].Amount -= 1;
         CTA[Show_Pack_ext[0]] -= 1;
         Selected_Chip = noone;
         Selected_Pack = noone;
         with(obj_folder_selected){
            instance_destroy();
         }         
         exit;      
         }         
     }
     /*if Selected_Chip = noone{
        for(h = 0; h &lt; 1000; h += 1){
             if Other_Menu.Array_Size = h {Other_Menu.Chip_ID[h] = noone;}        
             if Other_Menu.Chip_ID[h] = noone{
                   Other_Menu.Chip_ID[h] = Chip_ID[CID];
                   Other_Menu.Chip_ID[h].Amount = 1;
                   Other_Menu.Array_Size += 1
                   add_chip_to_pack(Chip_ID[CID].Object_Name);
                   break;                  
             }
             if Other_Menu.Chip_ID[h].Name = Chip_ID[CID].Name &amp;&amp; Other_Menu.Chip_ID[h].Code_A = Chip_ID[CID].Code_A{
                 Other_Menu.Chip_ID[h].Amount += 1;
                 CTA[h] += 1;
                 break;
             }
        }        
         Chip_ID[CID] = Other_Menu.Selected_Chip;
         Chip_Deck[CID] = Other_Menu.Selected_Chip.Object_Name;
         Other_Menu.Selected_Chip.Amount -= 1;
         CTA[Other_Menu.Saved_Place] -= 1;
         Other_Menu.Selected_Chip = noone;
         with(obj_folder_selected){
            instance_destroy();
         }
         exit;
     }     */
}

if keyboard_check(vk_down) &amp;&amp; !keyboard_check(vk_up){
    Fast_Scroll += 1;
    if Fast_Scroll = round(room_speed/7){
        Fast_Scroll = 0;
        event_user(0);
        exit;
    }
}
if keyboard_check(vk_up) &amp;&amp; !keyboard_check(vk_down){
    Fast_Scroll += 1;
    if Fast_Scroll = round(room_speed/7){
        Fast_Scroll = 0;
        event_user(1);
        exit;
    }
}
if !keyboard_check(vk_down) &amp;&amp; !keyboard_check(vk_up){
    Fast_Scroll = 0;
}

if keyboard_check_pressed(vk_down){
   if CID != 29{   
    if Placement = 9{  
        for(r = 0; r &lt; 9; r += 1){
              Show_Chip[r] += 1;
        }
        with(obj_folder_selected){
          y -= 15;
          Placement -= 1;
        }
     }    
      if Placement != 9{   
             Placement += 1;
             with(obj_folder_edit_cursor){
                y += 15;
             }
         }         
     Show_Chip_ext[0] += 1;  
   }    
}

if keyboard_check_pressed(vk_up){
     if CID != 0{
       if Placement = 1{  
           for(e = 0; e &lt; 9; e += 1){
                Show_Chip[e] -= 1;
           }
           with(obj_folder_selected){
             y += 15;
             Placement += 1;
           }           
        } 
         if Placement != 1{
               Placement -= 1;
               with(obj_folder_edit_cursor){
                  y -= 15;
               }
         }        
   Show_Chip_ext[0] -= 1;         
     }  
}

if keyboard_check_pressed(ord("A")) &amp;&amp; !instance_exists(obj_giant_chip){
    with(instance_create(x+240,y+17,obj_giant_chip)){
        Direction = "Right";
    }
    exit;
}
if keyboard_check_pressed(ord("A")) &amp;&amp; instance_exists(obj_giant_chip){
    with(obj_giant_chip){
        if hspeed = 0 {Direction = "RightBack";}
    }
}

if keyboard_check_pressed(vk_right) &amp;&amp; !instance_exists(obj_giant_chip){
    with(obj_folder_edit_cursor) {image_xscale = -1}
    Control = "Right"
    with(obj_folder_edit_cursor) {y = other.Pack_Y};
}

 
}


}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Right Side
if !Freeze{

if Control = "Right"{

CID = Show_Pack_ext[0];
Pack_Y = obj_folder_edit_cursor.y;

if keyboard_check_pressed(ord("X")){
    if Selected_Chip = noone{ //&amp;&amp; Other_Menu.Selected_Chip = noone{
        with(instance_create(x,y,obj_menu_tran)){
            Destroy = obj_menu_folder_edit;
            Menu = obj_chip_menu_test;
        }
    }
}

if keyboard_check_pressed(ord("Z")){     
     if Selected_Chip = noone &amp;&amp; Pack_ID[CID].Amount &gt; 0{
         Side_Save = "Right";
         Selected_Chip = Pack_ID[CID];
         Saved_Place = CID;
         with(instance_create(x+85,obj_folder_edit_cursor.y,obj_folder_selected)){
           Placement = other.Placement-1;
         }
         exit;
     }
     if Selected_Chip != noone &amp;&amp; Pack_ID[CID].Amount &gt; 0{
         if Side_Save = "Right"{
             Pack_ID[Saved_Place] = Pack_ID[CID];         
             CTO[Saved_Place] = Pack_ID[CID].Object_Name;
             CTA[Saved_Place] = Pack_ID[CID].Amount;
             Pack_ID[CID] = Selected_Chip;
             CTO[CID] = Selected_Chip.Object_Name;
             CTA[CID] = Selected_Chip.Amount;
             Selected_Chip = noone;
             Selected_Pack = noone;
             with(obj_folder_selected){
                instance_destroy();
             }
             exit;
         }
         if Side_Save = "Left"{
            Selected_Pack = Pack_ID[CID];
            Chip_ID[Show_Chip_ext[0]] = Selected_Pack;
            Chip_Deck[Show_Chip_ext[0]] = Selected_Pack.Object_Name;
            
        for(h = 0; h &lt; 1000; h += 1){
             if Array_Size = h {Pack_ID[h] = noone;}        
             if Pack_ID[h] = noone{
                   Pack_ID[h] = Selected_Chip;
                   Pack_ID[h].Amount = 1;
                   Array_Size += 1
                   add_chip_to_pack(Selected_Chip.Object_Name);
                   break;                  
             }
             if Pack_ID[h].Name = Selected_Chip.Name &amp;&amp; Pack_ID[h].Code_A = Selected_Chip.Code_A{
                 Pack_ID[h].Amount += 1;
                 CTA[h] += 1;
                 break;
             }
        }
         //Pack_ID[Saved_Place] = Chip_ID[CID];
         //Chip_Deck[Saved_Place] = Pack_ID[Show_Pack_ext[0]].Object_Name;
         Selected_Pack.Amount -= 1;
         CTA[Show_Pack_ext[0]] -= 1;
         Selected_Chip = noone;
         Selected_Pack = noone;
         with(obj_folder_selected){
            instance_destroy();
         }         
         exit;      
         }         
     }
     /*if Selected_Chip = noone{
        for(h = 0; h &lt; 1000; h += 1){
             if Other_Menu.Array_Size = h {Other_Menu.Chip_ID[h] = noone;}        
             if Other_Menu.Chip_ID[h] = noone{
                   Other_Menu.Chip_ID[h] = Chip_ID[CID];
                   Other_Menu.Chip_ID[h].Amount = 1;
                   Other_Menu.Array_Size += 1
                   add_chip_to_pack(Chip_ID[CID].Object_Name);
                   break;                  
             }
             if Other_Menu.Chip_ID[h].Name = Chip_ID[CID].Name &amp;&amp; Other_Menu.Chip_ID[h].Code_A = Chip_ID[CID].Code_A{
                 Other_Menu.Chip_ID[h].Amount += 1;
                 CTA[h] += 1;
                 break;
             }
        }        
         Chip_ID[CID] = Other_Menu.Selected_Chip;
         Chip_Deck[CID] = Other_Menu.Selected_Chip.Object_Name;
         Other_Menu.Selected_Chip.Amount -= 1;
         CTA[Other_Menu.Saved_Place] -= 1;
         Other_Menu.Selected_Chip = noone;
         with(obj_folder_selected){
            instance_destroy();
         }
         exit;
     }     */
}

if keyboard_check(vk_down) &amp;&amp; !keyboard_check(vk_up){
    Fast_Scroll += 1;
    if Fast_Scroll = round(room_speed/7){
        Fast_Scroll = 0;
        event_user(2);
        exit;
    }
}
if keyboard_check(vk_up) &amp;&amp; !keyboard_check(vk_down){
    Fast_Scroll += 1;
    if Fast_Scroll = round(room_speed/7){
        Fast_Scroll = 0;
        event_user(3);
        exit;
    }
}
if !keyboard_check(vk_down) &amp;&amp; !keyboard_check(vk_up){
    Fast_Scroll = 0;
}

if keyboard_check_pressed(vk_down){
   if CID != Array_Size-1{   
    if Placement = 9{  
        for(r = 0; r &lt; 9; r += 1){
              Show_Pack[r] += 1;
        }
        with(obj_folder_selected){
          y -= 15;
          Placement -= 1;
        }
     }    
      if Placement != 9{   
             Placement += 1;
             with(obj_folder_edit_cursor){
                y += 15;
             }
         }          
     Show_Pack_ext[0] += 1; 
   }    
}

if keyboard_check_pressed(vk_up){
     if CID != 0{
       if Placement = 1{  
           for(e = 0; e &lt; 9; e += 1){
                Show_Pack[e] -= 1;
           }
           with(obj_folder_selected){
             y += 15;
             Placement += 1;
           }           
        } 
         if Placement != 1{
               Placement -= 1;
               with(obj_folder_edit_cursor){
                  y -= 15;
               }
         }          
   Show_Pack_ext[0] -= 1;        
     }  
}

if keyboard_check_pressed(ord("A")) &amp;&amp; !instance_exists(obj_giant_chip){
    with(instance_create(x-80,y+17,obj_giant_chip)){
        Direction = "Left";
    }
    exit;
}
if keyboard_check_pressed(ord("A")) &amp;&amp; instance_exists(obj_giant_chip){
    with(obj_giant_chip){
        if hspeed = 0 {Direction = "LeftBack";}
    }
}

if keyboard_check_pressed(vk_left) &amp;&amp; !instance_exists(obj_giant_chip){
    with(obj_folder_edit_cursor) {image_xscale = 1};
    Control = "Left";
    with(obj_folder_edit_cursor) {y = other.Chip_Y};    
}

 
}


}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>     if CID != 0{
       if Placement = 1{  
           for(e = 0; e &lt; 9; e += 1){
                Show_Pack[e] -= 1;
           }
           with(obj_folder_selected){
             y += 15;
             Placement += 1;
           }           
        } 
         if Placement != 1{
               Placement -= 1;
               with(obj_folder_edit_cursor){
                  y -= 15;
               }
         }          
   Show_Pack_ext[0] -= 1;        
     }  
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>   if CID != Array_Size-1{   
    if Placement = 9{  
        for(r = 0; r &lt; 9; r += 1){
              Show_Pack[r] += 1;
        }
        with(obj_folder_selected){
          y -= 15;
          Placement -= 1;
        }
     }    
      if Placement != 9{   
             Placement += 1;
             with(obj_folder_edit_cursor){
                y += 15;
             }
         }          
     Show_Pack_ext[0] += 1; 
   } 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>     if CID != 0{
       if Placement = 1{  
           for(e = 0; e &lt; 9; e += 1){
                Show_Chip[e] -= 1;
           }
           with(obj_folder_selected){
             y += 15;
             Placement += 1;
           }           
        } 
         if Placement != 1{
               Placement -= 1;
               with(obj_folder_edit_cursor){
                  y -= 15;
               }
         }        
   Show_Chip_ext[0] -= 1;         
     }  
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>   if CID != 29{   
    if Placement = 9{  
        for(r = 0; r &lt; 9; r += 1){
              Show_Chip[r] += 1;
        }
        with(obj_folder_selected){
          y -= 15;
          Placement -= 1;
        }
     }    
      if Placement != 9{   
             Placement += 1;
             with(obj_folder_edit_cursor){
                y += 15;
             }
         }         
     Show_Chip_ext[0] += 1;  
   } 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Showing the Chips

//Folder
draw_self();
draw_set_font(Chip_Font);
draw_set_colour(c_white);

//Draw Icon
/*draw_sprite(spr_chip_icon,Chip_ID[Show_Chip[0]].Card_Icon,x+110,y+44);
draw_sprite(spr_chip_icon,Chip_ID[Show_Chip[1]].Card_Icon,x+110,y+60);
draw_sprite(spr_chip_icon,Chip_ID[Show_Chip[2]].Card_Icon,x+110,y+76);
draw_sprite(spr_chip_icon,Chip_ID[Show_Chip[3]].Card_Icon,x+110,y+92);
draw_sprite(spr_chip_icon,Chip_ID[Show_Chip[4]].Card_Icon,x+110,y+108);
draw_sprite(spr_chip_icon,Chip_ID[Show_Chip[5]].Card_Icon,x+110,y+124);
draw_sprite(spr_chip_icon,Chip_ID[Show_Chip[6]].Card_Icon,x+110,y+140);
*/

//Draw the Chip Name
draw_text(x+13,y+24,Chip_ID[Show_Chip[0]].Name);
draw_text(x+13,y+39,Chip_ID[Show_Chip[1]].Name);
draw_text(x+13,y+54,Chip_ID[Show_Chip[2]].Name);
draw_text(x+13,y+69,Chip_ID[Show_Chip[3]].Name);
draw_text(x+13,y+84,Chip_ID[Show_Chip[4]].Name);
draw_text(x+13,y+99,Chip_ID[Show_Chip[5]].Name);
draw_text(x+13,y+114,Chip_ID[Show_Chip[6]].Name);
draw_text(x+13,y+129,Chip_ID[Show_Chip[7]].Name);
draw_text(x+13,y+144,Chip_ID[Show_Chip[8]].Name);

//Draw Element
draw_sprite(spr_chip_element,Chip_ID[Show_Chip[0]].Element,x+85,y+24);
draw_sprite(spr_chip_element,Chip_ID[Show_Chip[1]].Element,x+85,y+39);
draw_sprite(spr_chip_element,Chip_ID[Show_Chip[2]].Element,x+85,y+54);
draw_sprite(spr_chip_element,Chip_ID[Show_Chip[3]].Element,x+85,y+69);
draw_sprite(spr_chip_element,Chip_ID[Show_Chip[4]].Element,x+85,y+84);
draw_sprite(spr_chip_element,Chip_ID[Show_Chip[5]].Element,x+85,y+99);
draw_sprite(spr_chip_element,Chip_ID[Show_Chip[6]].Element,x+85,y+114);
draw_sprite(spr_chip_element,Chip_ID[Show_Chip[7]].Element,x+85,y+129);
draw_sprite(spr_chip_element,Chip_ID[Show_Chip[8]].Element,x+85,y+144);

//Draw the Chip Code
draw_text(x+97,y+24,Chip_ID[Show_Chip[0]].Code_A);
draw_text(x+97,y+39,Chip_ID[Show_Chip[1]].Code_A);
draw_text(x+97,y+54,Chip_ID[Show_Chip[2]].Code_A);
draw_text(x+97,y+69,Chip_ID[Show_Chip[3]].Code_A);
draw_text(x+97,y+84,Chip_ID[Show_Chip[4]].Code_A);
draw_text(x+97,y+99,Chip_ID[Show_Chip[5]].Code_A);
draw_text(x+97,y+114,Chip_ID[Show_Chip[6]].Code_A);
draw_text(x+97,y+129,Chip_ID[Show_Chip[7]].Code_A);
draw_text(x+97,y+144,Chip_ID[Show_Chip[8]].Code_A);

//Draw Chip Base 12 98
/*draw_sprite(spr_chip_base,0,x+7,y+16);
draw_sprite(spr_chip_element,Chip_ID[CID].Element,x+39,y+84);
draw_sprite(spr_chip_pic,Chip_ID[CID].Card_Pic,x+47,y+48);
draw_sprite(spr_chip_code,Chip_ID[CID].Code,x+20,y+83);
if Chip_ID[CID].Power &gt; 0{
    if Chip_ID[CID].Power &lt; 100 {draw_text(x+67,y+84,string(Chip_ID[CID].Power));}
    if Chip_ID[CID].Power &gt; 99 {draw_text(x+63,y+84,string(Chip_ID[CID].Power));}
}
draw_set_colour(c_black);
draw_set_font(TextNoShadow_Font);
draw_text(x+14,y+98,Chip_ID[CID].Chip_Text);
*/

//Pack
//Draw the Chip Name
draw_text(x+129,y+24,Pack_ID[Show_Pack[0]].Name);
draw_text(x+129,y+39,Pack_ID[Show_Pack[1]].Name);
draw_text(x+129,y+54,Pack_ID[Show_Pack[2]].Name);
draw_text(x+129,y+69,Pack_ID[Show_Pack[3]].Name);
draw_text(x+129,y+84,Pack_ID[Show_Pack[4]].Name);
draw_text(x+129,y+99,Pack_ID[Show_Pack[5]].Name);
draw_text(x+129,y+114,Pack_ID[Show_Pack[6]].Name);
draw_text(x+129,y+129,Pack_ID[Show_Pack[7]].Name);
draw_text(x+129,y+144,Pack_ID[Show_Pack[8]].Name);

//Draw Element
draw_sprite(spr_chip_element,Pack_ID[Show_Pack[0]].Element,x+201,y+24);
draw_sprite(spr_chip_element,Pack_ID[Show_Pack[1]].Element,x+201,y+39);
draw_sprite(spr_chip_element,Pack_ID[Show_Pack[2]].Element,x+201,y+54);
draw_sprite(spr_chip_element,Pack_ID[Show_Pack[3]].Element,x+201,y+69);
draw_sprite(spr_chip_element,Pack_ID[Show_Pack[4]].Element,x+201,y+84);
draw_sprite(spr_chip_element,Pack_ID[Show_Pack[5]].Element,x+201,y+99);
draw_sprite(spr_chip_element,Pack_ID[Show_Pack[6]].Element,x+201,y+114);
draw_sprite(spr_chip_element,Pack_ID[Show_Pack[7]].Element,x+201,y+129);
draw_sprite(spr_chip_element,Pack_ID[Show_Pack[8]].Element,x+201,y+144);

//Draw the Chip Code
draw_text(x+213,y+24,Pack_ID[Show_Pack[0]].Code_A);
draw_text(x+213,y+39,Pack_ID[Show_Pack[1]].Code_A);
draw_text(x+213,y+54,Pack_ID[Show_Pack[2]].Code_A);
draw_text(x+213,y+69,Pack_ID[Show_Pack[3]].Code_A);
draw_text(x+213,y+84,Pack_ID[Show_Pack[4]].Code_A);
draw_text(x+213,y+99,Pack_ID[Show_Pack[5]].Code_A);
draw_text(x+213,y+114,Pack_ID[Show_Pack[6]].Code_A);
draw_text(x+213,y+129,Pack_ID[Show_Pack[7]].Code_A);
draw_text(x+213,y+144,Pack_ID[Show_Pack[8]].Code_A);

//Draw the Pack amount
draw_text(x+225,y+24,Pack_ID[Show_Pack[0]].Amount);
draw_text(x+225,y+39,Pack_ID[Show_Pack[1]].Amount);
draw_text(x+225,y+54,Pack_ID[Show_Pack[2]].Amount);
draw_text(x+225,y+69,Pack_ID[Show_Pack[3]].Amount);
draw_text(x+225,y+84,Pack_ID[Show_Pack[4]].Amount);
draw_text(x+225,y+99,Pack_ID[Show_Pack[5]].Amount);
draw_text(x+225,y+114,Pack_ID[Show_Pack[6]].Amount);
draw_text(x+225,y+129,Pack_ID[Show_Pack[7]].Amount);
draw_text(x+225,y+144,Pack_ID[Show_Pack[8]].Amount);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
