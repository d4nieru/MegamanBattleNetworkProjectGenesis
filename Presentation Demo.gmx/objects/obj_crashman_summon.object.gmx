<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_crashman_bigdrillstab</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_crashman_base</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale = -1;
image_index = 0;
Direction = 1;
Timer = 0;
HitBox = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>MM = obj_megaman;
MMP = instance_place(MM.x,MM.y,obj_panel);
IP = instance_place(x,y,obj_panel);
depth = ((IP.y+24)*-1)-30

if sprite_index = spr_crashman_base{
        if image_index = 0 {image_speed = 0};
        if image_index &gt; 0 {image_speed = .3};
}

if sprite_index = spr_crashman_bigdrillstab{
    if image_index = 0 {image_speed = 0};
    if image_index &lt;= 3 &amp;&amp; image_index != 0 {image_speed = .3}
    if image_index &gt;= 4 {image_speed = .5};
    
}

if sprite_index = spr_crashman_bigdrillstab || sprite_index = spr_crashman_base{
   if image_index = 0{
        Timer += 1{
           if Timer = 35{
              Timer = 0;
              image_index = .1;
           }
        }
   }
}

//Hitbox
image_round = round(image_index);

if sprite_index = spr_crashman_bigdrillstab{
     switch(image_round){
         case 4:
      if HitBox{   
         with(instance_place(MMP.x+40,MMP.y-24,obj_panel)){
             with(instance_create(x,y-3,obj_buster_hitbox)){
                 Timer = 1;
                 Buster_Sound = MegaBuster;
                 Element = global.Slot_Element[1];
                 Power = global.Slot_Power[1];
                 Travel = false;
             }
         }
         with(instance_place(MMP.x+80,MMP.y-24,obj_panel)){
             with(instance_create(x,y-3,obj_buster_hitbox)){
                 Timer = 1;
                 Buster_Sound = MegaBuster;
                 Element = global.Slot_Element[1];
                 Power = global.Slot_Power[1];
                 Travel = false;
             }
         }
         HitBox = false;
       }   
         break;
         
         case 6:
         HitBox = true;
         break;
         
         case 8:
      if HitBox{   
         with(instance_place(MMP.x+40,MMP.y-24,obj_panel)){
             with(instance_create(x,y-3,obj_buster_hitbox)){
                 Timer = 1;
                 Buster_Sound = MegaBuster;
                 Element = global.Slot_Element[1];
                 Power = global.Slot_Power[1];
                 Travel = false;
             }
         }
         with(instance_place(MMP.x+80,MMP.y-24,obj_panel)){
             with(instance_create(x,y-3,obj_buster_hitbox)){
                 Timer = 1;
                 Buster_Sound = MegaBuster;
                 Element = global.Slot_Element[1];
                 Power = global.Slot_Power[1];
                 Travel = false;
             }
         }         
         HitBox = false;
      }   
         break;
         
         case 10:
         HitBox = true;
         break;
         
        case 12:
      if HitBox{   
         with(instance_place(MMP.x+40,MMP.y-24,obj_panel)){
             with(instance_create(x,y-3,obj_buster_hitbox)){
                 Timer = 1;
                 Hurt = true;
                 Buster_Sound = MegaBuster;
                 Element = global.Slot_Element[1];
                 Power = global.Slot_Power[1];
                 Travel = false;
             }
         }
         HitBox = false;
       }
       break;                            
     }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_index = spr_crashman_base{
   if Direction = 1{
      image_index = 0;
      sprite_index = spr_crashman_bigdrillstab;
      exit;
   }
   if Direction = 2{
      global.Slot_Name[1] = "";
      global.Slot_Code[1] = -1;
      global.Slot_Power[1] = -1;
      global.Slot_Element[1] = -1;
      global.Slot_Icon[1] = -1;
      with(obj_field) {Fade = false}
      with(obj_megaman) {State = S_Normal; image_alpha = 1; image_index = 0; image_speed = 0}
      with(obj_virus) {State = Normal; mask_index = Mask;}
      instance_destroy();
   }
}

if sprite_index = spr_crashman_bigdrillstab{
   image_index = 0;
   sprite_index = spr_crashman_base;
   Direction = 2;
   exit;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
