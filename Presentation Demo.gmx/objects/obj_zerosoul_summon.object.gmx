<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_zerosoul</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = 5;
Base = true;
Buster = false;

BaseStart = 0;
BaseEnd = 6;
BusterStart = 7;
BusterEnd = 11;

Shots = 15;
Charge = false;
Charge_Timer = 80;
Return = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation
if image_index &gt; 0 &amp;&amp; !Return{
   image_speed = .4;
}

if Base{
 if !Return{ 
  if image_index &gt; BaseEnd{
      image_index = BaseStart;
      image_speed = 0;
      Base = false;
      Buster = true;
      Charge = true;
    }
  }
  if Return{
     image_speed = .2;
     if image_index &gt;= 4{
     global.Slot_Name[1] = "";
     global.Slot_Code[1] = -1;
     global.Slot_Power[1] = -1;
     global.Slot_Element[1] = -1;
     global.Slot_Icon[1] = -1;
     with(obj_field) {Fade = false}
     with(obj_megaman) {State = S_Normal; image_alpha = 1; image_index = 0; image_speed = 0}
     with(obj_virus) {State = Normal; mask_index = Mask;}
     instance_destroy();
     }
  }
}
if Buster{
   if image_index &gt; BusterEnd{
      image_index = (BusterStart + 1)
   }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Buster &amp; Charging
//Charging
if Charge_Timer &lt; -80 {Charge_Timer = -80;}

if Charge{
   if !instance_exists(obj_buster_charge) {instance_create(x,y+16,obj_buster_charge)}
   Charge_Timer -= 1
   if Charge_Timer = -80{
        image_index = BusterStart;
        Charge = false; 
        with(obj_buster_charge){
           instance_destroy();
        }
   }
}

//Buster
Random_Buster = choose(1,2,3);
if image_index &gt;= 9 &amp;&amp; image_index &lt; 9.6{
 if Random_Buster = 1{
   with(instance_create(x+40,115,obj_zerosummon_hitbox)){
     Power = global.Slot_Power[1];
     Semi_Hurt = true;
    }
    Shots -= 1;
    exit;
 }
  if Random_Buster = 2{
   with(instance_create(x+40,(115-24),obj_zerosummon_hitbox)){
     Power = global.Slot_Power[1];
     Semi_Hurt = true;
    }
    Shots -= 1;
    exit;
 }
  if Random_Buster = 3{
   with(instance_create(x+40,(115+24),obj_zerosummon_hitbox)){
     Power = global.Slot_Power[1];
     Semi_Hurt = true;
    }
    Shots -= 1;
    exit;
 }
}
if Shots = 0 &amp;&amp; Buster{
   image_speed = .2
   image_index = BaseStart;
   Return = true;
   Buster = false;
   Base = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
