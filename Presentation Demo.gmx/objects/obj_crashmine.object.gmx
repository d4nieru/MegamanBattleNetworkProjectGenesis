<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_object</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
Hp = 20;
Land = true;
MEXT = 160;
EX_Timer = MEXT;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>State = obj_megaman.State
if State = S_Normal{

if place_meeting(x,y,obj_panel) &amp;&amp; !Land{
   if instance_place(x,y,obj_panel).Panel_Status = 3 || instance_place(x,y,obj_panel).Panel_Status = 4{
       instance_destroy();
   }
}


if Land{
    hspeed = -5;
    vspeed = .8;
    if y &gt;= LaneY-6{
       hspeed = 0;
       vspeed = 0;
       x = instance_place(x,y,obj_panel).x;
       image_speed = .2;
       Land = false;
    }
}

if !Land{
   EX_Timer -= 1;
   if EX_Timer = 0{
       with(instance_place(x,y,obj_panel)){
          instance_create(x,y-5,obj_expolsion_effect);
          with(instance_create(x,y-3,obj_crashman_hitbox)){
            Power = obj_crashman.Power[1];
            Timer = -1;
            Semi = false;
          }
       }
       if Ex_Lane = 1{
       with(instance_place(x+40,y,obj_panel)){
          instance_create(x,y-5,obj_expolsion_effect);
          with(instance_create(x,y-3,obj_crashman_hitbox)){
            Power = obj_crashman.Power[1];
            Timer = -1;
            Semi = false;
          }
       }
       with(instance_place(x-40,y,obj_panel)){
          instance_create(x,y-5,obj_expolsion_effect);
          with(instance_create(x,y-3,obj_crashman_hitbox)){
            Power = obj_crashman.Power[1];
            Timer = -1;
            Semi = false;
          }
       }              
       }
       
       if Ex_Lane = 2{
       with(instance_place(x,y+24,obj_panel)){
          instance_create(x,y-5,obj_expolsion_effect);
          with(instance_create(x,y-3,obj_crashman_hitbox)){
            Power = obj_crashman.Power[1];
            Timer = -1;
            Semi = false;
          }
       }
       with(instance_place(x,y-24,obj_panel)){
          instance_create(x,y-5,obj_expolsion_effect);
          with(instance_create(x,y-3,obj_crashman_hitbox)){
            Power = obj_crashman.Power[1];
            Timer = -1;
            Semi = false;
          }
       }              
       }       
       if instance_place(x,y,obj_panel).Panel_Status = 1{
       with(instance_place(x,y,obj_panel)){
          Cracked = true;
       }
       }
       if instance_place(x,y,obj_panel).Panel_Status = 2 &amp;&amp; !place_meeting(x,y,obj_megaman){
       with(instance_place(x,y,obj_panel)){
          Broke = true;
       }
       }       
       instance_destroy();
   }
}

}

if State != S_Normal{
    hspeed = 0;
    vspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = 7;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
