<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_drill_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Panel_Check = true;
Timer = -1;
Go = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>State = obj_megaman.State;
depth = (y+10)* -1;
if place_meeting(x,y,obj_panel){
  IP = instance_place(x,y,obj_panel);
}

if State = S_Normal{
   image_speed = .4;
   if Panel_Check{
        Panel_Check = false;
        with(instance_create(PT_X,PT_Y,obj_panel_indacator)){
            other.Child = id;
            other.Timer = 0;
        }
   }
   if Timer &gt; -1{
       Timer += 1;
       if Timer = round(room_speed/3){
            Go = true;
            Timer = -1;
       }
   }
   if Go{
      vspeed = 7;
      if y &gt; PT_Y-10{
          Go = false;
          y = PT_Y-10;
          if IP.Panel_Status != 3 &amp;&amp; IP.Panel_Status != 4{
             with(instance_create(IP.x,IP.y-3,obj_crashman_hitbox)){
                 Hurt = true;
                 Element = E_Crack;
                 Timer = 1;
                 Power = obj_crashman_boss.Power[3];
                 Travel = false;
             };
              instance_create(IP.x,IP.y-12,obj_expolsion_doted_effect);
              if IP.Panel_Status = 2 &amp;&amp; !place_meeting(x,y,obj_megaman) {IP.Broke = true;}
              if IP.Panel_Status != 2 &amp;&amp; IP.Panel_Status != 3 {IP.Cracked = true;}
          }   
          instance_destroy();
          with(Child) {instance_destroy()};
      }
   }
}

if State != S_Normal{
   image_speed = 0;
   vspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
