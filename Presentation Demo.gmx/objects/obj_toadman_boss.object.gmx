<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_toadman_base</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_virus</parentName>
  <maskName>spr_toadman_base</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Lilypad
IP = instance_place(x,y,obj_panel);
with(instance_create(141,136,obj_lilypad)){
   other.PadOwner2 = id;
   Direction = 2;
}
with(instance_create(221,88,obj_lilypad)){
   other.PadOwner1 = id;
   Direction = 1;
}
Jump = true;
Splash = true;
if obj_field.VS_Done = false {obj_field.VS_Done = true}

VChild = noone;
Mask = spr_toadman_base;
Hitbox_Touch = false;
Damage = 0;
Ex_Count = 0;
Ex_true = true;
Semi_Hurt = false;
Hurt = false;
Hurt_Timer = 0;
Damage_Flash = false;
DF_Direction = 0;
AT = 0;
Move_Timer = 0;
Attack_Timer = 0;
Direction = 0;
HitBox_Touch = false;

//Attacks
Croak_A = true;
Throw_A = true;
Slap_A = true;

//Fade In Start
image_speed = 0;
image_index = 0;
image_alpha = 0;
sprite_index = spr_toadman_jumpin;

//Stats
scr_virus_stats("ToadMan",E_Aqua);
MaxHp = 700;
Hp = MaxHp;
spd = .4;
Power[0] = 10;
Power[1] = 25;
Power[2] = 20;
Power[3] = 20;

//States
State = 0;
Normal = 1;
Paused = 1;
Frozen = 1;
Dead = 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(obj_toad_hopper){
   instance_destroy();
}
with(obj_music_note){
   instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Damage
if Hp &lt;= 0 {State = Dead}

if (Damage * -1) &gt;= Hp{
   Hp = 0;
} 
if State != Frozen &amp;&amp; State != Paused {
   if Hp = 0 {State = Dead;}
} 

if Hp &gt; MaxHp {Hp = MaxHp}
if Hp &lt; 0 {Hp = 0}
 
if Damage &gt; 0{
   Hp += 1;
   Damage -= 1;
}
if Damage &lt; 0{
   Hp -= 1;
   Damage += 1;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation Variables &amp; State setup
if Hp &gt; 0 {State = obj_megaman.State;}
if place_meeting(x,y,obj_panel) {depth = instance_place(x,y,obj_panel).y * -1-1}
scr_weakness_system();
scr_battle_damage_toadman();

Base_S = spr_toadman_base;
JumpIn_S = spr_toadman_jumpin;
Throw_S = spr_toadman_throw;
Roll_S = spr_toadman_roll;
Croak_S = spr_toadman_croak;
Slap_S = spr_toadman_slap;
Hurt_S = spr_toadman_hurt;
Hurt_Flash_S = spr_toadman_hurt_flash;

if State = S_Normal{

if sprite_index = Base_S &amp;&amp; image_index = 0 {image_speed = 0}
if sprite_index = Base_S &amp;&amp; image_index &gt; 0 {image_speed = .2}
if sprite_index = JumpIn_S {image_speed = 0}
if sprite_index = Throw_S {image_speed = .2}
if sprite_index = Roll_S {image_speed = .2}
if sprite_index = Croak_S {image_speed = .2}
if sprite_index = Slap_S {image_speed = .17}
if sprite_index = Hurt_S {image_speed = 0}

}

if State != S_Normal{
   image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Jump In
if State = S_Normal &amp;&amp; sprite_index = JumpIn_S{
  if Jump{ 
   image_alpha = 1;
   vspeed = -8;
   if Splash {instance_create(IP.x,IP.y-15,obj_watersplash); Splash = false}
   if y &lt; -30{
           Jump = false;
           x = PadOwner1.x-2;    
      }
   }
   if !Jump{
       if y &lt; PadOwner1.y-12{
           vspeed = 8;
       }
       
       if y &gt; PadOwner1.y-12{
          vspeed = 0;
          y = PadOwner1.y-12;
          sprite_index = Base_S;
          with(obj_lilypad){
             ToadMan_Switch = true;
          }
       }
   }
}

if State != S_Normal{
  vspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///MoveMent
MM = obj_megaman;
MMP = instance_place(MM.x,MM.y,obj_panel);
if place_meeting(x,y,obj_panel) {IP = instance_place(x,y,obj_panel)}

if place_meeting(x,y,PadOwner1){
  Current_Pad = PadOwner1;
  Other_Pad = PadOwner2;
  x = Current_Pad.x-2;
}
if place_meeting(x,y,PadOwner2){
  Current_Pad = PadOwner2;
  Other_Pad = PadOwner1;
  x = Current_Pad.x-2;
}


if State = S_Normal{

if IP.y = MMP.y &amp;&amp; sprite_index = Base_S{
   Move_Timer += 1
   if Move_Timer = 60 &amp;&amp; sprite_index = Base_S{
       Direction = 1;
       image_index = 0.1;
   }
}

if Move_Timer &gt; 60 {Move_Timer = 0;}

}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attacking
if State = S_Normal{

Attack_Timer += 1;
if Attack_Timer &gt; room_speed*15 {Attack_Timer = 0;}

//Shock Croak
if Attack_Timer = room_speed*3 || Attack_Timer = room_speed*6{
   if sprite_index = Base_S &amp;&amp; image_index = 0{
      sprite_index = Croak_S;
      
   }
}

//ToadMan Throw
if Attack_Timer = room_speed*8 || Attack_Timer = room_speed*13{
   if sprite_index = Base_S &amp;&amp; image_index = 0{
      sprite_index = Throw_S;
      //Attack_Timer = 0;
   }
}

//ToadMan Slap
if Attack_Timer = room_speed*10 || Attack_Timer = room_speed*15{
    if sprite_index = Base_S &amp;&amp; image_index = 0{
       if place_meeting(MM.x-40,MM.y,obj_panel){
          if instance_place(MM.x-40,MM.y,obj_panel).Panel_Status = 11{
               image_index = 0.1;
               Direction = 2;
          }
       }
    }
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attacking HitBox/Attacks

//Croak
if sprite_index = Croak_S &amp;&amp; Croak_A{
  if image_index &gt;= 1{
       instance_create(IP.x-40-7,IP.y-28,obj_music_note);
       Croak_A = false;
  }
}

//Throw
if sprite_index = Throw_S &amp;&amp; Throw_A{
   instance_create(x+5,y-18,obj_toad_hopper);
   Throw_A = false;
}

//Slap
if sprite_index = Slap_S &amp;&amp; Slap_A{
  if image_index &gt;= 3{
     with(instance_create(IP.x+40,IP.y-3,obj_toadman_hitbox)){
        Power = other.Power[2];
        Travel = false;
        Timer = 5;
        Element = E_Aqua;
        Hurt = true;
     }
     Slap_A = false;
  }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Death
if State = Dead &amp;&amp; obj_megaman.State = S_Normal{
  image_speed = 0;
  sprite_index = Hurt_Flash_S;
  image_alpha = 1;

  
  
  if Ex_Count = 0 &amp;&amp; Ex_true{
     Ex_true = false;
     with(instance_create(x-11,y+6,obj_expolsion_effect)){
        Owner = other.id;
        Ex_Count = true;
     }    
  }
   if Ex_Count = 1 &amp;&amp; Ex_true{
     Ex_true = false;
     with(instance_create(x+13,y-12,obj_expolsion_effect)){
        Owner = other.id;
        Ex_Count = true;
     }    
  }
   if Ex_Count = 2 &amp;&amp; Ex_true{
     instance_destroy();
     Ex_true = false;
     with(instance_create(x+5,y+9,obj_expolsion_effect)){
        Owner = other.id;
        Ex_Count = true;
     }    
  }

  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_index = Base_S{
   switch(Direction){
      case 1:
      x = Other_Pad.x-2;
      y = Other_Pad.y-12;
      Direction = 0;
      image_index = 0;
      Move_Timer = 0;
      break;
      
      case 2:
      instance_create(MMP.x-40,MMP.y-15,obj_watersplash);
      x = MMP.x-40-1;
      y = MMP.y-15;
      image_index = 0;
      sprite_index = Slap_S;
      Move_Timer = 0;
      Direction = 0;
      exit;
   }
}

if sprite_index = Croak_S{
    image_index = 0;
    sprite_index = Base_S;
}

if sprite_index = Throw_S{
   image_index = 0;
   sprite_index = Base_S;
}

if sprite_index = Slap_S{
  image_index = 0;
  sprite_index = Base_S;
  x = Current_Pad.x-2;
  y = Current_Pad.y-12;
}

Croak_A = true;
Throw_A = true;
Slap_A = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

if Hp &gt; 0 &amp;&amp; sprite_index != JumpIn_S &amp;&amp; image_alpha != 0{
draw_set_font(obj_field.EnemyHp_Font);
draw_text(x-7,y+21,round(Hp));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
