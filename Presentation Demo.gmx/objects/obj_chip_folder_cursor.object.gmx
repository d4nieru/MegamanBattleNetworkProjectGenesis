<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_chip_folder_cursor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-11000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = .2;
Freeze = false;
Placement = 1;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(obj_chip_menu_test) {instance_destroy();}

if keyboard_check_pressed(ord("Z")) &amp;&amp; Freeze = false{
     Freeze = true;
     with(obj_chip_menu_test){
        Freeze = true;
        with(instance_create(x+9,y+63,obj_chip_folder_box)){
             Text_Box_Draw = true;
        }
        instance_create(x+2,y+72,obj_text_choice_cursor);
     }
     exit;
}

if keyboard_check_pressed(ord("X")) &amp;&amp; !Freeze{
     with(instance_create(view_xview[0],view_yview[0],obj_menu_tran)){
         Destroy = obj_chip_menu_test;
         Unfreeze = true;
         Chip = true;
     }
}

if Freeze{
   image_speed = 0;
   if instance_exists(obj_text_choice_cursor){
      Cursor = obj_text_choice_cursor;
      if keyboard_check_pressed(vk_down){
          if Placement != 3{    
              Placement += 1;
              Cursor.y += 15
              exit;
          }
          if Placement = 3{
            Placement = 1;
            Cursor.y = Cursor.ystart;
            exit;
          }
      }
      if keyboard_check_pressed(vk_up){
         if Placement != 1{
             Placement -= 1;
             Cursor.y -= 15;
             exit;
         }
         if Placement = 1{
             Placement = 3;
             Cursor.y = Cursor.ystart+30;
             exit;
         } 
      }
   } 
   
   if keyboard_check_pressed(ord("Z")){
       switch(Placement){
            case 1:
            instance_destroy();
            with(instance_create(view_xview[0],view_yview[0],obj_menu_tran)){
                 Menu = obj_menu_folder_edit;
                 Destroy = obj_chip_menu_test;
                 Chip = true;
            }
            Freeze = 3;
            break;
       }
   }
   
   if keyboard_check_pressed(ord("X")){
       Freeze = false;
       image_speed = .2;
       Placement = 1;
       with(obj_chip_menu_test) {Freeze = false}
       with(obj_chip_folder_box) {instance_destroy();}
       with(obj_text_choice_cursor) {instance_destroy();}
   }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
