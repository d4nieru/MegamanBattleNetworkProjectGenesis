<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_powie_base</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_virus</parentName>
  <maskName>spr_powie_base</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Mask = spr_powie_base;


//Stats
Child = noone;
Child2 = noone;
VChild = noone;
scr_virus_stats("Powie",E_None);
MaxHp = 60;
Hp = MaxHp;
spd = .5;
Power = 20;
Shield = false

//Direction
Drop = false;
MDT = 30;
Drop_Timer = MDT;
Attacking = false;
MAT = 30;
Attack_Timer = MAT;
Boomerang = true;
Up = 0;
Down = 1;
Left = 2;
Right = 3;
Up_Left = 4;
Down_Left = 5;
Up_Right = 6;
Down_Right = 7;
Full_Up = 8;
Full_Down = 9;
Full_Left = 10;
Full_Right = 11;
Move_Timer = 125;
Move_Count = 0;
Moving = false;
Hspeed = 0;
Vspeed = 0;
Spd = 2.5;

//States
State = 0;
Normal = 0
Paused = 0
Frozen = 0
Dead = 5

//Death
Damage = 0;
Ex_Count = 0;
Ex_true = true;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(Child) {instance_destroy();}
with(Child2) {instance_destroy();}
with(VChild){
 instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Damage
if Hp &lt; 0 {Hp = 0}

if (Damage * -1) &gt;= Hp{
   Hp = 0;
} 

if Hp &lt;= 0 {State = Dead;}


if Hp &gt; MaxHp {Hp = MaxHp}

if Damage &gt; 0{
   Hp += 1;
   Damage -= 1;
}
if Damage &lt; 0{
   Hp -= 1;
   Damage += 1;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation
if Hp &gt; 0 {State = obj_megaman.State}


//Variables
Base_S = spr_powie_base;
BaseFlash_S = spr_powie_base_flash;
Fade_In = spr_powie_fadein;
Jump_S = spr_powie_jump;
Attack_S = spr_powie_attack;
AttackFlash_S = spr_powie_attack_flash;

//Damage
scr_weakness_system();
if sprite_index != Jump_S {scr_battle_damage_enemy();}

//Depth
if sprite_index != Attack_S {depth = -y} else {depth = -(y+20)}

if State = S_Normal{
//Speed
if sprite_index = Base_S {image_speed = .22};
if sprite_index = Jump_S {image_speed = .2};
if sprite_index = Attack_S {image_speed = .15};
}

if State != S_Normal{
   if sprite_index != Fade_In {image_speed = 0;}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Moving
MMT = 125+(Order*25);
IP = instance_place(x,y,obj_panel);
if State = S_Normal{
RD = choose(Up,Down,Left,Right,Up_Left,Down_Left,Up_Right,Down_Right,Full_Up,Full_Down,Full_Left,Full_Right)

if sprite_index = Base_S{
    Move_Timer -= 1;
    if Move_Timer = 0{
       switch(RD){
         case Up:
         if place_meeting(x,y-24,obj_panel_blue) &amp;&amp; instance_place(x,y-24,obj_panel_blue).sprite_index = spr_panel_blue &amp;&amp; !place_meeting(x,y-24,obj_virus) &amp;&amp; !place_meeting(x,y-24,obj_object){
           with(instance_create(IP.x,IP.y-24,obj_virus_placeholder)){
               Owner = other.id;
               other.VChild = id;
           }             
             image_index = 0;
             sprite_index = Jump_S;
             Direction = Up;
             Target_Panel = instance_place(x,y-24,obj_panel_blue);
             Move_Timer = MMT;
         }
         break;
         
         case Down:
         if place_meeting(x,y+24,obj_panel_blue) &amp;&amp; instance_place(x,y+24,obj_panel_blue).sprite_index = spr_panel_blue &amp;&amp; !place_meeting(x,y+24,obj_virus) &amp;&amp; !place_meeting(x,y+24,obj_object){
           with(instance_create(IP.x,IP.y+24,obj_virus_placeholder)){
               Owner = other.id;
               other.VChild = id;
           }              
             image_index = 0;
             sprite_index = Jump_S;
             Direction = Down;
             Target_Panel = instance_place(x,y+24,obj_panel_blue);
             Move_Timer = MMT;
         }
         break;
         
         case Left:
         if place_meeting(x-40,y,obj_panel_blue) &amp;&amp; instance_place(x-40,y,obj_panel_blue).sprite_index = spr_panel_blue &amp;&amp; !place_meeting(x-40,y,obj_virus) &amp;&amp; !place_meeting(x-40,y,obj_object){
           with(instance_create(IP.x-40,IP.y,obj_virus_placeholder)){
               Owner = other.id;
               other.VChild = id;
           }              
             image_index = 0;
             sprite_index = Jump_S;
             Direction = Left;
             Target_Panel = instance_place(x-40,y,obj_panel_blue);
             Move_Timer = MMT;
         }
         break;  
         
          case Right:
         if place_meeting(x+40,y,obj_panel_blue) &amp;&amp; instance_place(x+40,y,obj_panel_blue).sprite_index = spr_panel_blue &amp;&amp; !place_meeting(x+40,y,obj_virus) &amp;&amp; !place_meeting(x+40,y,obj_object){
           with(instance_create(IP.x+40,IP.y,obj_virus_placeholder)){
               Owner = other.id;
               other.VChild = id;
           }              
             image_index = 0;
             sprite_index = Jump_S;
             Direction = Right;
             Target_Panel = instance_place(x+40,y,obj_panel_blue);
             Move_Timer = MMT;
         }
         break;
         
         case Up_Left:
         if place_meeting(x-40,y-24,obj_panel_blue) &amp;&amp; instance_place(x-40,y-24,obj_panel_blue).sprite_index = spr_panel_blue &amp;&amp; !place_meeting(x-40,y-24,obj_virus) &amp;&amp; !place_meeting(x-40,y-24,obj_object){
           with(instance_create(IP.x-40,IP.y-24,obj_virus_placeholder)){
               Owner = other.id;
               other.VChild = id;
           }              
             image_index = 0;
             sprite_index = Jump_S;
             Direction = Up_Left;
             Target_Panel = instance_place(x-40,y-24,obj_panel_blue);
             Move_Timer = MMT;
         }
         break;  
         
             case Down_Left:
         if place_meeting(x-40,y+24,obj_panel_blue) &amp;&amp; instance_place(x-40,y+24,obj_panel_blue).sprite_index = spr_panel_blue &amp;&amp; !place_meeting(x-40,y+24,obj_virus) &amp;&amp; !place_meeting(x-40,y+24,obj_object){
           with(instance_create(IP.x-40,IP.y+24,obj_virus_placeholder)){
               Owner = other.id;
               other.VChild = id;
           }              
             image_index = 0;
             sprite_index = Jump_S;
             Direction = Down_Left;
             Target_Panel = instance_place(x-40,y+24,obj_panel_blue);
             Move_Timer = MMT;
         }
         break; 
         
         case Up_Right:
         if place_meeting(x+40,y-24,obj_panel_blue) &amp;&amp; instance_place(x+40,y-24,obj_panel_blue).sprite_index = spr_panel_blue &amp;&amp; !place_meeting(x+40,y-24,obj_virus) &amp;&amp; !place_meeting(x+40,y-24,obj_object){
           with(instance_create(IP.x+40,IP.y-24,obj_virus_placeholder)){
               Owner = other.id;
               other.VChild = id;
           }              
             image_index = 0;
             sprite_index = Jump_S;
             Direction = Up_Right;
             Target_Panel = instance_place(x+40,y-24,obj_panel_blue);
             Move_Timer = MMT;
         }
         break;
         
            case Down_Right:
         if place_meeting(x+40,y+24,obj_panel_blue) &amp;&amp; instance_place(x+40,y+24,obj_panel_blue).sprite_index = spr_panel_blue &amp;&amp; !place_meeting(x+40,y+24,obj_virus) &amp;&amp; !place_meeting(x+40,y+24,obj_object){
           with(instance_create(IP.x+40,IP.y+24,obj_virus_placeholder)){
               Owner = other.id;
               other.VChild = id;
           }              
             image_index = 0;
             sprite_index = Jump_S;
             Direction = Down_Right;
             Target_Panel = instance_place(x+40,y+24,obj_panel_blue);
             Move_Timer = MMT;
         }
         break;  
         
            case Full_Up:
         if place_meeting(x,y-48,obj_panel_blue) &amp;&amp; instance_place(x,y-48,obj_panel_blue).sprite_index = spr_panel_blue &amp;&amp; !place_meeting(x,y-48,obj_virus) &amp;&amp; !place_meeting(x,y-48,obj_object){
           with(instance_create(IP.x,IP.y-48,obj_virus_placeholder)){
               Owner = other.id;
               other.VChild = id;
           }              
             image_index = 0;
             sprite_index = Jump_S;
             Direction = Full_Up;
             Target_Panel = instance_place(x,y-48,obj_panel_blue);
             Move_Timer = MMT;
         }
         break;
         
         case Full_Down:
         if place_meeting(x,y+48,obj_panel_blue) &amp;&amp; instance_place(x,y+48,obj_panel_blue).sprite_index = spr_panel_blue &amp;&amp; !place_meeting(x,y+48,obj_virus) &amp;&amp; !place_meeting(x,y+48,obj_object){
           with(instance_create(IP.x,IP.y+48,obj_virus_placeholder)){
               Owner = other.id;
               other.VChild = id;
           }              
             image_index = 0;
             sprite_index = Jump_S;
             Direction = Full_Down;
             Target_Panel = instance_place(x,y+48,obj_panel_blue);
             Move_Timer = MMT;
         }
         break;  
         
         case Full_Left:
         if place_meeting(x-80,y,obj_panel_blue) &amp;&amp; instance_place(x-80,y,obj_panel_blue).sprite_index = spr_panel_blue &amp;&amp; !place_meeting(x-80,y,obj_virus) &amp;&amp; !place_meeting(x-80,y,obj_object){
           with(instance_create(IP.x-80,IP.y,obj_virus_placeholder)){
               Owner = other.id;
               other.VChild = id;
           }              
             image_index = 0;
             sprite_index = Jump_S;
             Direction = Full_Left;
             Target_Panel = instance_place(x-80,y,obj_panel_blue);
             Move_Timer = MMT;
         }
         break;   
         
          case Full_Right:
         if place_meeting(x+80,y,obj_panel_blue) &amp;&amp; instance_place(x+80,y,obj_panel_blue).sprite_index = spr_panel_blue &amp;&amp; !place_meeting(x+80,y,obj_virus) &amp;&amp; !place_meeting(x+80,y,obj_object){
           with(instance_create(IP.x+80,IP.y,obj_virus_placeholder)){
               Owner = other.id;
               other.VChild = id;
           }             
              image_index = 0;
             sprite_index = Jump_S;
             Direction = Full_Right;
             Target_Panel = instance_place(x+80,y,obj_panel_blue);
             Move_Timer = MMT;
         }
         break;                                                                           
       }
       Move_Timer = 1;
    }
}

//Jumping
hspeed = Hspeed;
vspeed = Vspeed;
path_speed = Spd;
if sprite_index = spr_powie_base{
   with(VChild){
       instance_destroy();
   }
}

if sprite_index = Jump_S &amp;&amp; image_index &gt;= 1 &amp;&amp; image_index &lt;= 2{
    switch(Direction){
        case Up:
        path_start(path_powie_up,Spd,0,0)
        break;
        case Down:
        path_start(path_powie_down,Spd,0,0)
        break;
        case Left:
        path_start(path_powie_left,Spd,0,0)
        break;
        case Right:
        path_start(path_powie_right,Spd,0,0)
        break; 
        
        case Up_Left:
        path_start(path_powie_upleft,Spd,0,0)
        break;
        case Down_Left:
        path_start(path_powie_downleft,Spd,0,0)
        break;
        case Up_Right:
        path_start(path_powie_upright,Spd,0,0)
        break;
        case Down_Right:
        path_start(path_powie_downright,Spd,0,0)
        break;
        
        case Full_Up:
        path_start(path_powie_fullup,Spd,0,0)
        break; 
        case Full_Down:
        path_start(path_powie_fulldown,Spd,0,0)
        break;
        case Full_Left:
        path_start(path_powie_fullleft,Spd,0,0)
        break;
        case Full_Right:
        path_start(path_powie_fullright,Spd,0,0)
        break;
    }
}

}

if State != S_Normal{
  vspeed = 0;
  hspeed = 0;
  path_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attacking
if State = S_Normal{

//Panel Variable
TP = instance_place(x,y,obj_panel);

if sprite_index = Base_S &amp;&amp; Move_Count &gt;= 2 &amp;&amp; Move_Timer &lt;= 75{
  with(instance_create(IP.x,IP.y,obj_virus_placeholder)){
      Owner = other.id;
      other.VChild = id;
  }   
   SaveX = x;
   SaveY = y;
   Drop_Target = instance_place(obj_megaman.x,obj_megaman.y,obj_panel);
   x = obj_megaman.x;
   y = obj_megaman.y-70;
   image_index = 0;
   sprite_index = Attack_S;
   with(instance_create(obj_megaman.x,obj_megaman.y+15,obj_big_shadow)){
      Owner = other.id;
      other.Child = id;
   }
}

if Drop{
    vspeed = 7;
    if y &gt;= Drop_Target.y-26{
       vspeed = 0;
       y = Drop_Target.y-26;
       Drop = false;
       if instance_place(x,y,obj_panel).Panel_Status &lt; 3{ 
            with(instance_create(TP.x,TP.y-3,obj_powie_hitbox)){
                Power = other.Power;
                Owner = other.id;
                Timer = 1;
                other.Child2 = id;
                Element = E_None;
            }
            with(instance_create(0,0,obj_screenshake)) {alarm[0] = 40;}
            with(instance_place(x,y,obj_panel)){
                 switch(Panel_Status){
                    case 1:
                    Cracked = true;
                    break;
                 }
            }
       }
      if instance_place(x,y,obj_panel).Panel_Status &gt; 2{
       x = SaveX;
       y = SaveY;
       image_index = 0;
       sprite_index = Base_S;
       Move_Timer = MMT;
       Move_Count = 0;
       with(Child) {instance_destroy();}
       Drop_Timer = MDT;      
      } 
    }
}

if sprite_index = Attack_S &amp;&amp; y = Drop_Target.y-26{
   Drop_Timer -= 1;
   if Drop_Timer = 0{
       x = SaveX;
       y = SaveY;
       image_index = 0;
       sprite_index = Base_S;
       Move_Timer = MMT;
       Move_Count = 0;
       with(Child) {instance_destroy();}
       Drop_Timer = MDT;
   } 
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Death
if State = Dead &amp;&amp; obj_megaman.State = S_Normal{  
   image_speed = 0;
  if sprite_index = Base_S{
     sprite_index = BaseFlash_S;
  }
  if sprite_index = Attack_S{
      sprite_index = AttackFlash_S;
  }
if Ex_Count = 0 &amp;&amp; Ex_true{
     Ex_true = false;
     with(instance_create(x-16,y-15,obj_expolsion_effect)){
        Owner = other.id;
        Ex_Count = true;
     }    
  }
   if Ex_Count = 1 &amp;&amp; Ex_true{
     Ex_true = false;
     with(instance_create(x+13,y-16,obj_expolsion_effect)){
        Owner = other.id;
        Ex_Count = true;
     }    
  }
   if Ex_Count = 2 &amp;&amp; Ex_true{
     instance_destroy();
     Ex_true = false;
     with(instance_create(x+1,y-3,obj_expolsion_effect)){
        Owner = other.id;
        Ex_Count = true;
     }    
  }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="7" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = 0;
sprite_index = Base_S;
Move_Timer = MMT;
Direction = -1;
x = Target_Panel.x-3;
y = Target_Panel.y-21;
Move_Count += 1;
Target_Panel = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_index = Jump_S{
   image_index = 3;
}
if sprite_index = Attack_S{
    image_index = 3;
    Drop = true;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

if Hp &gt; 0 &amp;&amp; sprite_index != Fade_In{
draw_set_font(obj_field.EnemyHp_Font);
draw_text(x,y+21,round(Hp));
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
