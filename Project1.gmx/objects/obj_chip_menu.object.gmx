<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_chip_holder</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bc = obj_battlecontroller;
pc = obj_playercontroller;
ic = noone;
ChipDraw = false;
image_speed = 0;
PA = false;
if pc.StreamButton != ""{
    instance_create(x,y,obj_stream_power_button);
}
scr_ChipMenu_Path(1);
with(obj_custom_gague){
    image_alpha = 0;
    image_index = 0;
    image_speed = 0;
    Gague = 0;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(obj_custom_gague){
    image_alpha = 1;
    Charge = true;
}
bc.Turn += 1;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stream Select
if bc.key_select &amp;&amp; !instance_exists(obj_chipmenu_streamselect){
    if x = 120{
        instance_create(x,y,obj_chipmenu_streamselect);
        with(obj_chip_cursor) {instance_destroy();}
    }
}

if bc.key_b &amp;&amp; instance_exists(obj_chipmenu_streamselect){
    with(obj_chipmenu_streamselect) {Done = true;}
    with(obj_stream_cursor) {instance_destroy();}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Chip Draw
cn = instance_number(obj_chip);
if cn &lt; 5 {cny = 0; cnx = cn}
if cn &gt;= 5 {cny = 24; cnx = cn-5}
tc = ds_list_find_value(ChipDeck,0);
if ChipDraw &amp;&amp; ds_list_size(ChipDeck) != 0{
    if pc.ChipLimit &gt; 0{
        instance_create(x+cnx*16,y+cny,tc)
        ds_list_delete(ChipDeck,0);
        pc.ChipLimit -= 1;
        exit;
    }
    if pc.ChipLimit = 0{
        ChipDraw = false;
        instance_create(x,y,obj_chip_cursor);
        exit;
    }
}
if ChipDraw &amp;&amp; ds_list_size(ChipDeck) = 0{
    ChipDraw = false;
    pc.ChipLimit = 0;
    instance_create(x,y,obj_chip_cursor);
    exit;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if x = 120 {ChipDraw = true;}//instance_create(x,y,obj_chip_cursor);}
if x = 0{
    instance_destroy();
    with(pc) {AtkBoost_Check = true;}
    if !PA{
        scr_ProgramAdvance_System();
        if PA {exit;}
    }
    if Stream != noone{
        scr_StreamTransformation();
        exit;
    }
    with(instance_create(0,0,obj_battle_text)){
        i = 2;
        image_index = i-2;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Showing the Virus Name
draw_self();
if bc.Turn = 1{
    draw_set_font(bc.Chip_Font);
    draw_set_color(c_white);
    //First Virus
    draw_sprite(spr_virus_name_back,0,0,0);
    draw_sprite(spr_virus_name_back,0,-25,0);
    draw_sprite(spr_virus_name_back,0,-43,0);
    draw_text(5,1,bc.V1.Name);
    //Second Virus
    if instance_number(obj_virus) &gt;= 2{
        draw_sprite(spr_virus_name_back,0,0,15);
        draw_sprite(spr_virus_name_back,0,-25,15);
        draw_sprite(spr_virus_name_back,0,-43,15);  
        draw_text(5,16,bc.V2.Name);      
    }
    
    //Third Virus
    if instance_number(obj_virus) = 3{
        draw_sprite(spr_virus_name_back,0,0,30);
        draw_sprite(spr_virus_name_back,0,-25,30);
        draw_sprite(spr_virus_name_back,0,-43,30);  
        draw_text(5,31,bc.V3.Name);      
    }    
}


//Drawing the selected chips
for(i=1;i&lt;6;i++;){
    if pc.ChipSlot[i,pc.Icon] != -1{
        draw_sprite(spr_chip_icon,pc.ChipSlot[i,pc.Icon],x+90,y-85+((i-1)*16))
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
