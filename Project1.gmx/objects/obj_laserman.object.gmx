<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_laserman_base</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-25</depth>
  <persistent>0</persistent>
  <parentName>obj_virus</parentName>
  <maskName>spr_laserman_base</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
Order = 0;
movetimer = 50;
attacktimer = 0;
NP = noone;
Wait = id;
movecount = 0;
panelsave = noone;
scr_EnemyStats("LaserMan",800,10,0,CElement.Null);
scr_VirusOrder_Check(obj_laserman);
Attack = "";
cl = true;
cltimer = 0;
ss = true;
Rocks = false;
rock = 6;
rtimer = 0;
DownLaser = false;
dl = 0;
attack[0] = Power*3;
attack[1] = Power*5;
ShakeTimer = 0;
FlashTimer = 0;
DamageTimer = 0;
f = -0.05;
HitStun = "";
HitBox = true;
vpanel = noone;

Exit = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(obj_panel){
    if Target[0] = other.id {Target[0] = noone;}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Order Control
if Order &gt; instance_number(obj_laserman){
    Order = instance_number(obj_laserman);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation
image_round = round(image_index);
if place_meeting(x,y,obj_panel){
    IP = instance_place(x,y,obj_panel);
    depth = (IP.y * -1) + (IP.x/40 * -1);
}

//Variables
FadeIn_S = spr_laserman_fadein;
Base_S = spr_laserman_base;
CrossLaser_S = spr_laserman_crosslaser;
StarLaser_S = spr_laserman_starbreaklaser;
DownLaser_S = spr_laserman_powerdownlaser;
Death_S = spr_laserman_hurt_flash;


if bc.Field = FieldS.N{

//Speed
if sprite_index = Base_S{
    if image_index = 0 {image_speed = 0;}
    if image_index &gt; 0 {image_speed = .5;}
}
if sprite_index = Death_S {image_speed = 0;}
//Cross Laser
if sprite_index = CrossLaser_S{
    if image_index = 0{
        image_speed = 0;
        if place_meeting(x-80,y,obj_panel){
           tp[0] = instance_place(x-80,y,obj_panel);
           with(tp[0]) {Target[0] = other.id;}
        }
        if place_meeting(x-40,y,obj_panel){
           tp[1] = instance_place(x-40,y,obj_panel);
           with(tp[1]) {Target[0] = other.id;}
        }
        if place_meeting(x-120,y,obj_panel){
           tp[2] = instance_place(x-120,y,obj_panel);
           with(tp[2]) {Target[0] = other.id;}
        }
        if place_meeting(x-80,y+24,obj_panel){
           tp[3] = instance_place(x-80,y+24,obj_panel);
           with(tp[3]) {Target[0] = other.id;}
        }
        if place_meeting(x-80,y-24,obj_panel){
           tp[4] = instance_place(x-80,y-24,obj_panel);
           with(tp[4]) {Target[0] = other.id;}
        }                
        cltimer++;
        if cltimer = 30{
            cltimer = 0;
            image_index = .1;
            with(obj_panel){
                if Target[0] = other.id {Target[0] = noone;}
            }
        }
    }
    if image_index &gt; 0 {image_speed = .2;}
    if image_index &gt;= 3 &amp;&amp; HitBox &amp;&amp; instance_place(x-80,y,obj_panel).Broken = false{
        HitBox = false;
        with(instance_create(x-80,y,obj_crosslaser2)){
            Owner = other.id;
            Power = 30;
        }
    }
    if cl &amp;&amp; image_index &gt; 4.7{
        image_index = 3;
        cltimer++;
        if cltimer = 15{
            cl = false;
            cltimer = 0;
        }
    }
}
//Star Laser
if sprite_index = StarLaser_S{
    image_speed = .2;
    if ss &amp;&amp; image_index &gt;= 6{
        ss = false;
        with(instance_create(0,0,obj_screenshake)){
            timer = 280;
        }
        Rocks = true;
    }
    if cl &amp;&amp; image_index &gt; 7.7{
        image_index = 6;
        cltimer++;
        if cltimer = 8{
            cl = false;
            cltimer = 0;
        }
    }
}
//Down Laser
if sprite_index = DownLaser_S{
    if image_index = 0{
        image_speed = 0;
        cltimer++;
        if cltimer = 30{
            cltimer = 0;
            image_index = .1;
        }        
    }
    if image_index &gt; 0{
        image_speed = .25;
    }
    if DownLaser &amp;&amp; image_index = 1{
        cltimer++;
        if cltimer = 1{
            cltimer = 0;
            if dl &lt;= 4{
                with(instance_create(x-(dl*48),y,obj_downlaser)){
                    Owner = other.id;
                    Power = 50;
                }
                dl++;
            }
            if dl = 5{
                dl = 7;
                with(obj_downlaser){
                    image_index = .1;
                }
            }
        }
    }
}

if sprite_index = FadeIn_S {image_speed = .2;}



//Sword
/*if sprite_index = Sword_S &amp;&amp; image_index = 0{
    attacktimer += 1     
    if attacktimer = room_speed/2{
        attacktimer = 0;
        image_index = 0.1;
    }
}*/
    
}
else{
    if sprite_index != FadeIn_S || image_alpha = 0{
        image_speed = 0; 
        } 
        if sprite_index = FadeIn_S &amp;&amp; image_alpha = 1 {image_speed = .2;}
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
if movecount &gt; 16 &amp;&amp; HP &gt; 200 {movecount = 0;}
if movecount &gt; 23 &amp;&amp; HP &lt;= 200 {movecount = 0;}

if bc.Field = FieldS.N{


//Panel Targets
if place_meeting(x+40,y,obj_panel){
    if instance_place(x+40,y,obj_panel).sprite_index = spr_panel_blue &amp;&amp; instance_place(x+40,y,obj_panel).PanelStorage = noone{
        P[0] = instance_place(x+40,y,obj_panel);
    } else {P[0] = noone;} 
}else {P[0] = noone;}

if place_meeting(x-40,y,obj_panel){
    if instance_place(x-40,y,obj_panel).sprite_index = spr_panel_blue &amp;&amp; instance_place(x-40,y,obj_panel).PanelStorage = noone{
        P[1] = instance_place(x-40,y,obj_panel);
    } else {P[1] = noone;} 
}else {P[1] = noone;}

if place_meeting(x,y+24,obj_panel){
    if instance_place(x,y+24,obj_panel).sprite_index = spr_panel_blue &amp;&amp; instance_place(x,y+24,obj_panel).PanelStorage = noone{
        P[2] = instance_place(x,y+24,obj_panel);
    } else {P[2] = noone;} 
}else {P[2] = noone;}

if place_meeting(x,y-24,obj_panel){
    if instance_place(x,y-24,obj_panel).sprite_index = spr_panel_blue &amp;&amp; instance_place(x,y-24,obj_panel).PanelStorage = noone{
        P[3] = instance_place(x,y-24,obj_panel);
    } else {P[3] = noone;} 
}else {P[3] = noone;}

if place_meeting(x+40,y+24,obj_panel){
    if instance_place(x+40,y+24,obj_panel).sprite_index = spr_panel_blue &amp;&amp; instance_place(x+40,y+24,obj_panel).PanelStorage = noone{
        P[4] = instance_place(x+40,y+24,obj_panel);
    } else {P[4] = noone;} 
}else {P[4] = noone;}

if place_meeting(x+40,y-24,obj_panel){
    if instance_place(x+40,y-24,obj_panel).sprite_index = spr_panel_blue &amp;&amp; instance_place(x+40,y-24,obj_panel).PanelStorage = noone{
        P[5] = instance_place(x+40,y-24,obj_panel);
    } else {P[5] = noone;} 
}else {P[5] = noone;}

if place_meeting(x-40,y-24,obj_panel){
    if instance_place(x-40,y-24,obj_panel).sprite_index = spr_panel_blue &amp;&amp; instance_place(x-40,y-24,obj_panel).PanelStorage = noone{
        P[6] = instance_place(x-40,y-24,obj_panel);
    } else {P[6] = noone;} 
}else {P[6] = noone;}

if place_meeting(x-40,y+24,obj_panel){
    if instance_place(x-40,y+24,obj_panel).sprite_index = spr_panel_blue &amp;&amp; instance_place(x-40,y+24,obj_panel).PanelStorage = noone{
        P[7] = instance_place(x-40,y+24,obj_panel);
    } else {P[7] = noone;} 
}else {P[7] = noone;}

if place_meeting(x+80,y,obj_panel){
    if instance_place(x+80,y,obj_panel).sprite_index = spr_panel_blue &amp;&amp; instance_place(x+80,y,obj_panel).PanelStorage = noone{
        P[8] = instance_place(x+80,y,obj_panel);
    } else {P[8] = noone;} 
}else {P[8] = noone;}

if place_meeting(x-80,y,obj_panel){
    if instance_place(x-80,y,obj_panel).sprite_index = spr_panel_blue &amp;&amp; instance_place(x-80,y,obj_panel).PanelStorage = noone{
        P[9] = instance_place(x-80,y,obj_panel);
    } else {P[9] = noone;} 
}else {P[9] = noone;}

if sprite_index = Base_S &amp;&amp; image_index = 0 &amp;&amp; Wait = id &amp;&amp; Attack = ""{
    movetimer += 1;
    if movetimer &gt; 0{
       if NP = noone {NP = choose(P[0],P[1],P[2],P[3],P[4],P[5],P[6],P[7],P[8],P[9]);}
       if NP != noone{
           if NP.PanelStorage != noone || NP.Broken = true{
               NP = choose(P[0],P[1],P[2],P[3],P[4],P[5],P[6],P[7],P[8],P[9]);
           }
       }
    }    
    if movetimer &gt;= 70+((Order-1)*1){
        movetimer = 0;
        if NP != noone{
            if NP.Broken = false{
                NextPanel = NP;
                image_index = 0.1;
                with(obj_virus){
                    Wait = other.id;
                }
                with(NP){
                    PanelID_Save = other.id;
                    PanelStorage = other.id;
                }                
            }
        }
    }
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attacking
if bc.Field = FieldS.N{

player = obj_player;
diff = y-player.y;
//Attacks
if sprite_index = Base_S &amp;&amp; image_index = 0 &amp;&amp; Wait = id &amp;&amp; Attack = ""{
    switch(movecount){
        case 2:
        case 5:
        event_user(3);
        break;
        
        case 9:
        event_user(5);
        break;
        
        case 16:
        if HP &lt;= 200 {rock = 12;}
        event_user(4);
        break;
        
        case 12:
        l = choose(5,3,3);
        event_user(l);
        break;
        
        case 19:
        case 21:
        case 23:
        if HP &lt;= 200{
            event_user(5);
        }
        break;
    }
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///HitStun
if bc.Field = FieldS.N{

switch(HitStun){
    case "Heavy":
    HitStun = "";
    Protection = "Invis";
    FlashTimer = 180;
    f = -0.05;
    savex = x;
    savey = y;
    break;
    
    case "Light-Heavy":
    HitStun = "";
    Protection = "Invis";
    DamageTimer = 20;
    FlashTimer = 180;
    f = -0.05;
    break;       
    
    case "Medium":
    HitStun = "";
    break;    
}

if DamageTimer &gt; 0{
    DamageTimer -= 1;
    if DamageTimer = 1 || DamageTimer = 0{
        image_index = 0.1;
        DamageTimer = 0;
        exit;
    }
}

if FlashTimer &gt; 0 &amp;&amp; HP &gt; 0{
    FlashTimer -= 1;
    if FlashTimer = 0{
        image_alpha = 1;
        Protection = "None";
        exit;
    }
    image_alpha += f;
    if image_alpha = .25 &amp;&amp; f &lt; 0{
        f = f*-1;
        exit;
    }
    if image_alpha = .5 &amp;&amp; f &gt; 0{
        f = f*-1;
        exit;
    }
}


}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///HitBox
/*if HitBox{
    //Sword
    if sprite_index = Sword_S &amp;&amp; image_round = 2{
        HitBox = false;
        with(instance_create(x-40,y,obj_sword_effect_long2)){
            image_xscale = -1;
        }
        scr_HitBoxCreation(x-40,y,"Player",30,CElement.Sword,"",0,0,"Light-Heavy",noone);
        scr_HitBoxCreation(x-80,y,"Player",30,CElement.Sword,"",0,0,"Light-Heavy",noone);
        scr_HitBoxCreation(x-120,y,"Player",30,CElement.Sword,"",0,0,"Light-Heavy",noone);
    }
    //MiniBomb
    if sprite_index = Throw_S &amp;&amp; image_index &gt;= 0 &amp;&amp; image_index &lt; 1{
        HitBox = false;
        with(instance_create(x+27,y-17,obj_minibomb_en)){
            Owner = other.id;
            Power = 40;
            StartingX = Owner.x+12;
            StartingY = Owner.y-46;
            Point[1,X] = StartingX-16;
            Point[1,Y] = StartingY-21;
            Point[2,X] = StartingX-48;
            Point[2,Y] = StartingY-21;
            Point[3,X] = StartingX-80;
            Point[3,Y] = StartingY-5;
            Point[4,X] = StartingX-112;
            Point[4,Y] = StartingY+27;
            Point[5,X] = StartingX-132;
            Point[5,Y] = StartingY+46;            
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Rocks
if bc.Field = FieldS.N{    
    if Rocks{
        rtimer++;
        if rtimer = 40{
            rtimer = 0;
            rock--;
            extrarock = choose(1,2,3);
            with(instance_create(player.x,player.y-120,obj_fallingrock)){
                //Target = instance_place(other.player.x,other.player.y,obj_panel);
                Owner = other.id;
                Power = 20;
                TX = other.player.x;
                TY = other.player.y;
            }
            if extrarock = 1{
            rdx = choose(0,40,-40);
            rdy = choose(0,24,-24);
            with(instance_create(player.x+rdx,(player.y+rdy)-120,obj_fallingrock)){
                    //Target = instance_place(other.player.x,other.player.y,obj_panel);
                    Owner = other.id;
                    Power = 20;
                    TX = other.player.x+other.rdx;
                    TY = other.player.y+other.rdy;
                }            
            }
        }
        if rock = 0{
            rock = 6;
            Rocks = false;
            rtimer = 0;
        }
    }
    
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///PowerDown Laser
          if place_meeting(220,player.y,obj_panel){
         if instance_place(220,player.y,obj_panel).sprite_index = spr_panel_blue{
             NP = instance_place(220,player.y,obj_panel);
             if NP.PanelStorage = noone &amp;&amp; NP.Broken = false{
                 movecount++;
                 with(obj_virus){
                     Wait = other.id;
                 }       
                 event_user(0);
                 Attack = "Down Laser"; 
                 exit;  
             }
         }
     }
     
     if place_meeting(180,player.y,obj_panel){
         if instance_place(180,player.y,obj_panel).sprite_index = spr_panel_blue{
             NP = instance_place(180,player.y,obj_panel);
             if NP.PanelStorage = noone &amp;&amp; NP.Broken = false{
                 movecount++;
                 with(obj_virus){
                     Wait = other.id;
                 }       
                 event_user(0);
                 Attack = "Down Laser"; 
                 exit;  
             }
         }
     }
     
     if place_meeting(140,player.y,obj_panel){
         if instance_place(140,player.y,obj_panel).sprite_index = spr_panel_blue{
             NP = instance_place(140,player.y,obj_panel);
             if NP.PanelStorage = noone &amp;&amp; NP.Broken = false{
                 movecount++;
                 with(obj_virus){
                     Wait = other.id;
                 }       
                 event_user(0);
                 Attack = "Down Laser"; 
                 exit;  
             }
         }
     }
     movecount++;  
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///StarBreak Laser
          if place_meeting(180,91,obj_panel){
         if instance_place(180,91,obj_panel).sprite_index = spr_panel_blue{
             NP = instance_place(180,91,obj_panel);
             if NP.PanelStorage = noone &amp;&amp; NP.Broken = false{
                 movecount++;
                 with(obj_virus){
                     Wait = other.id;
                 }       
                 event_user(0);
                 Attack = "Star Laser"; 
                 exit;  
             }
         }
     }
     
     if place_meeting(220,91,obj_panel){
         if instance_place(220,91,obj_panel).sprite_index = spr_panel_blue{
             NP = instance_place(220,91,obj_panel);
             if NP.PanelStorage = noone &amp;&amp; NP.Broken = false{
                 movecount++;
                 with(obj_virus){
                     Wait = other.id;
                 }       
                 event_user(0);
                 Attack = "Star Laser"; 
                 exit;  
             }
         }
     }
     
     if place_meeting(140,91,obj_panel){
         if instance_place(140,91,obj_panel).sprite_index = spr_panel_blue{
             NP = instance_place(140,91,obj_panel);
             if NP.PanelStorage = noone &amp;&amp; NP.Broken = false{
                 movecount++;
                 with(obj_virus){
                     Wait = other.id;
                 }       
                 event_user(0);
                 Attack = "Star Laser"; 
                 exit;  
             }
         }
     }
     movecount++; 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cross Laser
     if place_meeting(60,player.y,obj_panel){
         if instance_place(60,player.y,obj_panel).sprite_index = spr_panel_blue{
             NP = instance_place(60,player.y,obj_panel);
             if NP.PanelStorage = noone &amp;&amp; NP.Broken = false{
                 movecount++;
                 with(obj_virus){
                     Wait = other.id;
                 }       
                 event_user(0);
                 Attack = "Cross Laser"; 
                 exit;  
             }
         }
     }
     
     if place_meeting(100,player.y,obj_panel){
         if instance_place(100,player.y,obj_panel).sprite_index = spr_panel_blue{
             NP = instance_place(100,player.y,obj_panel);
             if NP.PanelStorage = noone &amp;&amp; NP.Broken = false{
                 movecount++;
                 with(obj_virus){
                     Wait = other.id;
                 }       
                 event_user(0);
                 Attack = "Cross Laser"; 
                 exit;  
             }
         }
     }
     
     if place_meeting(140,player.y,obj_panel){
         if instance_place(140,player.y,obj_panel).sprite_index = spr_panel_blue{
             NP = instance_place(140,player.y,obj_panel);
             if NP.PanelStorage = noone &amp;&amp; NP.Broken = false{
                 movecount++;
                 with(obj_virus){
                     Wait = other.id;
                 }       
                 event_user(0);
                 Attack = "Cross Laser"; 
                 exit;  
             }
         }
     }
     
     if place_meeting(180,player.y,obj_panel){
         if instance_place(180,player.y,obj_panel).sprite_index = spr_panel_blue{
             NP = instance_place(180,player.y,obj_panel);
             if NP.PanelStorage = noone &amp;&amp; NP.Broken = false{
                 movecount++;
                 with(obj_virus){
                     Wait = other.id;
                 }       
                 event_user(0);
                 Attack = "Cross Laser"; 
                 exit;  
             }
         }
     }

     if place_meeting(220,player.y,obj_panel){
         if instance_place(220,player.y,obj_panel).sprite_index = spr_panel_blue{
             NP = instance_place(220,player.y,obj_panel);
             if NP.PanelStorage = noone &amp;&amp; NP.Broken = false{
                 movecount++;
                 with(obj_virus){
                     Wait = other.id;
                 }       
                 event_user(0);
                 Attack = "Cross Laser"; 
                 exit;  
             }
         }
     }
movecount++; 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if NP.x = x &amp;&amp; NP.y = y{
    image_index = 0;
    image_speed = 0;
    //sprite_index = Throw_S;
    Exit = true;
    exit;            
}
if NP.x != x || NP.y != y{
    if NP.PanelStorage = noone &amp;&amp; NP.Broken = false{
        with(obj_virus){
            Wait = other.id;
        }       
        event_user(0);
        Attack = "MiniBomb"; 
        Exit = true;    
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if NP.x = x &amp;&amp; NP.y = y{
    image_index = 0;
    image_speed = 0;
    //sprite_index = Sword_S;
    Exit = true;
    exit;            
}
if NP.x != x || NP.y != y{
    if NP.PanelStorage = noone &amp;&amp; NP.Broken = false{
        with(obj_virus){
            Wait = other.id;
        }       
        event_user(0);
        Attack = "Sword"; 
        Exit = true;    
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = Base_S;
image_index = 0.1;
NextPanel = NP;
with(NP){
    PanelID_Save = other.id;
    PanelStorage = other.id;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>HitBox = true;
cl = true;
ss = true;
with(obj_panel){
    if Target[0] = other.id {Target[0] = noone;}
}

if sprite_index = Base_S{
    if Attack = "Cross Laser"{
        x = NextPanel.x;
        y = NextPanel.y;
        image_index = 0;
        image_speed = 0;
        sprite_index = CrossLaser_S;
        NP = noone;
        exit;
    }
    if Attack = "Star Laser"{
        x = NextPanel.x;
        y = NextPanel.y;
        image_index = 0;
        image_speed = 0;
        sprite_index = StarLaser_S;
        NP = noone;
        exit;
    }
    if Attack = "Down Laser"{
        x = NextPanel.x;
        y = NextPanel.y;
        image_index = 0;
        image_speed = 0;
        sprite_index = DownLaser_S;
        NP = noone;
        exit;
    }    
    x = NextPanel.x;
    y = NextPanel.y;
    image_index = 0;
    movecount += 1;
    if NP != noone{
        NP.PanelID_Save = noone;
        NP = noone;
    }
    with(obj_virus){
        Wait = id;
    }
    exit;
}


if sprite_index = CrossLaser_S{
    Attack = "";
    NP = noone;    
    image_index = 0;
    sprite_index = Base_S;
    with(obj_virus){
        Wait = id;
    }
}

if sprite_index = StarLaser_S{
    Attack = "";
    NP = noone;    
    image_index = 0;
    sprite_index = Base_S;
    with(obj_virus){
        Wait = id;
    }
}

if sprite_index = DownLaser_S{
    image_index = 1;
    DownLaser = true;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
