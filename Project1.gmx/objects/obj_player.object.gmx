<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Invin = false;
bc = obj_battlecontroller;
pc = obj_playercontroller;
Charge = "";
ChargeTimer = 0;
is = 0;
rs = 0;
movetimer[0] = 0;
movetimer[1] = 0;
Protection = "None";
ShakeTimer = 0;
FlashTimer = 0;
DamageTimer = 0;
StunTimer = 0;
stun_alpha = .5;
stun_alpha_d = .01;
color_alpha = .3;
color_alpha_d = .01;
f = -0.05;
d = 1;
C = false;
HitStun = "";
HitBox = true;
Object_Index = obj_player;
ChipWeapon = noone;
Damage = 0;
Death = false;
Wait = id;
image_round = 1;
hb_type = "Buster";
NextPanel = instance_place(x,y,obj_panel);
ptimer = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Scripts
image_round = round(image_index);
if place_meeting(x,y,obj_panel){
    IP = instance_place(x,y,obj_panel);
    depth = (IP.y * -1) + (IP.x/40 * -1);
}

if bc.Field = FieldS.N{

//Movement
scr_PlayerMovementBattle();
scr_PlayerBuster();
scr_HitDetection_Player();
scr_PanelContact();
scr_PlayerChipUse();
scr_PlayerPanel();

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Buster Charge
if bc.Field = FieldS.N{

if Charge = "" {is = 0;}
if Charge != ""{
    is += .4;
    if is &gt;= 7.8 &amp;&amp; Charge = "Blue" {is = 0;}
    if is &gt;= 23.8 &amp;&amp; Charge = "Purple" {is = 8;}
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Buster HitBox
if sprite_index = Buster_S{
    if image_round = 3 &amp;&amp; HitBox{
        HitBox = false;
        if !C{
            scr_HitBoxCreation(x+40,y,"Enemy",pc.TrueAtk,CElement.Null,"None",0,1,"Light",obj_impacteffect_buster3);
            exit;
        }
        if C{
            scr_HitBoxCreation(x+40,y,"Enemy",pc.TrueChrgAtk,CElement.Null,"None",0,1,"Light",obj_impacteffect_buster2);
            exit;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Full Synchro Speed
if bc.Field = FieldS.N{

if pc.FullSynchro = 2{
    rs += .3*d;
    if rs &gt;= 5.8 &amp;&amp; d = 1{
        d = -1;
    }
    if rs &lt;= 0 &amp;&amp; d = -1{
        d = 1;
    }
}else{
    rs = 0;
    d = 1;
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pausing
if bc.Field = FieldS.N{
    if bc.key_start{
        bc.Field = FieldS.P;
        exit;
    }
}
if bc.Field = FieldS.P{
    if bc.key_start{
        bc.Field = FieldS.N;
        exit;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///HitStun
if bc.Field = FieldS.N{

switch(HitStun){
    case "Heavy":
    pc.FullSynchro = 1;
    HitStun = "";
    Protection = "Invis";
    StunTimer = 0;
    sprite_index = Hurt_S;
    image_index = 0;
    ShakeTimer = 20;
    FlashTimer = 180;
    f = -0.05;
    savex = IP.x;
    savey = IP.y;
    break;
    
    case "Light-Heavy":
    pc.FullSynchro = 1;
    HitStun = "";
    Protection = "Invis";
    StunTimer = 0;
    sprite_index = Hurt_S;
    image_index = 0;
    DamageTimer = 20;
    FlashTimer = 180;
    f = -0.05;
    break;
    
    case "Invis":
    HitStun = "";
    Protection = "Invis";
    FlashTimer = room_speed*10;
    f = -0.05;
    break;        
    
    case "Medium":
    pc.FullSynchro = 1;
    HitStun = "";
    sprite_index = Hurt_S;
    image_index = 0;
    if ShakeTimer = 0{
        savex = IP.x;
        savey = IP.y;
    }
    ShakeTimer = 20;
    break;
    
    case "Stun":
    pc.FullSynchro = 1;
    HitStun = "";
    sprite_index = Hurt_S;
    image_index = 0;
    StunTimer = room_speed*2;
    break;    
}

if DamageTimer &gt; 0{
    DamageTimer -= 1;
    if DamageTimer = 1 || DamageTimer = 0{
        image_index = 0.1;
        DamageTimer = 0;
        exit;
    }
}

if ShakeTimer &gt; 0{
    ShakeTimer -= 1;
    if ShakeTimer = 1 || ShakeTimer = 0{
        x = savex;
        y = savey;
        image_index = 0.1;
        ShakeTimer = 0;
        exit;
    }
    rx = choose(1,2,0,-1,-2);
    ry = choose(1,2,0,-1,-2);
    x = savex+rx;
    y = savey+ry;
}

if FlashTimer &gt; 0{
    FlashTimer -= 1;
    if FlashTimer = 0{
        image_alpha = 1;
        Protection = "None";
        exit;
    }
    image_alpha += f;
    if image_alpha = .25 &amp;&amp; f &lt; 0{
        f = f*-1;
        exit;
    }
    if image_alpha = .5 &amp;&amp; f &gt; 0{
        f = f*-1;
        exit;
    }
}

if stun_alpha = .5 {stun_alpha_d = .01;}
if stun_alpha = .6 {stun_alpha_d = -.01;}
if StunTimer &gt; 0{
    StunTimer--;
    stun_alpha += stun_alpha_d;
    if StunTimer = 0 {image_index = 0; sprite_index = Base_S}
}
if StunTimer = 0{
    stun_alpha = .5;
}


}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Chip Weapon

if sprite_index = Buster_Sep &amp;&amp; image_round = 1 &amp;&amp; ChipWeapon != noone{
    scr_ProjectileCreation(ChipWeapon,x,y,0,0,1,.25,0,0,"Enemy");
    ChipWeapon = noone;
}

if sprite_index = Slide_S &amp;&amp; image_round = 2 &amp;&amp; ChipWeapon != noone{
    scr_ProjectileCreation(ChipWeapon,x+40,y,0,0,1,0,0,0,"Enemy");
    ChipWeapon = noone;
}

if sprite_index = Sword_Sep &amp;&amp; image_round = 1 &amp;&amp; ChipWeapon != noone{
    scr_ProjectileCreation(ChipWeapon,x,y,0,0,1,.3,0,0,"Enemy");
    ChipWeapon = noone;    
}

if sprite_index = Throw_S &amp;&amp; image_index &gt;= 1 &amp;&amp; ChipWeapon != noone{
    scr_ProjectileCreation(ChipWeapon,x,y,0,0,1,0,0,0,"Enemy");
    ChipWeapon = noone;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Death &amp; Damage
if pc.HP &lt; 0 {pc.HP = 0;}
if pc.HP &gt; pc.MaxHP {pc.HP = pc.MaxHP;}
if sprite_index = Death_S {Protection = "Death";}

if bc.Field = FieldS.N{
    if Damage &lt; 0{
        Damage += 1;
        pc.HP -= 1;
    }
    if Damage &gt; 0{
        Damage -= 1;
        pc.HP += 1;
    }    

    if pc.HP = 0 {Death = true;}
    if Death{
        sprite_index = Death_S;
        image_alpha = 1;
    } 
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation Speed
if bc.Field = FieldS.N{

if sprite_index = Hurt_S{
    if image_index = 0 {image_speed = 0;} else {image_speed = .1;}
}
if sprite_index = Death_S {image_speed = .2;}
if sprite_index = Buster_S {image_speed = .4;}
if sprite_index = Buster_Sep &amp;&amp; image_index &gt;= 1 {image_speed = 0;}
if sprite_index = Buster_Sep &amp;&amp; image_index &lt; 1 {image_speed = .2;}
if sprite_index = Sword_Sep &amp;&amp; image_index &lt;= 1 {image_speed = .2;}
if sprite_index = Sword_Sep &amp;&amp; image_index &gt; 1 {image_speed = 0;}
if sprite_index = Slide_S {image_speed = .3;}
if sprite_index = Throw_S {image_speed = .3;}

}else{
    image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Color forms
/*
//Sprite Variables
if sprite_index = Base_S {Color_Sprite = Base_F;}
if sprite_index = Buster_S {Color_Sprite = Buster_F;}
if sprite_index = Buster_Sep {Color_Sprite = Buster_Fep;}
if sprite_index = Sword_Sep {Color_Sprite = Sword_Fep;}
if sprite_index = Slide_S {Color_Sprite = Slide_F;}
if sprite_index = Throw_S {Color_Sprite = Throw_F;}

//Alpha
if color_alpha = .3 {color_alpha_d = .02;}
if color_alpha = .8 {color_alpha_d = -.02;}
color_alpha += color_alpha_d;

//Colors
Invincible = make_colour_rgb(24,248,40);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement Code
if NP.sprite_index = spr_panel_red &amp;&amp; NP.PanelStorage = noone{
    if !AirShoes &amp;&amp; NP.Broken = false{
        with(obj_virus_ally){
            Wait = other.id;
        }
        image_index = base_index;
        sprite_index = Base_S;
        NextPanel = NP;
        movetimer[0] = 0;
        movetimer[1] = 0;
        exit;
    }
    if AirShoes{
        with(obj_virus_ally){
            Wait = other.id;
        }        
        image_index = base_index;
        sprite_index = Base_S;
        NextPanel = NP;
        movetimer[0] = 0;
        movetimer[1] = 0;    
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>HitBox = true;
C = false;

if sprite_index = Death_S{
    image_index = 5;
}

if sprite_index = Base_S{
    with(obj_virus_ally){
        if Wait = other.id{
            Wait = id;
        }
    }
    x = NextPanel.x;
    y = NextPanel.y;
    image_index = 0;
    bc.rank_movement += 1;
}

if sprite_index = Hurt_S{
    image_index = 0;
    image_speed = 0;
    sprite_index = Base_S;
    image_index = 0;
    image_speed = 0;
    exit;
}

if sprite_index = Buster_S{
    image_index = 0;
    image_speed = 0;
    sprite_index = Base_S;
}

if sprite_index = Slide_S{
    image_index = 0;
    image_speed = 0;
    sprite_index = Base_S;
}

if sprite_index = Throw_S{
    image_index = 0;
    image_speed = 0;
    sprite_index = Base_S;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
if StunTimer &gt; 0 {draw_sprite_ext(Death_S,0,x,y,1,1,0,c_yellow,stun_alpha);}
//if Invin = true {draw_sprite_ext(Color_Sprite,image_index,x,y,1,1,0,Invincible,color_alpha);}
if Charge != ""{
    draw_sprite(spr_buster_charge,is,x,y)
}
if pc.FullSynchro = 2{
    draw_sprite(spr_fullsynchro_ring_small,rs,x,y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
