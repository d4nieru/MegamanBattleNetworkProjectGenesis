<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mettV2_fadein</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-25</depth>
  <persistent>0</persistent>
  <parentName>obj_mett</parentName>
  <maskName>spr_mett_base</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
Order = 0;
movetimer = 0;
attacktimer = 0;
waittimer = 0;
Counter = false;
scr_EnemyStats("MettaurV2",60,30,0,CElement.Null);
scr_VirusOrder_Check(obj_mett);
FadeIn_S = spr_mettV2_fadein;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if Order = 1{
    with(obj_mett){
        if Order = 2{
            Order = 1;
            exit;
        }
        if Order = 3{
            Order = 2;
            exit;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation
image_round = round(image_index);
if place_meeting(x,y,obj_panel){
    IP = instance_place(x,y,obj_panel);
    depth = (IP.y * -1) + (IP.x/40 * -1);
}

//Variables
FadeIn_S = spr_mettV2_fadein;
Base_S = spr_mettV2_base;
Attack_S = spr_mettV2_attack;
GuardU_S = spr_mettV2_guardup;
GuardD_S = spr_mettV2_guarddown;
if sprite_index = Base_S{
    Death_S = spr_mett_base_flash;
}
if sprite_index = Attack_S{
    Death_S = spr_mett_attack_flash;
}

if bc.Field = FieldS.N{

//Speed
if sprite_index = Base_S{
    if image_index = 0 {image_speed = 0;}
    if image_index &gt; 0 {image_speed = .4;}
    Protection = "None";
}
if sprite_index = Death_S {image_speed = 0;}
if sprite_index = Attack_S {image_speed = .22; Protection = "None";}
if sprite_index = GuardU_S {image_speed = .15;}
if sprite_index = GuardD_S {image_speed = .15;}
if sprite_index = FadeIn_S {image_speed = .2;}

}
else{
    if sprite_index != FadeIn_S || image_alpha = 0{
        image_speed = 0;
        } 
        if sprite_index = FadeIn_S &amp;&amp; image_alpha = 1 {image_speed = .2;}
}

//Guarding
if sprite_index = GuardU_S{
    if image_index &lt; 2 {Protection = "None";}
    if image_index &gt;= 2 {Protection = "Guard";}
}
if sprite_index = GuardD_S{
    if image_index &lt; 1 {Protection = "Guard";}
    if image_index &gt;= 1 {Protection = "None";}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Clones do not get the Call Event here</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Guarding
if bc.Field = FieldS.N{

if Order &gt; 1 &amp;&amp; sprite_index = Base_S{
    image_index = 0;
    sprite_index = GuardU_S;
}
if Order = 1 &amp;&amp; sprite_index = GuardU_S{
    image_index = 0;
    sprite_index = GuardD_S;
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
if bc.Field = FieldS.N{

player = obj_player;
if Order = 1 &amp;&amp; sprite_index = Base_S{
    if player.y = y{
        movetimer = 0;
    }    

    if player.y &gt; y{
        if place_meeting(x,y+24,obj_panel){
            NP = instance_place(x,y+24,obj_panel);
            event_user(0);
        }
    }
    
    if player.y &lt; y{
        if place_meeting(x,y-24,obj_panel){
            NP = instance_place(x,y-24,obj_panel);
            event_user(0);
        }
    }    
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attacking
if bc.Field = FieldS.N{

if Order = 1 &amp;&amp; sprite_index = Base_S{
    if player.y != y {attacktimer = 0;}
    if player.y = y{
        movetimer = 0;
        attacktimer += 1;
        if attacktimer = 60{
            attacktimer = 0;
            image_index = 0;
            sprite_index = Attack_S;
        }
    }
}
//Force Attacking
if sprite_index != Base_S || Order != 1{
    waittimer = 0;
}

if Order = 1 &amp;&amp; sprite_index = Base_S{
    if y != player.y{
        waittimer += 1;
        if waittimer = 90{
            waitimer = 0;
            image_index = 0;
            sprite_index = Attack_S;
        }
    }
}

}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shockwave

if sprite_index = Attack_S{
    if image_round = 10 &amp;&amp; Shockwave{
        Shockwave = false;
        scr_ProjectileCreation(obj_shockwave,x-40,y,0,0,-1,.35,Power,CElement.Null,"Player");
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Scripts
if bc.Field = FieldS.D &amp;&amp; image_alpha = 0{
    image_alpha = 1;
}

scr_HitDetection_Enemy();
scr_PanelContact();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Death &amp; Damage
if HP &lt; 0 {HP = 0;}
if HP &gt; MaxHP {HP = MaxHP;}

if bc.Field = FieldS.N{
    if Damage &lt; 0{
        Damage += 1;
        HP -= 1;
    }
    if Damage &gt; 0{
        Damage -= 1;
        HP += 1;
    }    

    if HP-(Damage*-1) &lt;= 0 {HP = 0; Death = true;}
    if Death &amp;&amp; D{
        D = false;
        sprite_index = Death_S;
        image_alpha = 1;
        scr_ExplosionCreate(obj_explosion1,x,y,1,true,id);
    }   
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Counter Frames
if sprite_index = Attack_S &amp;&amp; image_round &gt;= 4 &amp;&amp; image_round &lt;= 8{
    Counter = true;
}else{
    Counter = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
if NP.sprite_index = spr_panel_blue &amp;&amp; NP.PanelStorage = noone &amp;&amp; Wait = id &amp;&amp; NP.Broken = false{
    movetimer += 1;
    if movetimer = 40{
        movetimer = 0;
        image_index = 0.01;
        NextPanel = NP;
        with(obj_virus) {Wait = other.id;}
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Shockwave = true;

if sprite_index = Base_S{
    waittimer = 0;    
    x = NextPanel.x;
    y = NextPanel.y;
    image_index = 0;
    image_speed = 0;
    with(obj_virus){
        Wait = id;
    }
    exit;
}

if sprite_index = Attack_S{
    image_index = 0;
    sprite_index = Base_S;
    with(obj_mett){
        Order -= 1;
        if Order = 0 {Order = instance_number(obj_mett);}
    }
    exit;
}

if sprite_index = GuardU_S{
    image_index = 4;
    exit;
}

if sprite_index = GuardD_S{
    image_index = 0;
    sprite_index = Base_S;
    exit;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
