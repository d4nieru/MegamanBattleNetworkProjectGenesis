<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_spikey_base</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-25</depth>
  <persistent>0</persistent>
  <parentName>obj_virus</parentName>
  <maskName>spr_spikey_base</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
Order = 0;
movetimer = 0;
attacktimer = 0;
NP = noone;
Wait = id;
movecount = 0;
scr_EnemyStats("Spikey",60,20,0,CElement.Fire);
scr_VirusOrder_Check(obj_spikey);
FireBall = true;
FadeIn_S = spr_spikey_fadein;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Order Control
if Order &gt; instance_number(obj_spikey){
    Order = instance_number(obj_spikey);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation
image_round = round(image_index);
if place_meeting(x,y,obj_panel){
    IP = instance_place(x,y,obj_panel);
    depth = (IP.y * -1) + (IP.x/40 * -1);
}

//Variables
FadeIn_S = spr_spikey_fadein;
Base_S = spr_spikey_base;
Attack_S = spr_spikey_attack;
if sprite_index = Base_S{
    Death_S = spr_spikey_base_flash;
}
if sprite_index = Attack_S{
    Death_S = spr_spikey_attack_flash;
}

if bc.Field = FieldS.N{

//Speed
if sprite_index = Base_S{
    if image_index &lt; 5 {image_speed = .15;}
    if image_index &gt;= 5 {image_speed = .4;}
    if image_round = 4 {image_index = 0;}
}
if sprite_index = Death_S {image_speed = 0;}
if sprite_index = Attack_S {image_speed = .15;}
if sprite_index = FadeIn_S {image_speed = .2;}

}
else{
    if sprite_index != FadeIn_S || image_alpha = 0{
        image_speed = 0; 
        } 
        if sprite_index = FadeIn_S &amp;&amp; image_alpha = 1 {image_speed = .2;}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
if bc.Field = FieldS.N{


//Panel Targets
if place_meeting(x+40,y,obj_panel){
    if instance_place(x+40,y,obj_panel).sprite_index = spr_panel_blue &amp;&amp; instance_place(x+40,y,obj_panel).PanelStorage = noone{
        P[0] = instance_place(x+40,y,obj_panel);
    } else {P[0] = noone;} 
}else {P[0] = noone;}

if place_meeting(x-40,y,obj_panel){
    if instance_place(x-40,y,obj_panel).sprite_index = spr_panel_blue &amp;&amp; instance_place(x-40,y,obj_panel).PanelStorage = noone{
        P[1] = instance_place(x-40,y,obj_panel);
    } else {P[1] = noone;} 
}else {P[1] = noone;}

if place_meeting(x,y+24,obj_panel){
    if instance_place(x,y+24,obj_panel).sprite_index = spr_panel_blue &amp;&amp; instance_place(x,y+24,obj_panel).PanelStorage = noone{
        P[2] = instance_place(x,y+24,obj_panel);
    } else {P[2] = noone;} 
}else {P[2] = noone;}

if place_meeting(x,y-24,obj_panel){
    if instance_place(x,y-24,obj_panel).sprite_index = spr_panel_blue &amp;&amp; instance_place(x,y-24,obj_panel).PanelStorage = noone{
        P[3] = instance_place(x,y-24,obj_panel);
    } else {P[3] = noone;} 
}else {P[3] = noone;}

if sprite_index = Base_S &amp;&amp; image_index &lt; 5 &amp;&amp; Wait = id{
    movetimer += 1;
    if movetimer &gt; 0{
       if NP = noone {NP = choose(P[0],P[1],P[2],P[3]);}
       if NP != noone{
           if NP.PanelStorage != noone || NP.Broken = true{
               NP = choose(P[0],P[1],P[2],P[3]);
           }
       }
    }    
    if movetimer &gt;= 80+(Order*10){
        movetimer = 0;
        if NP != noone{
            NextPanel = NP;
            image_index = 5;
            with(obj_virus){
                Wait = other.id;
            }
        }
    }
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attacking
if bc.Field = FieldS.N{

player = obj_player;
diff = y-player.y;
if sprite_index = Base_S &amp;&amp; movecount = 3+Order &amp;&amp; Wait = id{
    movecount++;
    if player.y = y{
        with(obj_virus) {Wait = true;}
        movecount = 0;
        image_index = 0;
        sprite_index = Attack_S;    
        exit;
    }
    if player.y &gt; y{
        if player.y-y = 24{
            if place_meeting(x,y+24,obj_panel){
                NP = instance_place(x,y+24,obj_panel);
                event_user(0);
            }
        }
        if player.y-y = 48{
            if place_meeting(x,y+48,obj_panel){
                NP = instance_place(x,y+48,obj_panel);
                event_user(0);
            }
        }        
    }
    
    if player.y &lt; y{
        if player.y-y = -24{
            if place_meeting(x,y-24,obj_panel){
                NP = instance_place(x,y-24,obj_panel);
                event_user(0);
            }
        }
        if player.y-y = -48{
            if place_meeting(x,y-48,obj_panel){
                NP = instance_place(x,y-48,obj_panel);
                event_user(0);
            }
        }        
    }    
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///FireBall
if sprite_index = Attack_S &amp;&amp; image_round &gt;= 3{
    if FireBall{
        FireBall = false;
        scr_ProjectileCreation(obj_fireball,x,y,-2.5,0,-1,.2,Power,CElement.Fire,"Player");
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Counter Frames
if sprite_index = Attack_S &amp;&amp; image_round &gt;= 3 &amp;&amp; image_round &lt;= 5{
    Counter = true;
}else{
    Counter = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if NP.sprite_index = spr_panel_blue &amp;&amp; NP.PanelStorage = noone &amp;&amp; NP.Broken = false{
    with(obj_virus) {Wait = other.id;}
    NextPanel = NP;
    image_index = 5;
    exit;
}
if NP.sprite_index != spr_panel_blue || NP.PanelStorage != noone{
    with(obj_virus) {Wait = other.id;}
    movecount = 0;
    image_index = 0;
    sprite_index = Attack_S;    
    NP = noone;
    exit;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>FireBall = true;

if sprite_index = Base_S{
    if movecount &gt;= 3+Order{
        x = NextPanel.x;
        y = NextPanel.y;
        image_index = 0;
        sprite_index = Attack_S;
        movecount = 0;
        NP = noone;
        exit;
    }
    x = NextPanel.x;
    y = NextPanel.y;
    image_index = 0;
    movecount += 1;
    NP = noone;
    with(obj_virus){
        Wait = id;
    }
}

if sprite_index = Attack_S{
    image_index = 0;
    sprite_index = Base_S;
    with(obj_virus){
        Wait = id;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
