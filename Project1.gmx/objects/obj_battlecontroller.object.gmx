<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize(); //Set this to the starting room later
pc = obj_playercontroller;
globalvar
Panel,
Red,
Blue,
Stream
;
Red = 0;
Blue = 1;


Turn = 1;
Field = 1;
alarm[0] = 2;

clock = 0;
Minutes = 0;
Seconds = 0;
End = true;
Start = false;


//Creating the CustomBar, HpBar, Background, and EmotionBar
instance_create(0,0,obj_custom_gague);
instance_create(0,0,obj_health_border);
scr_Background_System(bg_orange1,.25,.25,BGEM.Orange,0);




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Font System
EnemyHP_Font = font_add_sprite_ext(spr_enemyhp_font,"0123456789",true,0);
Chip_Font = font_add_sprite_ext(spr_chip_font,"0123456789AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz=?!+:-_",true,0);
PlayerHP_Font_Normal = font_add_sprite_ext(spr_megamanhp_font_normal,"0123456789",true,2);
PlayerHP_Font_Hurt = font_add_sprite_ext(spr_megamanhp_font_hurt,"0123456789",true,2);
PlayerHP_Font_Heal = font_add_sprite_ext(spr_megamanhp_font_heal,"0123456789",true,2);
Code_Font_Big = font_add_sprite_ext(spr_code_font_big,"ABCDEFGHIJKLMNOPQRSTUVWXYZ0",true,0);
Time_Rank_Font = font_add_sprite_ext(spr_time_rank_font,"0123456789S:",false,0);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stream System
Stream = noone;

StreamIndex[0] = DS1; //StreamIcon.Erase;
StreamIndex[1] = DS2; //StreamIcon.Heel;
StreamIndex[2] = DS3; //StreamIcon.Napalm; //StreamIcon.Number;


streamindex[0] = StreamIndex[0];
streamindex[1] = StreamIndex[1];
streamindex[2] = StreamIndex[2];

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Rank Variables
rank_hits = 0;
rank_movement = 0;
rank_md = 0;
rank_ch = 0;
rank_cross = 0;
Battle_Type = "";
Points = 0;
virus_death = 0;
vtime = 0;
vdtime = 0;
VD_Draw = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Starting the Viruses[3]
with(V3) {image_alpha = 1;}
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Starting the Viruses[2]
with(V2) {image_alpha = 1;}
if instance_number(obj_virus) = 3 {alarm[3] = 15;} else {event_user(0);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Starting the Viruses[1]
with(V1) {image_alpha = 1;}
if instance_number(obj_virus) &gt;= 2 {alarm[2] = 15;} else {event_user(0);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setting the field

//Battle Type
Battle_Type = "Boss";
if Battle_Type = "Virus"{
    Points = 9;
}
if Battle_Type = "Boss"{
    Points = 13;
}

//Player
scr_Field_Summoning(obj_megaman,Panel[Red,4]);

//Viruses/Boss (3 is the max)
scr_Field_Summoning(DB,Panel[Blue,4]);
//scr_Field_Summoning(obj_spikey,Panel[Blue,8]);
//scr_Field_Summoning(obj_gunner,Panel[Blue,2]);

//Field Objects (2 on each side is the max)
//scr_Field_Summoning(obj_rockcube,Panel[Red,6]);
//scr_Field_Summoning(obj_rockcube,Panel[Blue,6]);
//scr_Field_Summoning(obj_rockcube,Panel[Blue,8]);
//scr_Field_Summoning(obj_rockcube,Panel[Blue,3]);

//Panels
Panel[Red,0].image_index = panelimage.t_grass;
Panel[Red,1].image_index = panelimage.m_grass;
Panel[Red,2].image_index = panelimage.b_grass;
Panel[Red,3].image_index = panelimage.t_grass;
Panel[Red,4].image_index = panelimage.m_grass;
Panel[Red,5].image_index = panelimage.b_grass;
Panel[Red,6].image_index = panelimage.t_grass;
Panel[Red,7].image_index = panelimage.m_grass;
Panel[Red,8].image_index = panelimage.b_grass;

Panel[Blue,0].image_index = panelimage.t_normal;
Panel[Blue,1].image_index = panelimage.m_normal;
Panel[Blue,2].image_index = panelimage.b_normal;
Panel[Blue,3].image_index = panelimage.t_normal;
Panel[Blue,4].image_index = panelimage.m_normal;
Panel[Blue,5].image_index = panelimage.b_normal;
Panel[Blue,6].image_index = panelimage.t_normal;
Panel[Blue,7].image_index = panelimage.m_normal;
Panel[Blue,8].image_index = panelimage.b_normal;

//Field Scan
scr_FieldScan();
alarm[1] = 15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Scripts
scr_KeyMapping()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Field Enum
enum FieldS{
    N = 0,
    F = 1,
    P = 2,
    D = 3,
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Background Enum
enum BGEM{
    Test = 0,
    Orange = 1
}

//Background Variables
BG[BGEM.Test,0] = bg_square1;
BG[BGEM.Test,1] = bg_square2;
BG[BGEM.Test,2] = bg_square3;
BG[BGEM.Test,3] = bg_square4;
BG[BGEM.Test,4] = bg_square5;
BG[BGEM.Test,5] = bg_square6;
BG[BGEM.Test,6] = bg_square7;
BG[BGEM.Test,7] = bg_square8;
BG[BGEM.Test,8] = bg_square9;
BG[BGEM.Test,9] = bg_square10;
BG[BGEM.Test,10] = bg_square11;
BG[BGEM.Test,11] = bg_square12;
BG[BGEM.Test,12] = bg_square13;
BG[BGEM.Test,13] = bg_square14;
BG[BGEM.Test,14] = bg_square15;
BG[BGEM.Test,15] = bg_square16;
//Orange
BG[BGEM.Orange,0] = bg_orange1;
BG[BGEM.Orange,1] = bg_orange2;
BG[BGEM.Orange,2] = bg_orange3;
BG[BGEM.Orange,3] = bg_orange4;
BG[BGEM.Orange,4] = bg_orange5;
BG[BGEM.Orange,5] = bg_orange6;
BG[BGEM.Orange,6] = bg_orange7;
BG[BGEM.Orange,7] = bg_orange8;

//Background movement
scr_Background_System2(room_speed/6,0,7);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stream Enum
enum StreamIcon{
    Heel = 0,
    Erase = 3,
    Number = 6,
    Napalm = 9,
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Element Enum
enum CElement{
    Null = 0,
    Wind = 1,
    Break = 2,
    Sword = 3,
    Cracking = 4,
    Obstacle = 5,
    Recovery = 6,
    Invis = 7,
    Plus = 8,
    Fire = 9,
    Aqua = 10,
    Elec = 11,
    Wood = 12,
    Cursor = 13
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Chip Pic Enum
enum ChipP{
    NoData = 0,
    SendData = 1,
    Cannon = 2,
    HiCannon = 3,
    MCannon = 4,
    AirHoc = 5,
    AreaGrab = 6,
    TidalWave = 7,
    LavaWave = 8,
    MudWave = 9,
    Tornado = 10,
    Invis = 11,
    MachGun1 = 12,
    MachGun2 = 13,
    MachGun3 = 14,
    Sword = 15,
    WideSword = 16,
    LongSword = 17,
    MiniBomb = 18,
    Atk10 = 19,
    Atk30 = 20,
    HP10 = 21,
    HP30 = 22,
    HP50 = 23,
    HP80 = 24,
    HP120 = 25,
    HP150 = 26,
    HP200 = 27,
    HP300 = 28,
    FireBurn1 = 29,
    FireBurn2 = 30,
    FireBurn3 = 31,
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Chip Icon Enum
enum ChipI{
    Cannon = 0,
    HiCannon = 1,
    MCannon = 2,
    AirHoc = 3,
    AreaGrab = 4,
    WhiteStar = 5,
    TidalWave = 6,
    LavaWave = 7,
    MudWave = 8,
    Tornado = 9,
    Invis = 10,
    MachGun1 = 11,
    MachGun2 = 12,
    MachGun3 = 13,
    Sword = 14,
    WideSword = 15,
    LongSword = 16,
    MiniBomb = 17,
    PA = 18,
    Atk10 = 19,
    Atk30 = 20,
    HP10 = 21,
    HP30 = 22,
    HP50 = 23,
    HP80 = 24,
    HP120 = 25,
    HP150 = 26,
    HP200 = 27,
    HP300 = 28,
    FireBurn1 = 29,
    FireBurn2 = 30,
    FireBurn3 = 31,
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Custom Gauge
if Field = FieldS.N{
    if obj_custom_gague.image_index &gt;= 1{
        if key_l || key_r{
            event_user(0);
            Field = FieldS.F;
            for(i=1;i&lt;6;i++;){
                pc.ChipSlot[i,pc.Name] = "";
                pc.ChipSlot[i,pc.Code] = "";
                pc.ChipSlot[i,pc.Power] = -1;
                pc.ChipSlot[i,pc.Element] = -1;
                pc.ChipSlot[i,pc.Icon] = -1;
                pc.ChipSlot[i,pc.Dim] = -1;
                pc.ChipSlot[i,pc.ID] = -1;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Battle Clock
if Field = FieldS.N{
    clock++;
    if clock = room_speed-1{
        clock = 0;
        if Seconds != 59 {Seconds++; exit;}
        if Seconds = 59{
            Seconds = 0;
            Minutes++;
            exit;
        }
    }
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Game Ending
if !instance_exists(obj_virus) &amp;&amp; Start &amp;&amp; !instance_exists(obj_explosion){
    if End{
        End = false;
        Field = FieldS.D;
        with(instance_create(0,0,obj_battle_text)){
            i = 6;
            image_index = i-2;
        }        
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Rank settings
Rank = Points-(rank_hits-1)+rank_ch-rank_cross;

if rank_hits &gt; 4 {rank_hits = 4;}
if rank_movement &gt;= 3 {rank_movement = -999999999; Points -= 1;}
if rank_ch &gt; 3 {rank_ch = 3;}
if rank_cross &gt; 1 {rank_cross = 1;}

//Rank Time
if Battle_Type = "Virus"{
    if Minutes = 0 &amp;&amp; Seconds = 5 &amp;&amp; clock = 1 {Points -= 1;}
    if Minutes = 0 &amp;&amp; Seconds = 12 &amp;&amp; clock = 1 {Points -= 1;}
    if Minutes = 0 &amp;&amp; Seconds = 36 &amp;&amp; clock = 1 {Points -= 1;}
}
if Battle_Type = "Boss"{
    if Minutes = 0 &amp;&amp; Seconds = 30 &amp;&amp; clock = 1 {Points -= 2;}
    if Minutes = 0 &amp;&amp; Seconds = 40 &amp;&amp; clock = 1 {Points -= 2;}
    if Minutes = 0 &amp;&amp; Seconds = 50 &amp;&amp; clock = 1 {Points -= 2;}
}

//Multi Kills
if VD_Draw != ""{
    vdtime++;
    if vdtime = room_speed*2{
        VD_Draw = "";
        vdtime = 0;
    }
}
if virus_death &gt; 0{
    vtime++;
    if vtime = 20{
        if virus_death = 1 {VD_Draw = ""; vtime = 0; virus_death = 0; exit;}
        if virus_death = 2 {VD_Draw = "Double Delete"; Points += 2; vtime = 0; virus_death = 0; exit;}
        if virus_death = 3 {VD_Draw = "Triple Delete"; Points += 4; vtime = 0; virus_death = 0; exit;}
    }
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Summoning the Chip Menu
instance_create(0,0,obj_chip_menu);
Start = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if Field = FieldS.P{
    draw_sprite(spr_paused_text,0,0,0);
}

if VD_Draw != ""{
    draw_set_color(c_white);
    draw_set_font(Chip_Font);
    draw_text(-80,22,VD_Draw);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="89">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_all();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>221</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_previous_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="9" enumb="85">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
