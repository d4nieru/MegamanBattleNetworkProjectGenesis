<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_stream_button_cursor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_chip_icon</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = .1;
movetimer[0] = 0;
movetimer[1] = 0;
bc = obj_battlecontroller;
pc = obj_playercontroller;
cm = obj_chip_menu;
ic = noone;
t = 1;
chip_count = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
move[0] = (bc.key_left * -1) + bc.key_right;
move[1] = (bc.key_up * -1) + bc.key_down;

if !bc.key_right_p &amp;&amp; !bc.key_left_p &amp;&amp; !bc.key_up_p &amp;&amp; bc.key_down_p{
    if y != ystart+(16*4){
        y += 16;
        t++;
        exit;
    } 
}
if !bc.key_right_p &amp;&amp; !bc.key_left_p &amp;&amp; bc.key_up_p &amp;&amp; !bc.key_down_p{
    if y != ystart{
        y -= 16;
        t -= 1;
        exit;
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Selecting the chips
if bc.key_a_p{
    if pc.ChipSlot[t,pc.Code] != "0" &amp;&amp; pc.ChipSlot[t,pc.Code] != ""{
        with(pc.ChipSlot[t,pc.ID]){
            instance_destroy();
        }
        pc.ChipSlot[t,pc.Name] = "";
        pc.ChipSlot[t,pc.Code] = "";
        pc.ChipSlot[t,pc.Power] = -1;
        pc.ChipSlot[t,pc.Element] = -1;
        pc.ChipSlot[t,pc.Icon] = -1;
        pc.ChipSlot[t,pc.Dim] = -1;
        pc.ChipSlot[t,pc.ID] = -1;
        chip_count++;
    }
}

if bc.key_b_p &amp;&amp; chip_count &gt; 1{
    switch(chip_count){
        case 2:
        for(i=1; i&lt;6; i++;){
            if pc.ChipSlot[i,pc.Name] = ""{
                pc.ChipSlot[i,pc.Name] = "VrusCall1"
                pc.ChipSlot[i,pc.Code] = "H";
                pc.ChipSlot[i,pc.Power] = 0;
                pc.ChipSlot[i,pc.Element] = CElement.Null;
                pc.ChipSlot[i,pc.Icon] = ChipI.WhiteStar;
                pc.ChipSlot[i,pc.Dim] = true;
                pc.ChipSlot[i,pc.ID] = -1;
                obj_player.sb_count -= 1;
                instance_create(cm.x,cm.y,obj_chip_cursor);
                instance_destroy();                
                exit;
            }
        }
        break;
        
        case 3:
        for(i=1; i&lt;6; i++;){
            if pc.ChipSlot[i,pc.Name] = ""{
                pc.ChipSlot[i,pc.Name] = "VrusCall2"
                pc.ChipSlot[i,pc.Code] = "H";
                pc.ChipSlot[i,pc.Power] = 0;
                pc.ChipSlot[i,pc.Element] = CElement.Null;
                pc.ChipSlot[i,pc.Icon] = ChipI.WhiteStar;
                pc.ChipSlot[i,pc.Dim] = true;
                pc.ChipSlot[i,pc.ID] = -1;
                obj_player.sb_count -= 1;
                instance_create(cm.x,cm.y,obj_chip_cursor);
                instance_destroy();                
                exit;
            }
        }
        break;
        
        case 4:
        for(i=1; i&lt;6; i++;){
            if pc.ChipSlot[i,pc.Name] = ""{
                pc.ChipSlot[i,pc.Name] = "VrusCall3"
                pc.ChipSlot[i,pc.Code] = "H";
                pc.ChipSlot[i,pc.Power] = 0;
                pc.ChipSlot[i,pc.Element] = CElement.Null;
                pc.ChipSlot[i,pc.Icon] = ChipI.WhiteStar;
                pc.ChipSlot[i,pc.Dim] = true;
                pc.ChipSlot[i,pc.ID] = -1;
                obj_player.sb_count -= 1;
                instance_create(cm.x,cm.y,obj_chip_cursor);
                instance_destroy();                
                exit;
            }
        }
        break;
        
        case 5:
        for(i=1; i&lt;6; i++;){
            if pc.ChipSlot[i,pc.Name] = ""{
                pc.ChipSlot[i,pc.Name] = "VrusCall4"
                pc.ChipSlot[i,pc.Code] = "H";
                pc.ChipSlot[i,pc.Power] = 0;
                pc.ChipSlot[i,pc.Element] = CElement.Null;
                pc.ChipSlot[i,pc.Icon] = ChipI.WhiteStar;
                pc.ChipSlot[i,pc.Dim] = true;
                pc.ChipSlot[i,pc.ID] = -1;
                obj_player.sb_count -= 1;
                instance_create(cm.x,cm.y,obj_chip_cursor);
                instance_destroy();                
                exit;
            }
        }
        break;                        
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
