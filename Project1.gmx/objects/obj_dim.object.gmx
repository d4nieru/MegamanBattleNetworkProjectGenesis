<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_fade</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>50</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bc = obj_battlecontroller;
pc = obj_playercontroller;
image_alpha = 0;
NameShow = false;
na = 0;
na_check = true;


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ChipStart Variables
ChipStart = false;
Target = noone;
timer = 0;
GhostStart = true;
NapalmStrike = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ChipStart = true;
NameShow = false;
na = 0;
image_alpha = .21;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fade-In
if image_alpha &lt; .2{
   image_alpha += .02;
}
if image_alpha = .2{
    NameShow = true;
    na += .025;
    if na &gt; 1 {na = 1;}
}
if na &gt;= 1 &amp;&amp; na_check{
    na_check = false;
    alarm[0] = 30;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Starting the dim chip's effect
if ChipStart{
    switch(Name){
        case "AreaGrab":
        for(i=3;i&lt;8;i++){
            if Panel[Red,i].sprite_index = spr_panel_blue || Panel[Red,i].panel_flash = true{
                Target = Panel[Red,i];
                break;
            }
        }
        if Target = noone{
            for(i=0;i&lt;6;i++){
                if Panel[Blue,i].sprite_index = spr_panel_blue || Panel[Blue,i].panel_flash = true{
                    Target = Panel[Blue,i];
                    break;
                }
            }
        }
        //Poof effect here
        if Target = noone{
            instance_create(obj_player.x,obj_player.y,obj_poof_effect);
        }
        if Target != noone{
            with(instance_create(Target.x,-9,obj_areagrab_effect)){
                Path = ph_areagrab1;
                with(obj_panel){
                    if x = obj_dim.Target.x &amp;&amp; y = 139{
                        other.Panel_T = id;
                    }
                }
                CP = spr_panel_red;
                path_start(Path,8,path_action_stop,0);
            }
            with(instance_create(Target.x,-36,obj_areagrab_effect)){
                Path = ph_areagrab2;
                with(obj_panel){
                    if x = obj_dim.Target.x &amp;&amp; y = 115{
                        other.Panel_T = id;
                    }
                }
                CP = spr_panel_red;
                path_start(Path,8,path_action_stop,0);
            }
            with(instance_create(Target.x,-63,obj_areagrab_effect)){
                Path = ph_areagrab3;
                with(obj_panel){
                    if x = obj_dim.Target.x &amp;&amp; y = 91{
                        other.Panel_T = id;
                    }
                }
                CP = spr_panel_red;
                path_start(Path,8,path_action_stop,0);
            }                        
        }
        ChipStart = false;
        break;
        
        case "VirusCall":
        with(Owner){
            if VCall &amp;&amp; Attack = "!"{
                image_index = 0;
                sprite_index = VCall_S
            }
        }
        ChipStart = false;        
        break;
        
        case "VirusCall2":
        with(Owner){
            if VCall &amp;&amp; Attack = "!"{
                image_index = 0;
                sprite_index = VCall_S
            }
        }
        ChipStart = false;        
        break;
        
        case "DataStream":
        with(obj_virus){
            if Wait = 1994{
                image_alpha = 1;
                if x != DSP.x &amp;&amp; y != DSP.y{
                    image_index = 0.1994;
                    sprite_index = Base_S;
                }else{
                    image_index = 0;
                    sprite_index = DataStream_S;
                }
            }
        }
        ChipStart = false;        
        break;                 
        
        case "VrusCall1":
        if instance_number(obj_virus_ally) &lt; 2 &amp;&amp; instance_exists(obj_heelstream_player){
            for(i=3;i&lt;7;i++){
                if Panel[Red,i].PanelStorage = noone &amp;&amp; Panel[Red,i].Broken = false &amp;&amp; Panel[Red,i].sprite_index = spr_panel_red{
                    instance_create(Panel[Red,i].x,Panel[Red,i].y,obj_mett_va);
                    ChipStart = false;
                    exit;
                }
            }
        }else{
            instance_create(obj_player.x,obj_player.y,obj_poof_effect);   
        }
        ChipStart = false;
        break;
        
        case "NapalmStrike":
        if instance_exists(obj_napalmstream_player){
            if NapalmStrike{
                NapalmStrike = false;
                with(instance_create(obj_player.x+80,-40,obj_napalm_strike)){
                    NT = 115;   
                    Owner = obj_player.id;
                }
            }
        }else{
            instance_create(obj_player.x,obj_player.y,obj_poof_effect);
        }
        ChipStart = false;
        break;
        
        case "GhostHunt":
        if instance_exists(obj_erasestream_player){
            if GhostStart{
                GhostStart = false;
                for(i=1;i&lt;7;i++){
                    GH[i] = choose(91,115,139);
                }
            }
            timer++;
            switch(timer){
                case 1:
                scr_ProjectileCreation(obj_eraseghost,obj_player.x+40,GH[1],6,0,1,.2,0,0,"Enemy");
                break;
                case 51:
                scr_ProjectileCreation(obj_eraseghost,obj_player.x+40,GH[2],6,0,1,.2,0,0,"Enemy");
                break;
                case 101:
                scr_ProjectileCreation(obj_eraseghost,obj_player.x+40,GH[3],6,0,1,.2,0,0,"Enemy");
                break;
                case 151:
                scr_ProjectileCreation(obj_eraseghost,obj_player.x+40,GH[4],6,0,1,.2,0,0,"Enemy");
                break;
                case 201:
                scr_ProjectileCreation(obj_eraseghost,obj_player.x+40,GH[5],6,0,1,.2,0,0,"Enemy");
                break;
                case 251:
                scr_ProjectileCreation(obj_eraseghost,obj_player.x+40,GH[6],6,0,1,.2,0,0,"Enemy");
                break;
                case 301:
                ChipStart = false;
                bc.Field = FieldS.N;
                instance_destroy();
                break;                                                                                
            }
        }
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_set_color(c_white);
draw_set_font(bc.Chip_Font);
draw_set_alpha(na);

if NameShow{
    if Placement = "Player" {draw_text(-116,22,Name);}
    if Placement = "Enemy" {draw_text(0,22,Name);}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
