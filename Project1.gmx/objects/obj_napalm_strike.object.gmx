<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_napalm_bomb</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_projectile</parentName>
  <maskName>spr_napalm_bomb</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>HitBox = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale = 1;
depth = (NT*-1)-10;
if place_meeting(x,y,obj_panel){
    IP = instance_place(x,y,obj_panel);
}
if bc.Field = FieldS.D{
    image_speed = 0;
    vspeed = 5;
    if y &gt;= NT{
        instance_destroy();
        vspeed = 0;
        y = NT;
        if IP.Broken = false{
        
        with(instance_create(0,0,obj_screenshake)){
            timer = 30;
        }
        scr_HitBoxCreation(x,NT,"Enemy",Owner.TrueChipPower,CElement.Fire,"",0,0,"Heavy",noone);
        scr_HitBoxCreation(x,NT+24,"Enemy",Owner.TrueChipPower,CElement.Fire,"",0,0,"Heavy",noone);
        scr_HitBoxCreation(x,NT-24,"Enemy",Owner.TrueChipPower,CElement.Fire,"",0,0,"Heavy",noone);
        scr_HitBoxCreation(x+40,NT,"Enemy",Owner.TrueChipPower,CElement.Fire,"",0,0,"Heavy",noone);
        scr_HitBoxCreation(x+40,NT+24,"Enemy",Owner.TrueChipPower,CElement.Fire,"",0,0,"Heavy",noone);
        scr_HitBoxCreation(x+40,NT-24,"Enemy",Owner.TrueChipPower,CElement.Fire,"",0,0,"Heavy",noone);
        
        instance_create(x,NT,obj_explosion3);
        instance_create(x,NT+24,obj_explosion3);
        instance_create(x,NT-24,obj_explosion3);
        instance_create(x+40,NT,obj_explosion3);
        instance_create(x+40,NT+24,obj_explosion3);
        instance_create(x+40,NT-24,obj_explosion3);
        exit;
    }else{
        with(obj_dim){
            bc.Field = FieldS.N;
            instance_destroy();
        }
    }
    
    }   
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
