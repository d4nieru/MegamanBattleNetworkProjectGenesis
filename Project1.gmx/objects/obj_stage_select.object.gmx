<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Font System
EnemyHP_Font = font_add_sprite_ext(spr_enemyhp_font,"0123456789",true,0);
Chip_Font = font_add_sprite_ext(spr_chip_font,"0123456789AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz=?!+:-_",true,0);
PlayerHP_Font_Normal = font_add_sprite_ext(spr_megamanhp_font_normal,"0123456789",true,2);
PlayerHP_Font_Hurt = font_add_sprite_ext(spr_megamanhp_font_hurt,"0123456789",true,2);
PlayerHP_Font_Heal = font_add_sprite_ext(spr_megamanhp_font_heal,"0123456789",true,2);
Code_Font_Big = font_add_sprite_ext(spr_code_font_big,"ABCDEFGHIJKLMNOPQRSTUVWXYZ0",true,0);
Time_Rank_Font = font_add_sprite_ext(spr_time_rank_font,"0123456789S:",false,0);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar Demo_HP,Demo_Stream1,Demo_Stream2,Demo_Stream3,Demo_Boss,DS1,DS2,DS3,DB;
Demo_HP = 100;
Demo_Stream1 = "None";
Demo_Stream2 = "None";
Demo_Stream3 = "None";
Demo_Boss = "HeelNavi";

i = 0;
Selected[0] = true;
Selected[1] = false;
Selected[2] = false;
Selected[3] = false;
Selected[4] = false;
Selected[5] = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
if keyboard_check_pressed(vk_down){
    if Selected[5] != true{
        Selected[i] = false;
        i++;
        Selected[i] = true;
    }else{
        Selected[i] = false;
        i = 0;
        Selected[i] = true;
    }
}

if keyboard_check_pressed(vk_up){
    if Selected[0] != true{
        Selected[i] = false;
        i--;
        Selected[i] = true;
    }else{
        Selected[i] = false;
        i = 5;
        Selected[i] = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Selecting an option
switch(Demo_Stream1){
    case "Heel":
    DS1 = StreamIcon.Heel;
    break;
    
    case "Erase":
    DS1 = StreamIcon.Erase;
    break;    
    
    case "Number":
    DS1 = StreamIcon.Number;
    break;
    
    case "Napalm":
    DS1 = StreamIcon.Napalm;
    break;   
    
    case "None":
    DS1 = -1;
    break;          
}
switch(Demo_Stream2){
    case "Heel":
    DS2 = StreamIcon.Heel;
    break;
    
    case "Erase":
    DS2 = StreamIcon.Erase;
    break;    
    
    case "Number":
    DS2 = StreamIcon.Number;
    break;
    
    case "Napalm":
    DS2 = StreamIcon.Napalm;
    break;
    
    case "None":
    DS2 = -1;
    break;             
}
switch(Demo_Stream3){
    case "Heel":
    DS3 = StreamIcon.Heel;
    break;
    
    case "Erase":
    DS3 = StreamIcon.Erase;
    break;    
    
    case "Number":
    DS3 = StreamIcon.Number;
    break;
    
    case "Napalm":
    DS3 = StreamIcon.Napalm;
    break;
    
    case "None":
    DS3 = -1;
    break;            
}

switch(Demo_Boss){
    case "HeelNavi":
    DB = obj_heelnavi;
    break;
    
    case "HeelNaviDS":
    DB = obj_heelnavi_ds;
    break;
    
    case "ProtoMan":
    DB = obj_protoman;
    break;        
    
    case "LaserMan":
    DB = obj_laserman;
    break;    
    
    case "HornetMan":
    DB = obj_hornetman;
    break;    
}

if keyboard_check_pressed(ord("Z")){
    switch(i){
        case 0:
        Demo_HP = get_integer("Set MegaMan's HP to either 100,200,300",100);
        if Demo_HP != 100 &amp;&amp; Demo_HP != 200 &amp;&amp; Demo_HP != 300{
            show_message("HP must be either 100,200,300");
            Demo_HP = 100;
        }
        break;
        
        case 1:
        Demo_Stream1 = get_string("Set the first slot in MegaMan's Stream selection. Heel,Erase,Number,Napalm","None");
        if Demo_Stream1 != "Heel" &amp;&amp; Demo_Stream1 != "Erase" &amp;&amp; Demo_Stream1 != "Number" &amp;&amp; Demo_Stream1 != "Napalm" &amp;&amp; Demo_Stream1 != "None"{
            show_message("That Stream is not available");
            Demo_Stream1 = "None";
        }
        if Demo_Stream1 != "None"{
            if Demo_Stream1 = Demo_Stream2 || Demo_Stream1 = Demo_Stream3{
                show_message("That Stream is already in use");
                Demo_Stream1 = "None";
            }
        }
        break;
        
        case 2:
        Demo_Stream2 = get_string("Set the second slot in MegaMan's Stream selection. Heel,Erase,Number,Napalm","None");
        if Demo_Stream2 != "Heel" &amp;&amp; Demo_Stream2 != "Erase" &amp;&amp; Demo_Stream2 != "Number" &amp;&amp; Demo_Stream2 != "Napalm" &amp;&amp; Demo_Stream2 != "None"{
            show_message("That Stream is not available");
            Demo_Stream2 = "None";
        }
        if Demo_Stream2 != "None"{
            if Demo_Stream2 = Demo_Stream1 || Demo_Stream2 = Demo_Stream3{
                show_message("That Stream is already in use");
                Demo_Stream2 = "None";
            }
        }        
        break;
        
        case 3:
        Demo_Stream3 = get_string("Set the third slot in MegaMan's Stream selection. Heel,Erase,Number,Napalm","None");
        if Demo_Stream3 != "Heel" &amp;&amp; Demo_Stream3 != "Erase" &amp;&amp; Demo_Stream3 != "Number" &amp;&amp; Demo_Stream3 != "Napalm" &amp;&amp; Demo_Stream3 != "None"{
            show_message("That Stream is not available");
            Demo_Stream3 = "None";
        }
        if Demo_Stream3 != "None"{
            if Demo_Stream3 = Demo_Stream1 || Demo_Stream3 = Demo_Stream2{
                show_message("That Stream is already in use");
                Demo_Stream3 = "None";
            }
        }        
        break;
        
        case 4:
        Demo_Boss = get_string("Select a boss to fight. HeelNavi,ProtoMan,HeelNaviDS,LaserMan,HornetMan","HeelNavi");
        if Demo_Boss != "HeelNavi" &amp;&amp; Demo_Boss != "ProtoMan" &amp;&amp; Demo_Boss != "HeelNaviDS" &amp;&amp; Demo_Boss != "LaserMan" &amp;&amp; Demo_Boss != "HornetMan"{
            show_message("That Boss is not available");
            Demo_Boss = "HeelNavi";
        }
        break;
        
        case 5:
        room_goto_next();
        break;        
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(Chip_Font)

if Selected[0] = true{
    draw_set_color(c_lime);
}else{
    draw_set_color(c_white);
}
draw_text(-160,17,"HP");

if Selected[1] = true{
    draw_set_color(c_lime);
}else{
    draw_set_color(c_white);
}
draw_text(-160,38,"Stream1");

if Selected[2] = true{
    draw_set_color(c_lime);
}else{
    draw_set_color(c_white);
}
draw_text(-160,59,"Stream2");

if Selected[3] = true{
    draw_set_color(c_lime);
}else{
    draw_set_color(c_white);
}
draw_text(-160,80,"Stream3");

if Selected[4] = true{
    draw_set_color(c_lime);
}else{
    draw_set_color(c_white);
}
draw_text(-160,101,"Boss");

if Selected[5] = true{
    draw_set_color(c_lime);
}else{
    draw_set_color(c_white);
}
draw_text(-160,122,"Start");

draw_set_color(c_white)
draw_text(2,17,string(Demo_HP));
draw_text(2,38,Demo_Stream1);
draw_text(2,59,Demo_Stream2);
draw_text(2,80,Demo_Stream3);
draw_text(2,101,Demo_Boss);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
