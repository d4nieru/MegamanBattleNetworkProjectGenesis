<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_heelnavi_base</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-25</depth>
  <persistent>0</persistent>
  <parentName>obj_virus</parentName>
  <maskName>spr_heelnavi_base</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
Order = 0;
movetimer = 50;
attacktimer = 0;
NP = noone;
Wait = id;
movecount = 0;
viruscall = 0;
viruscount = 0;
scr_EnemyStats("HeelNavi",400,10,0,CElement.Null);
scr_VirusOrder_Check(obj_heelnavi);
Attack = "";
Sword = false;
VCall = false;
attack[0] = Power*3;
attack[1] = Power*5;
ShakeTimer = 0;
FlashTimer = 0;
DamageTimer = 0;
f = -0.05;
HitStun = "";
HitBox = true;
virus[0] = choose(obj_mett,obj_gunner,obj_mett,obj_spikey);
virus[1] = choose(obj_mett,obj_gunner,obj_mett,obj_spikey);
vpanel = noone;

Exit = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(obj_panel){
    if Target[0] = other.id {Target[0] = noone;}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Order Control
if Order &gt; instance_number(obj_heelnavi){
    Order = instance_number(obj_heelnavi);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation
image_round = round(image_index);
if place_meeting(x,y,obj_panel){
    IP = instance_place(x,y,obj_panel);
    depth = (IP.y * -1) + (IP.x/40 * -1);
}

//Variables
FadeIn_S = spr_heelnavi_fadein;
Base_S = spr_heelnavi_base;
Hurt_S = spr_heelnavi_hurt;
Throw_S = spr_heelnavi_throw;
Sword_S = spr_heelnavi_sword;
VCall_S = spr_heelnavi_viruscall;
Death_S = spr_heelnavi_hurt_flash;


if bc.Field = FieldS.N{

//Speed
if sprite_index = Base_S{
    if image_index = 0 {image_speed = 0;}
    if image_index &gt; 0 {image_speed = .5;}
}
if sprite_index = Death_S {image_speed = 0;}
if sprite_index = Hurt_S{
    if image_index = 0 {image_speed = 0;} else {image_speed = .1;}
}
if sprite_index = Throw_S {image_speed = .3;}
if sprite_index = Sword_S{
    if image_index = 0 {image_speed = 0;}
    if image_index &gt; 0 {image_speed = .3;}
}
if sprite_index = FadeIn_S {image_speed = .2;}
if sprite_index = VCall_S {image_speed = .15;}


//Sword
if sprite_index = Sword_S &amp;&amp; image_index = 0{
    attacktimer += 1
    if place_meeting(x-40,y,obj_panel){
       tp[0] = instance_place(x-40,y,obj_panel);
       with(tp[0]) {Target[0] = other.id;}
    }
    if place_meeting(x-80,y,obj_panel){
       tp[1] = instance_place(x-80,y,obj_panel);
       with(tp[1]) {Target[0] = other.id;}
    }
    if place_meeting(x-120,y,obj_panel){
       tp[2] = instance_place(x-120,y,obj_panel);
       with(tp[2]) {Target[0] = other.id;}
    }        
    if attacktimer = room_speed/2{
        attacktimer = 0;
        image_index = 0.1;
    }
}
    
}
else{
    if sprite_index != FadeIn_S || image_alpha = 0{
        image_speed = 0; 
        } 
        if sprite_index = FadeIn_S &amp;&amp; image_alpha = 1 {image_speed = .2;}
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
if movecount &gt; 6 {movecount = 0; viruscall++;}

if bc.Field = FieldS.N{


//Panel Targets
if place_meeting(x+40,y,obj_panel){
    if instance_place(x+40,y,obj_panel).sprite_index = spr_panel_blue &amp;&amp; instance_place(x+40,y,obj_panel).PanelStorage = noone{
        P[0] = instance_place(x+40,y,obj_panel);
    } else {P[0] = noone;} 
}else {P[0] = noone;}

if place_meeting(x-40,y,obj_panel){
    if instance_place(x-40,y,obj_panel).sprite_index = spr_panel_blue &amp;&amp; instance_place(x-40,y,obj_panel).PanelStorage = noone{
        P[1] = instance_place(x-40,y,obj_panel);
    } else {P[1] = noone;} 
}else {P[1] = noone;}

if place_meeting(x,y+24,obj_panel){
    if instance_place(x,y+24,obj_panel).sprite_index = spr_panel_blue &amp;&amp; instance_place(x,y+24,obj_panel).PanelStorage = noone{
        P[2] = instance_place(x,y+24,obj_panel);
    } else {P[2] = noone;} 
}else {P[2] = noone;}

if place_meeting(x,y-24,obj_panel){
    if instance_place(x,y-24,obj_panel).sprite_index = spr_panel_blue &amp;&amp; instance_place(x,y-24,obj_panel).PanelStorage = noone{
        P[3] = instance_place(x,y-24,obj_panel);
    } else {P[3] = noone;} 
}else {P[3] = noone;}

if sprite_index = Base_S &amp;&amp; image_index = 0 &amp;&amp; Wait = id &amp;&amp; Attack = ""{
    movetimer += 1;
    if movetimer &gt; 0{
       if NP = noone {NP = choose(P[0],P[1],P[2],P[3]);}
       if NP != noone{
           if NP.PanelStorage != noone || NP.Broken = true{
               NP = choose(P[0],P[1],P[2],P[3]);
           }
       }
    }    
    if movetimer &gt;= 60+((Order-1)*1){
        movetimer = 0;
        if NP != noone{
            if NP.Broken = false{
                NextPanel = NP;
                image_index = 0.1;
                with(obj_virus){
                    Wait = other.id;
                }
                with(NP){
                    PanelID_Save = other.id;
                    PanelStorage = other.id;
                }
            }
        }
    }
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attacking
if bc.Field = FieldS.N{

player = obj_player;
diff = y-player.y;
if sprite_index = Base_S &amp;&amp; image_index = 0 &amp;&amp; viruscall = 2 &amp;&amp; viruscount &lt; 2 &amp;&amp; Wait = id &amp;&amp; Attack = "" &amp;&amp; instance_number(obj_virus) &lt; 3{
    //VirusCall
    VCall = true;
    viruscall = 0;
    movetimer = 0;
    Attack = "!";
    image_index = 0;
    sprite_index = VCall_S;
    /*bc.Field = FieldS.D;
    with(instance_create(0,0,obj_dim)){
        Name = "VirusCall";
        Placement = "Enemy";
        Owner = other.id;
    }*/
    exit;
}

if sprite_index = Base_S &amp;&amp; image_index = 0 &amp;&amp; movecount = Order+2 &amp;&amp; Wait = id &amp;&amp; Attack = ""{
    //Sword
    movecount++;
    movetimer = 0;
    Attack = "!";
    if instance_place(140,player.y,obj_panel).sprite_index = spr_panel_blue{
        NP = instance_place(140,player.y,obj_panel);        
        event_user(1); 
        if Exit {Exit = false; exit;} 
    }
        if instance_place(180,player.y,obj_panel).sprite_index = spr_panel_blue{
        NP = instance_place(180,player.y,obj_panel);       
        event_user(1);
        if Exit {Exit = false; exit;}  
    }
        if instance_place(220,player.y,obj_panel).sprite_index = spr_panel_blue{
        NP = instance_place(220,player.y,obj_panel);      
        event_user(1);
        if Exit {Exit = false; exit;} 
    }
    image_index = 0;
    image_speed = 0;
    sprite_index = Sword_S;
}

if sprite_index = Base_S &amp;&amp; image_index = 0 &amp;&amp; movecount = Order+5 &amp;&amp; Wait = id &amp;&amp; Attack = ""{
    //MiniBomb
    movecount++;
    movetimer = 0;
    Attack = "!";
    if instance_place(x,player.y,obj_panel).sprite_index = spr_panel_blue{
        NP = instance_place(x,player.y,obj_panel);
        event_user(2);
        if Exit {Exit = false; exit;}
    }
    
    if player.y != 139 &amp;&amp; instance_place(x,player.y+24,obj_panel).sprite_index = spr_panel_blue{
        NP = instance_place(x,player.y+24,obj_panel);
        event_user(2);
        if Exit {Exit = false; exit;}
    } 
    
    if player.y != 91 &amp;&amp; instance_place(x,player.y-24,obj_panel).sprite_index = spr_panel_blue{
        NP = instance_place(x,player.y-24,obj_panel);
        event_user(2);
        if Exit {Exit = false; exit;}
    }
    image_index = 0;
    image_speed = 0;
    sprite_index = Throw_S;
}


}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///HitStun
if bc.Field = FieldS.N{

switch(HitStun){
    case "Heavy":
    HitStun = "";
    Protection = "Invis";
    sprite_index = Hurt_S;
    image_index = 0;
    ShakeTimer = 20;
    FlashTimer = 180;
    f = -0.05;
    savex = x;
    savey = y;
    break;
    
    case "Light-Heavy":
    HitStun = "";
    Protection = "Invis";
    sprite_index = Hurt_S;
    image_index = 0;
    DamageTimer = 20;
    FlashTimer = 180;
    f = -0.05;
    break;       
    
    case "Medium":
    HitStun = "";
    sprite_index = Hurt_S;
    image_index = 0;
    if ShakeTimer = 0{
        savex = IP.x;
        savey = IP.y;
    }
    ShakeTimer = 20;
    break;    
}

if DamageTimer &gt; 0{
    DamageTimer -= 1;
    if DamageTimer = 1 || DamageTimer = 0{
        image_index = 0.1;
        DamageTimer = 0;
        exit;
    }
}

if ShakeTimer &gt; 0{
    ShakeTimer -= 1;
    if ShakeTimer = 1 || ShakeTimer = 0{
        x = savex;
        y = savey;
        image_index = 0.1;
        ShakeTimer = 0;
        exit;
    }
    rx = choose(1,2,3,0,-1,-2,-3,);
    ry = choose(1,2,3,0,-1,-2,-3,);
    x = savex+rx;
    y = savey+ry;
}

if FlashTimer &gt; 0 &amp;&amp; HP &gt; 0{
    FlashTimer -= 1;
    if FlashTimer = 0{
        image_alpha = 1;
        Protection = "None";
        exit;
    }
    image_alpha += f;
    if image_alpha = .25 &amp;&amp; f &lt; 0{
        f = f*-1;
        exit;
    }
    if image_alpha = .5 &amp;&amp; f &gt; 0{
        f = f*-1;
        exit;
    }
}


}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///HitBox
if HitBox{
    //Sword
    if sprite_index = Sword_S &amp;&amp; image_round = 2{
        HitBox = false;
        with(instance_create(x-40,y,obj_sword_effect_long2)){
            image_xscale = -1;
        }
        scr_HitBoxCreation(x-40,y,"Player",30,CElement.Sword,"",0,0,"Light-Heavy",noone);
        scr_HitBoxCreation(x-80,y,"Player",30,CElement.Sword,"",0,0,"Light-Heavy",noone);
        scr_HitBoxCreation(x-120,y,"Player",30,CElement.Sword,"",0,0,"Light-Heavy",noone);
    }
    //MiniBomb
    if sprite_index = Throw_S &amp;&amp; image_index &gt;= 0 &amp;&amp; image_index &lt; 1{
        HitBox = false;
        with(instance_create(x+27,y-17,obj_minibomb_en)){
            Owner = other.id;
            Power = 40;
            StartingX = Owner.x+12;
            StartingY = Owner.y-46;
            Point[1,X] = StartingX-16;
            Point[1,Y] = StartingY-21;
            Point[2,X] = StartingX-48;
            Point[2,Y] = StartingY-21;
            Point[3,X] = StartingX-80;
            Point[3,Y] = StartingY-5;
            Point[4,X] = StartingX-112;
            Point[4,Y] = StartingY+27;
            Point[5,X] = StartingX-132;
            Point[5,Y] = StartingY+46;            
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///MiniBomb
if sprite_index = Throw_S &amp;&amp; instance_exists(obj_minibomb_en){
    with(obj_minibomb_en){
        if Owner = other.id{
            switch(other.image_round){
                case 0:
                x = Owner.x+27;
                y = Owner.y-17;
                break;
                
                case 1:
                x = Owner.x+20;
                y = Owner.y-32;
                break;  
                
                case 2:
                x = Owner.x+12;
                y = Owner.y-46;
                break;                              
            }
            if other.image_index &lt; 3 {Status = "In Hand";}
            if other.image_round = 3 {Status = "Thrown";}
        }
    }
}

if sprite_index != Throw_S &amp;&amp; instance_exists(obj_minibomb_en){
    with(obj_minibomb_en){
        if Owner = other.id &amp;&amp; Status = "In Hand"{
            instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Virus Summoning
if sprite_index = VCall_S &amp;&amp; image_round = 3{
    if HitBox{
        HitBox = false;
        for(i=0; i&lt;8; i++;){
            if choose(1,2) = 1 &amp;&amp; Panel[Red,i].sprite_index = spr_panel_blue &amp;&amp; Panel[Red,i].PanelStorage = noone &amp;&amp; Panel[Red,i].Broken = false{
              vpanel = Panel[Red,i];
              scr_Field_Summoning(virus[viruscount],vpanel);
              exit; 
            }
        }
        for(i=0; i&lt;8; i++;){
            if choose(1,2) = 1 &amp;&amp; Panel[Blue,i].sprite_index = spr_panel_blue &amp;&amp; Panel[Blue,i].PanelStorage = noone &amp;&amp; Panel[Blue,i].Broken = false{
              vpanel = Panel[Blue,i];
              scr_Field_Summoning(virus[viruscount],vpanel);
              exit; 
            }
        }
        if x != Panel[Blue,8].x &amp;&amp; y != Panel[Blue,8].y{
            scr_Field_Summoning(virus[viruscount],Panel[Blue,8]); 
        }else{
            scr_Field_Summoning(virus[viruscount],Panel[Blue,6]); 
        }       
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if NP.x = x &amp;&amp; NP.y = y{
    image_index = 0;
    image_speed = 0;
    sprite_index = Throw_S;
    Exit = true;
    exit;            
}
if NP.x != x || NP.y != y{
    if NP.PanelStorage = noone &amp;&amp; NP.Broken = false{
        with(obj_virus){
            Wait = other.id;
        }       
        event_user(0);
        Attack = "MiniBomb"; 
        Exit = true;    
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if NP.x = x &amp;&amp; NP.y = y{
    image_index = 0;
    image_speed = 0;
    sprite_index = Sword_S;
    Exit = true;            
}
if NP.x != x || NP.y != y{
    if NP.PanelStorage = noone &amp;&amp; NP.Broken = false{
        with(obj_virus){
            Wait = other.id;
        }
        with(NP){
            PanelID_Save = other.id;
            PanelStorage = other.id;
        }               
        event_user(0);
        Attack = "Sword"; 
        Exit = true;    
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = Base_S;
image_index = 0.1;
NextPanel = NP;
with(NP){
    PanelID_Save = other.id;
    PanelStorage = other.id;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>HitBox = true;
with(obj_panel){
    if Target[0] = other.id {Target[0] = noone;}
}

if sprite_index = VCall_S{
    image_index = 0;
    sprite_index = Base_S;
    viruscount++;
    VCall = false;
    Attack = "";
    /*with(obj_dim){
        bc.Field = FieldS.N;
        instance_destroy();
    }*/
    exit;
}

if sprite_index = Hurt_S{
    movetimer = 0;
    Attack = "";
    sprite_index = Base_S;
    image_index = 0;
    image_speed = 0;
    NP = instance_place(x,y,obj_panel);
    NextPanel = NP;
    exit;
}

if sprite_index = Base_S{
    if Attack = "Sword"{
        x = NextPanel.x;
        y = NextPanel.y;
        image_index = 0;
        image_speed = 0;
        sprite_index = Sword_S;
        if NP != noone{
            NP.PanelID_Save = noone;
            NP = noone;
        }
        NextPanel = noone;
        exit;
    }
    if Attack = "MiniBomb"{
        x = NextPanel.x;
        y = NextPanel.y;
        image_index = 0;
        image_speed = 0;
        sprite_index = Throw_S;
        NP = noone;
        NextPanel = noone;
        exit;
    }    
    x = NextPanel.x;
    y = NextPanel.y;
    image_index = 0;
    movecount += 1;
    if NP != noone{
        NP.PanelID_Save = noone;
        NP = noone;
    }
    NextPanel = noone;
    with(obj_virus){
        Wait = id;
    }
    exit;
}

if sprite_index = Sword_S{
    Attack = "";
    NP = noone;
    NextPanel = noone;    
    image_index = 0;
    sprite_index = Base_S;
    with(obj_virus){
        Wait = id;
    }
}

if sprite_index = Throw_S{
    Attack = "";
    NP = noone;
    NextPanel = noone;    
    image_index = 0;
    sprite_index = Base_S;
    with(obj_virus){
        Wait = id;
    }
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
