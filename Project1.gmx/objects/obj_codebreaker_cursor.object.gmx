<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_stream_button_cursor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_chip_icon</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = .1;
movetimer[0] = 0;
movetimer[1] = 0;
bc = obj_battlecontroller;
pc = obj_playercontroller;
cm = obj_chip_menu;
ic = noone;
Move = true;
Box = false;

c = 1;

Code[1] = "A";
Code[2] = "B";
Code[3] = "C";
Code[4] = "D";
Code[5] = "E";
Code[6] = "F";
Code[7] = "G";
Code[8] = "H";
Code[9] = "I";
Code[10] = "J";
Code[11] = "K";
Code[12] = "L";
Code[13] = "M";
Code[14] = "N";
Code[15] = "O";
Code[16] = "P";
Code[17] = "Q";
Code[18] = "R";
Code[19] = "S";
Code[20] = "T";
Code[21] = "U";
Code[22] = "V";
Code[23] = "W";
Code[24] = "X";
Code[25] = "Y";
Code[26] = "Z";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
if Move{

if place_meeting(x,y,obj_chip){
    ic = instance_place(x,y,obj_chip);
    with(cm){
        ic = other.ic;
    }
}

move[0] = (bc.key_left * -1) + bc.key_right;
move[1] = (bc.key_up * -1) + bc.key_down;

//Pressed
if x = xstart+(16*5) &amp;&amp; y = ystart &amp;&amp; instance_exists(obj_stream_power_button){
    if bc.key_down_p{
        y += 22;
        exit;
    }
}
if x = xstart+(16*5) &amp;&amp; y = ystart+22 &amp;&amp; instance_exists(obj_stream_power_button){
    if bc.key_up_p{
        y -= 22;
        exit;
    }
}

if bc.key_right_p &amp;&amp; !bc.key_left_p &amp;&amp; !bc.key_up_p &amp;&amp; !bc.key_down_p{
    if x != xstart+(16*4) &amp;&amp; y = ystart{
        x += 16;
        exit;
    } if x = xstart+(16*4) &amp;&amp; y = ystart {x = xstart;}
    
    if x != xstart+(16*2) &amp;&amp; y = ystart+24{
        x += 16;
        exit;
    } if x = xstart+(16*2) &amp;&amp; y = ystart+24 {x = xstart+(16*4); y = ystart;}    
}
if !bc.key_right_p &amp;&amp; bc.key_left_p &amp;&amp; !bc.key_up_p &amp;&amp; !bc.key_down_p{
    if x != xstart &amp;&amp; y = ystart{
        x -= 16;
        exit;
    } if x = xstart &amp;&amp; y = ystart {x = xstart+(16*4);}
    
    if x != xstart &amp;&amp; y = ystart+24{
        x -= 16;
        exit;
    } if x = xstart &amp;&amp; y = ystart+24 {x = xstart+(16*4); y = ystart;}    
}

if !bc.key_right_p &amp;&amp; !bc.key_left_p &amp;&amp; !bc.key_up_p &amp;&amp; bc.key_down_p{
    if y != ystart+24 &amp;&amp; x &lt; xstart+(16*3){
        y += 24;
        exit;
    } if y = ystart+24 &amp;&amp; x &lt; xstart+(16*3) {y = ystart;}
}
if !bc.key_right_p &amp;&amp; !bc.key_left_p &amp;&amp; bc.key_up_p &amp;&amp; !bc.key_down_p{
    if y = ystart+24 &amp;&amp; x &lt; xstart+(16*3){
        y -= 24;
        exit;
    } if y != ystart+24 &amp;&amp; x &lt; xstart+(16*3) {y = ystart+24;}
}


}
/*/Hold
switch(move[0]){
    case 0:
    movetimer[0] = 0;
    break;
    
    case 1:
    movetimer[0] += 1;
    if movetimer[0] = 12 {event_user(0); movetimer[0] = 0;}
    break;
    
    case -1:
    movetimer[0] -= 1;
    if movetimer[0] = -12 {event_user(1); movetimer[0] = 0;}
    break;    
}

switch(move[1]){
    case 0:
    movetimer[1] = 0;
    break;
    
    case 1:
    movetimer[1] += 1;
    if movetimer[1] = 12 {event_user(2); movetimer[1] = 0;}
    break;
    
    case -1:
    movetimer[1] -= 1;
    if movetimer[1] = -12 {event_user(3); movetimer[1] = 0;}
    break;    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Chip Selection
if Move{

if place_meeting(x,y,obj_chip){
    if ic.Selected = false &amp;&amp; bc.key_a_p{
        Move = false;
        Box = true;
        exit;
    }
}

}else{
    if bc.key_b_p{
        Move = true;
        Box = false;
        exit;
    }
}

if Box{
    if bc.key_up_p{
        if c != 1 {c--; exit;}
        if c = 1 {c = 26; exit;}
    }
    if bc.key_down_p{
        if c != 26 {c++; exit;}
        if c = 26 {c = 1; exit;}
    }
    
    if bc.key_a_p{
        ic.Code = Code[c];
        obj_player.sb_count -= 1;
        instance_create(cm.x,cm.y,obj_chip_cursor);
        instance_destroy();                
        exit;
    }    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_set_color(c_white);


if place_meeting(x,y,obj_chip) &amp;&amp; ic != noone{
    with(cm){
        //Name
        draw_set_font(bc.Chip_Font);
        draw_text(x-272,y+13,ic.Name);
        //Code
        draw_set_font(bc.Code_Font_Big);
        draw_text(x,y,ic.Code);
        //Pic -233 81
        draw_sprite(spr_chip_pic,ic.Pic,x,y,);
        //Element
        draw_sprite(spr_chip_element,ic.Element,x,y,);
        //Power
        draw_set_font(bc.Chip_Font);
        if ic.Power &gt; 0 {draw_text(x-228,y+81,string(ic.Power));}
    }
}

if !place_meeting(x,y,obj_chip){
    if x != xstart+(16*5){
        with(cm){
            draw_sprite(spr_chip_pic,ChipP.NoData,x,y);
        }
    }
    if x = xstart+(16*5){
        with(cm){
            draw_sprite(spr_chip_pic,ChipP.SendData,x,y);
        }
    }    
}

if Box{
    draw_sprite(spr_codebreaker_box,0,cm.x,cm.y);
    draw_set_font(bc.Chip_Font);
    draw_set_color(c_yellow);
    draw_text(cm.x-224,cm.y+93,Code[c]);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
