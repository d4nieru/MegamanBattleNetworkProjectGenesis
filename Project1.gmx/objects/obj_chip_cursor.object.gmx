<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_chip_cursor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_chip_icon</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = .1;
movetimer[0] = 0;
movetimer[1] = 0;
bc = obj_battlecontroller;
pc = obj_playercontroller;
cm = obj_chip_menu;
ic = noone;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sprite Control
if x = xstart+(16*5) &amp;&amp; y = ystart || x = xstart+(16*5) &amp;&amp; y = ystart+22{
    sprite_index = spr_chip_cursor2;
} else{
    sprite_index = spr_chip_cursor;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
move[0] = (bc.key_left * -1) + bc.key_right;
move[1] = (bc.key_up * -1) + bc.key_down;

//Pressed
if x = xstart+(16*5) &amp;&amp; y = ystart &amp;&amp; instance_exists(obj_stream_power_button){
    if bc.key_down_p{
        y += 22;
        exit;
    }
}
if x = xstart+(16*5) &amp;&amp; y = ystart+22 &amp;&amp; instance_exists(obj_stream_power_button){
    if bc.key_up_p{
        y -= 22;
        exit;
    }
}

if bc.key_right_p &amp;&amp; !bc.key_left_p &amp;&amp; !bc.key_up_p &amp;&amp; !bc.key_down_p{
    if x != xstart+(16*5) &amp;&amp; y = ystart{
        x += 16;
        exit;
    } if x = xstart+(16*5) &amp;&amp; y = ystart {x = xstart;}
    
    if x != xstart+(16*2) &amp;&amp; y = ystart+24{
        x += 16;
        exit;
    } if x = xstart+(16*2) &amp;&amp; y = ystart+24 {x = xstart+(16*5); y = ystart;}    
}
if !bc.key_right_p &amp;&amp; bc.key_left_p &amp;&amp; !bc.key_up_p &amp;&amp; !bc.key_down_p{
    if x != xstart &amp;&amp; y = ystart{
        x -= 16;
        exit;
    } if x = xstart &amp;&amp; y = ystart {x = xstart+(16*5);}
    
    if x != xstart &amp;&amp; y = ystart+24{
        x -= 16;
        exit;
    } if x = xstart &amp;&amp; y = ystart+24 {x = xstart+(16*5); y = ystart;}    
}

if !bc.key_right_p &amp;&amp; !bc.key_left_p &amp;&amp; !bc.key_up_p &amp;&amp; bc.key_down_p{
    if y != ystart+24 &amp;&amp; x &lt; xstart+(16*3){
        y += 24;
        exit;
    } if y = ystart+24 &amp;&amp; x &lt; xstart+(16*3) {y = ystart;}
}
if !bc.key_right_p &amp;&amp; !bc.key_left_p &amp;&amp; bc.key_up_p &amp;&amp; !bc.key_down_p{
    if y = ystart+24 &amp;&amp; x &lt; xstart+(16*3){
        y -= 24;
        exit;
    } if y != ystart+24 &amp;&amp; x &lt; xstart+(16*3) {y = ystart+24;}
}

//Hold
switch(move[0]){
    case 0:
    movetimer[0] = 0;
    break;
    
    case 1:
    movetimer[0] += 1;
    if movetimer[0] = 12 {event_user(0); movetimer[0] = 0;}
    break;
    
    case -1:
    movetimer[0] -= 1;
    if movetimer[0] = -12 {event_user(1); movetimer[0] = 0;}
    break;    
}

switch(move[1]){
    case 0:
    movetimer[1] = 0;
    break;
    
    case 1:
    movetimer[1] += 1;
    if movetimer[1] = 12 {event_user(2); movetimer[1] = 0;}
    break;
    
    case -1:
    movetimer[1] -= 1;
    if movetimer[1] = -12 {event_user(3); movetimer[1] = 0;}
    break;    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Confirming the Chip Menu
if bc.key_start{
    x = xstart+(16*5);
    y = ystart;
}

if x = xstart+(16*5) &amp;&amp; y = ystart{
    if bc.key_a{
        instance_destroy();
        pc.ChipLimit = pc.MaxChipLimit;
        with(obj_chip){
            if !Selected{
                ds_list_insert(ChipDeck,0,Object);
                instance_destroy();
            }
            if Selected{
                instance_destroy();
            }
        }        
        scr_ChipMenu_Path(-1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Chip management
if place_meeting(x,y,obj_chip){
    ic = instance_place(x,y,obj_chip);
    with(cm){
        ic = other.ic;
    }
}

//Selecting Chips
if place_meeting(x,y,obj_chip){
    if ic.Selected = false &amp;&amp; ic.Cancel = false{
        if bc.key_a_p{
            for(i=1; i&lt;6; i++;){
                if pc.ChipSlot[i,pc.Name] = ""{
                    ic.Selected = true;
                    pc.ChipSlot[i,pc.Name] = ic.Name;
                    pc.ChipSlot[i,pc.Code] = ic.Code;
                    pc.ChipSlot[i,pc.Power] = ic.Power;
                    pc.ChipSlot[i,pc.Element] = ic.Element;
                    pc.ChipSlot[i,pc.Icon] = ic.Icon;
                    pc.ChipSlot[i,pc.Dim] = ic.Dim;
                    pc.ChipSlot[i,pc.ID] = ic.id;
                    exit;
                }
            }
        }
    }
}

//Deselecting Chips
if bc.key_b_p{
    for(i=5;i&gt;0;i-=1;){
        if pc.ChipSlot[i,pc.Name] != "" &amp;&amp; pc.ChipSlot[i,pc.Icon] != ChipI.WhiteStar{
            pc.ChipSlot[i,pc.ID].Selected = false;
            pc.ChipSlot[i,pc.Name] = "";
            pc.ChipSlot[i,pc.Code] = "";
            pc.ChipSlot[i,pc.Power] = -1;
            pc.ChipSlot[i,pc.Element] = -1;
            pc.ChipSlot[i,pc.Icon] = -1;
            pc.ChipSlot[i,pc.Dim] = -1;
            pc.ChipSlot[i,pc.ID] = -1;
            exit;            
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Confirming Stream Effect
if x = xstart+(16*5) &amp;&amp; y = ystart+22{
    if bc.key_a_p &amp;&amp; obj_stream_power_button.Button = "On"{
        switch(pc.StreamButton){
            case "Heel":
            instance_destroy();
            instance_create(cm.x+90,cm.y-86,obj_button_cursor_heel);
            break;
            
            case "Erase":
            instance_destroy();
            instance_create(cm.x+90,cm.y-86,obj_button_cursor_erase);
            break;
            
            case "Number":
            instance_destroy();
            instance_create(cm.x+90,cm.y-86,obj_button_cursor_number);
            break;
            
            case "Napalm":
            instance_destroy();
            instance_create(cm.x+90,cm.y-86,obj_button_cursor_napalm);
            break;                         
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if y = ystart+24 &amp;&amp; x &lt; xstart+(16*3){
    y -= 24;
    exit;
} if y != ystart+24 &amp;&amp; x &lt; xstart+(16*3) {y = ystart+24;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hold Down
if y != ystart+24 &amp;&amp; x &lt; xstart+(16*3){
    y += 24;
    exit;
} if y = ystart+24 &amp;&amp; x &lt; xstart+(16*3) {y = ystart;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hold Left
if x != xstart &amp;&amp; y = ystart{
    x -= 16;
    exit;
} if x = xstart &amp;&amp; y = ystart {x = xstart+(16*5);}
    
if x != xstart &amp;&amp; y = ystart+24{
    x -= 16;
    exit;
} if x = xstart &amp;&amp; y = ystart+24 {x = xstart+(16*5); y = ystart;} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hold Right
if x != xstart+(16*5) &amp;&amp; y = ystart{
    x += 16;
    exit;
} if x = xstart+(16*5) &amp;&amp; y = ystart {x = xstart;}
    
if x != xstart+(16*2) &amp;&amp; y = ystart+24{
    x += 16;
    exit;
} if x = xstart+(16*2) &amp;&amp; y = ystart+24 {x = xstart+(16*5); y = ystart;}   
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_set_color(c_white);


if place_meeting(x,y,obj_chip) &amp;&amp; ic != noone{
    with(cm){
        //Name
        draw_set_font(bc.Chip_Font);
        draw_text(x-272,y+13,ic.Name);
        //Code
        draw_set_font(bc.Code_Font_Big);
        draw_text(x,y,ic.Code);
        //Pic -233 81
        draw_sprite(spr_chip_pic,ic.Pic,x,y,);
        //Element
        draw_sprite(spr_chip_element,ic.Element,x,y,);
        //Power
        draw_set_font(bc.Chip_Font);
        if ic.Power &gt; 0 {draw_text(x-228,y+81,string(ic.Power));}
    }
}

if !place_meeting(x,y,obj_chip){
    if x != xstart+(16*5){
        with(cm){
            draw_sprite(spr_chip_pic,ChipP.NoData,x,y);
        }
    }
    if x = xstart+(16*5){
        with(cm){
            draw_sprite(spr_chip_pic,ChipP.SendData,x,y);
        }
    }    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
